{
  "apiInfo": {
    "title": "ResourceManagementClient",
    "version": "2021-01-01",
    "description": "Provides operations for working with resources and resource groups."
  },
  "generated": [
    {
      "operationId": "Operations_List",
      "javaSnippet": "// Operations_List\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Resources/operations?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Operations_List\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/providers/Microsoft.Resources/operations? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Operations_List\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/providers/Microsoft.Resources/operations?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Operations_List {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String name;\n    Display display;\n  \n    class Display {\n      String provider;\n      String resource;\n      String operation;\n      String description;\n    }\n  }\n}\n\n",
      "csharpModel": "class Operations_List {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String name;\n    Display display;\n  \n    class Display {\n      String provider;\n      String resource;\n      String operation;\n      String description;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_DeleteAtScope",
      "javaSnippet": "// Deployments_DeleteAtScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .DELETE()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_DeleteAtScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.delete(\n  \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_DeleteAtScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Delete, \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_CheckExistenceAtScope",
      "javaSnippet": "// Deployments_CheckExistenceAtScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .HEAD()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CheckExistenceAtScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.head(\n  \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CheckExistenceAtScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Head, \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_CreateOrUpdateAtScope",
      "javaSnippet": "// Deployments_CreateOrUpdateAtScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PUT(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CreateOrUpdateAtScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.put(\n  \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CreateOrUpdateAtScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Put, \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Deployments_CreateOrUpdateAtScope - body.json:\n\n{\n  \"location\": ...,\n  \"properties\": ...,\n  \"tags\": ...\n}\n\n",
      "javaModel": "class Deployments_CreateOrUpdateAtScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_CreateOrUpdateAtScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_GetAtScope",
      "javaSnippet": "// Deployments_GetAtScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_GetAtScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_GetAtScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_GetAtScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_GetAtScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_CancelAtScope",
      "javaSnippet": "// Deployments_CancelAtScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CancelAtScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CancelAtScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_ValidateAtScope",
      "javaSnippet": "// Deployments_ValidateAtScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/validate?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_ValidateAtScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/validate? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_ValidateAtScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/validate?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Deployments_ValidateAtScope - body.json:\n\n{\n  \"location\": ...,\n  \"properties\": ...,\n  \"tags\": ...\n}\n\n",
      "javaModel": "class Deployments_ValidateAtScope {\n  Object error;\n  Properties properties;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_ValidateAtScope {\n  Object error;\n  Properties properties;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_ExportTemplateAtScope",
      "javaSnippet": "// Deployments_ExportTemplateAtScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_ExportTemplateAtScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_ExportTemplateAtScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_ExportTemplateAtScope {\n  Object template;\n}\n\n",
      "csharpModel": "class Deployments_ExportTemplateAtScope {\n  Object template;\n}\n\n"
    },
    {
      "operationId": "Deployments_ListAtScope",
      "javaSnippet": "// Deployments_ListAtScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_ListAtScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_ListAtScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_ListAtScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String name;\n    String type;\n    String location;\n    Properties properties;\n    Object tags;\n  \n    class Properties {\n      String provisioningState;\n      String correlationId;\n      String timestamp;\n      String duration;\n      Object outputs;\n      List<Provider> providers;\n      List<Dependency> dependencies;\n      TemplateLink templateLink;\n      Object parameters;\n      ParametersLink parametersLink;\n      String mode;\n      DebugSetting debugSetting;\n      OnErrorDeployment onErrorDeployment;\n      String templateHash;\n      List<OutputResource> outputResources;\n      List<ValidatedResource> validatedResources;\n      Object error;\n    \n      class TemplateLink {\n        String uri;\n        String id;\n        String relativePath;\n        String contentVersion;\n        String queryString;\n      }\n    \n      class ParametersLink {\n        String uri;\n        String contentVersion;\n      }\n    \n      class DebugSetting {\n        String detailLevel;\n      }\n    \n      class OnErrorDeployment {\n        String provisioningState;\n        String type;\n        String deploymentName;\n      }\n    \n      class Provider {\n        String id;\n        String namespace;\n        String registrationState;\n        String registrationPolicy;\n        List<ResourceType> resourceTypes;\n      \n        class ResourceType {\n          String resourceType;\n          List<String> locations;\n          List<LocationMapping> locationMappings;\n          List<Alias> aliases;\n          List<String> apiVersions;\n          String defaultApiVersion;\n          List<ZoneMapping> zoneMappings;\n          List<ApiProfile> apiProfiles;\n          String capabilities;\n          Object properties;\n        \n          class LocationMapping {\n            String location;\n            String type;\n            List<String> extendedLocations;\n          }\n        \n          class Alias {\n            String name;\n            List<Path> paths;\n            String type;\n            String defaultPath;\n            DefaultPattern defaultPattern;\n            DefaultMetadata defaultMetadata;\n          \n            class DefaultPattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class DefaultMetadata {\n              String type;\n              String attributes;\n            }\n          \n            class Path {\n              String path;\n              List<String> apiVersions;\n              Pattern pattern;\n              Metadata metadata;\n            \n              class Pattern {\n                String phrase;\n                String variable;\n                String type;\n              }\n            \n              class Metadata {\n                String type;\n                String attributes;\n              }\n            }\n          }\n        \n          class ZoneMapping {\n            String location;\n            List<String> zones;\n          }\n        \n          class ApiProfile {\n            String profileVersion;\n            String apiVersion;\n          }\n        }\n      }\n    \n      class Dependency {\n        List<DependsOn> dependsOn;\n        String id;\n        String resourceType;\n        String resourceName;\n      \n        class DependsOn {\n          String id;\n          String resourceType;\n          String resourceName;\n        }\n      }\n    \n      class OutputResource {\n        String id;\n      }\n    \n      class ValidatedResource {\n        String id;\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_ListAtScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String name;\n    String type;\n    String location;\n    Properties properties;\n    Object tags;\n  \n    class Properties {\n      String provisioningState;\n      String correlationId;\n      String timestamp;\n      String duration;\n      Object outputs;\n      List<Provider> providers;\n      List<Dependency> dependencies;\n      TemplateLink templateLink;\n      Object parameters;\n      ParametersLink parametersLink;\n      String mode;\n      DebugSetting debugSetting;\n      OnErrorDeployment onErrorDeployment;\n      String templateHash;\n      List<OutputResource> outputResources;\n      List<ValidatedResource> validatedResources;\n      Object error;\n    \n      class TemplateLink {\n        String uri;\n        String id;\n        String relativePath;\n        String contentVersion;\n        String queryString;\n      }\n    \n      class ParametersLink {\n        String uri;\n        String contentVersion;\n      }\n    \n      class DebugSetting {\n        String detailLevel;\n      }\n    \n      class OnErrorDeployment {\n        String provisioningState;\n        String type;\n        String deploymentName;\n      }\n    \n      class Provider {\n        String id;\n        String @namespace;\n        String registrationState;\n        String registrationPolicy;\n        List<ResourceType> resourceTypes;\n      \n        class ResourceType {\n          String resourceType;\n          List<String> locations;\n          List<LocationMapping> locationMappings;\n          List<Alias> aliases;\n          List<String> apiVersions;\n          String defaultApiVersion;\n          List<ZoneMapping> zoneMappings;\n          List<ApiProfile> apiProfiles;\n          String capabilities;\n          Object properties;\n        \n          class LocationMapping {\n            String location;\n            String type;\n            List<String> extendedLocations;\n          }\n        \n          class Alias {\n            String name;\n            List<Path> paths;\n            String type;\n            String defaultPath;\n            DefaultPattern defaultPattern;\n            DefaultMetadata defaultMetadata;\n          \n            class DefaultPattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class DefaultMetadata {\n              String type;\n              String attributes;\n            }\n          \n            class Path {\n              String path;\n              List<String> apiVersions;\n              Pattern pattern;\n              Metadata metadata;\n            \n              class Pattern {\n                String phrase;\n                String variable;\n                String type;\n              }\n            \n              class Metadata {\n                String type;\n                String attributes;\n              }\n            }\n          }\n        \n          class ZoneMapping {\n            String location;\n            List<String> zones;\n          }\n        \n          class ApiProfile {\n            String profileVersion;\n            String apiVersion;\n          }\n        }\n      }\n    \n      class Dependency {\n        List<DependsOn> dependsOn;\n        String id;\n        String resourceType;\n        String resourceName;\n      \n        class DependsOn {\n          String id;\n          String resourceType;\n          String resourceName;\n        }\n      }\n    \n      class OutputResource {\n        String id;\n      }\n    \n      class ValidatedResource {\n        String id;\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_DeleteAtTenantScope",
      "javaSnippet": "// Deployments_DeleteAtTenantScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .DELETE()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_DeleteAtTenantScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.delete(\n  \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_DeleteAtTenantScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Delete, \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_CheckExistenceAtTenantScope",
      "javaSnippet": "// Deployments_CheckExistenceAtTenantScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .HEAD()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CheckExistenceAtTenantScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.head(\n  \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CheckExistenceAtTenantScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Head, \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_CreateOrUpdateAtTenantScope",
      "javaSnippet": "// Deployments_CreateOrUpdateAtTenantScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PUT(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CreateOrUpdateAtTenantScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.put(\n  \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CreateOrUpdateAtTenantScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Put, \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Deployments_CreateOrUpdateAtTenantScope - body.json:\n\n{\n  \"location\": ...,\n  \"properties\": ...,\n  \"tags\": ...\n}\n\n",
      "javaModel": "class Deployments_CreateOrUpdateAtTenantScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_CreateOrUpdateAtTenantScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_GetAtTenantScope",
      "javaSnippet": "// Deployments_GetAtTenantScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_GetAtTenantScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_GetAtTenantScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_GetAtTenantScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_GetAtTenantScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_CancelAtTenantScope",
      "javaSnippet": "// Deployments_CancelAtTenantScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/cancel?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CancelAtTenantScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/cancel? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CancelAtTenantScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/cancel?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_ValidateAtTenantScope",
      "javaSnippet": "// Deployments_ValidateAtTenantScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/validate?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_ValidateAtTenantScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/validate? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_ValidateAtTenantScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/validate?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Deployments_ValidateAtTenantScope - body.json:\n\n{\n  \"location\": ...,\n  \"properties\": ...,\n  \"tags\": ...\n}\n\n",
      "javaModel": "class Deployments_ValidateAtTenantScope {\n  Object error;\n  Properties properties;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_ValidateAtTenantScope {\n  Object error;\n  Properties properties;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_WhatIfAtTenantScope",
      "javaSnippet": "// Deployments_WhatIfAtTenantScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_WhatIfAtTenantScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_WhatIfAtTenantScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Deployments_WhatIfAtTenantScope - body.json:\n\n{\n  \"location\": ...,\n  \"properties\": ...\n}\n\n",
      "javaModel": "class Deployments_WhatIfAtTenantScope {\n  String status;\n  Properties properties;\n  Object error;\n\n  class Properties {\n    List<Change> changes;\n  \n    class Change {\n      String resourceId;\n      String changeType;\n      String unsupportedReason;\n      Object before;\n      Object after;\n      List<Delta> delta;\n    \n      class Delta {\n        String path;\n        String propertyChangeType;\n        Object before;\n        Object after;\n        List<Child> children;\n      \n        class Child {\n          String path;\n          String propertyChangeType;\n          Object before;\n          Object after;\n          List<Child> children;\n        }\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_WhatIfAtTenantScope {\n  String status;\n  Properties properties;\n  Object error;\n\n  class Properties {\n    List<Change> changes;\n  \n    class Change {\n      String resourceId;\n      String changeType;\n      String unsupportedReason;\n      Object before;\n      Object after;\n      List<Delta> delta;\n    \n      class Delta {\n        String path;\n        String propertyChangeType;\n        Object before;\n        Object after;\n        List<Child> children;\n      \n        class Child {\n          String path;\n          String propertyChangeType;\n          Object before;\n          Object after;\n          List<Child> children;\n        }\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_ExportTemplateAtTenantScope",
      "javaSnippet": "// Deployments_ExportTemplateAtTenantScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_ExportTemplateAtTenantScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_ExportTemplateAtTenantScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_ExportTemplateAtTenantScope {\n  Object template;\n}\n\n",
      "csharpModel": "class Deployments_ExportTemplateAtTenantScope {\n  Object template;\n}\n\n"
    },
    {
      "operationId": "Deployments_ListAtTenantScope",
      "javaSnippet": "// Deployments_ListAtTenantScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Resources/deployments/?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_ListAtTenantScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_ListAtTenantScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_ListAtTenantScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String name;\n    String type;\n    String location;\n    Properties properties;\n    Object tags;\n  \n    class Properties {\n      String provisioningState;\n      String correlationId;\n      String timestamp;\n      String duration;\n      Object outputs;\n      List<Provider> providers;\n      List<Dependency> dependencies;\n      TemplateLink templateLink;\n      Object parameters;\n      ParametersLink parametersLink;\n      String mode;\n      DebugSetting debugSetting;\n      OnErrorDeployment onErrorDeployment;\n      String templateHash;\n      List<OutputResource> outputResources;\n      List<ValidatedResource> validatedResources;\n      Object error;\n    \n      class TemplateLink {\n        String uri;\n        String id;\n        String relativePath;\n        String contentVersion;\n        String queryString;\n      }\n    \n      class ParametersLink {\n        String uri;\n        String contentVersion;\n      }\n    \n      class DebugSetting {\n        String detailLevel;\n      }\n    \n      class OnErrorDeployment {\n        String provisioningState;\n        String type;\n        String deploymentName;\n      }\n    \n      class Provider {\n        String id;\n        String namespace;\n        String registrationState;\n        String registrationPolicy;\n        List<ResourceType> resourceTypes;\n      \n        class ResourceType {\n          String resourceType;\n          List<String> locations;\n          List<LocationMapping> locationMappings;\n          List<Alias> aliases;\n          List<String> apiVersions;\n          String defaultApiVersion;\n          List<ZoneMapping> zoneMappings;\n          List<ApiProfile> apiProfiles;\n          String capabilities;\n          Object properties;\n        \n          class LocationMapping {\n            String location;\n            String type;\n            List<String> extendedLocations;\n          }\n        \n          class Alias {\n            String name;\n            List<Path> paths;\n            String type;\n            String defaultPath;\n            DefaultPattern defaultPattern;\n            DefaultMetadata defaultMetadata;\n          \n            class DefaultPattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class DefaultMetadata {\n              String type;\n              String attributes;\n            }\n          \n            class Path {\n              String path;\n              List<String> apiVersions;\n              Pattern pattern;\n              Metadata metadata;\n            \n              class Pattern {\n                String phrase;\n                String variable;\n                String type;\n              }\n            \n              class Metadata {\n                String type;\n                String attributes;\n              }\n            }\n          }\n        \n          class ZoneMapping {\n            String location;\n            List<String> zones;\n          }\n        \n          class ApiProfile {\n            String profileVersion;\n            String apiVersion;\n          }\n        }\n      }\n    \n      class Dependency {\n        List<DependsOn> dependsOn;\n        String id;\n        String resourceType;\n        String resourceName;\n      \n        class DependsOn {\n          String id;\n          String resourceType;\n          String resourceName;\n        }\n      }\n    \n      class OutputResource {\n        String id;\n      }\n    \n      class ValidatedResource {\n        String id;\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_ListAtTenantScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String name;\n    String type;\n    String location;\n    Properties properties;\n    Object tags;\n  \n    class Properties {\n      String provisioningState;\n      String correlationId;\n      String timestamp;\n      String duration;\n      Object outputs;\n      List<Provider> providers;\n      List<Dependency> dependencies;\n      TemplateLink templateLink;\n      Object parameters;\n      ParametersLink parametersLink;\n      String mode;\n      DebugSetting debugSetting;\n      OnErrorDeployment onErrorDeployment;\n      String templateHash;\n      List<OutputResource> outputResources;\n      List<ValidatedResource> validatedResources;\n      Object error;\n    \n      class TemplateLink {\n        String uri;\n        String id;\n        String relativePath;\n        String contentVersion;\n        String queryString;\n      }\n    \n      class ParametersLink {\n        String uri;\n        String contentVersion;\n      }\n    \n      class DebugSetting {\n        String detailLevel;\n      }\n    \n      class OnErrorDeployment {\n        String provisioningState;\n        String type;\n        String deploymentName;\n      }\n    \n      class Provider {\n        String id;\n        String @namespace;\n        String registrationState;\n        String registrationPolicy;\n        List<ResourceType> resourceTypes;\n      \n        class ResourceType {\n          String resourceType;\n          List<String> locations;\n          List<LocationMapping> locationMappings;\n          List<Alias> aliases;\n          List<String> apiVersions;\n          String defaultApiVersion;\n          List<ZoneMapping> zoneMappings;\n          List<ApiProfile> apiProfiles;\n          String capabilities;\n          Object properties;\n        \n          class LocationMapping {\n            String location;\n            String type;\n            List<String> extendedLocations;\n          }\n        \n          class Alias {\n            String name;\n            List<Path> paths;\n            String type;\n            String defaultPath;\n            DefaultPattern defaultPattern;\n            DefaultMetadata defaultMetadata;\n          \n            class DefaultPattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class DefaultMetadata {\n              String type;\n              String attributes;\n            }\n          \n            class Path {\n              String path;\n              List<String> apiVersions;\n              Pattern pattern;\n              Metadata metadata;\n            \n              class Pattern {\n                String phrase;\n                String variable;\n                String type;\n              }\n            \n              class Metadata {\n                String type;\n                String attributes;\n              }\n            }\n          }\n        \n          class ZoneMapping {\n            String location;\n            List<String> zones;\n          }\n        \n          class ApiProfile {\n            String profileVersion;\n            String apiVersion;\n          }\n        }\n      }\n    \n      class Dependency {\n        List<DependsOn> dependsOn;\n        String id;\n        String resourceType;\n        String resourceName;\n      \n        class DependsOn {\n          String id;\n          String resourceType;\n          String resourceName;\n        }\n      }\n    \n      class OutputResource {\n        String id;\n      }\n    \n      class ValidatedResource {\n        String id;\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_DeleteAtManagementGroupScope",
      "javaSnippet": "// Deployments_DeleteAtManagementGroupScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .DELETE()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_DeleteAtManagementGroupScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.delete(\n  \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_DeleteAtManagementGroupScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Delete, \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_CheckExistenceAtManagementGroupScope",
      "javaSnippet": "// Deployments_CheckExistenceAtManagementGroupScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .HEAD()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CheckExistenceAtManagementGroupScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.head(\n  \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CheckExistenceAtManagementGroupScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Head, \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_CreateOrUpdateAtManagementGroupScope",
      "javaSnippet": "// Deployments_CreateOrUpdateAtManagementGroupScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PUT(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CreateOrUpdateAtManagementGroupScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.put(\n  \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CreateOrUpdateAtManagementGroupScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Put, \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Deployments_CreateOrUpdateAtManagementGroupScope - body.json:\n\n{\n  \"location\": ...,\n  \"properties\": ...,\n  \"tags\": ...\n}\n\n",
      "javaModel": "class Deployments_CreateOrUpdateAtManagementGroupScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_CreateOrUpdateAtManagementGroupScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_GetAtManagementGroupScope",
      "javaSnippet": "// Deployments_GetAtManagementGroupScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_GetAtManagementGroupScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_GetAtManagementGroupScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_GetAtManagementGroupScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_GetAtManagementGroupScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_CancelAtManagementGroupScope",
      "javaSnippet": "// Deployments_CancelAtManagementGroupScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CancelAtManagementGroupScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CancelAtManagementGroupScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_ValidateAtManagementGroupScope",
      "javaSnippet": "// Deployments_ValidateAtManagementGroupScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_ValidateAtManagementGroupScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_ValidateAtManagementGroupScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Deployments_ValidateAtManagementGroupScope - body.json:\n\n{\n  \"location\": ...,\n  \"properties\": ...,\n  \"tags\": ...\n}\n\n",
      "javaModel": "class Deployments_ValidateAtManagementGroupScope {\n  Object error;\n  Properties properties;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_ValidateAtManagementGroupScope {\n  Object error;\n  Properties properties;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_WhatIfAtManagementGroupScope",
      "javaSnippet": "// Deployments_WhatIfAtManagementGroupScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_WhatIfAtManagementGroupScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_WhatIfAtManagementGroupScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Deployments_WhatIfAtManagementGroupScope - body.json:\n\n{\n  \"location\": ...,\n  \"properties\": ...\n}\n\n",
      "javaModel": "class Deployments_WhatIfAtManagementGroupScope {\n  String status;\n  Properties properties;\n  Object error;\n\n  class Properties {\n    List<Change> changes;\n  \n    class Change {\n      String resourceId;\n      String changeType;\n      String unsupportedReason;\n      Object before;\n      Object after;\n      List<Delta> delta;\n    \n      class Delta {\n        String path;\n        String propertyChangeType;\n        Object before;\n        Object after;\n        List<Child> children;\n      \n        class Child {\n          String path;\n          String propertyChangeType;\n          Object before;\n          Object after;\n          List<Child> children;\n        }\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_WhatIfAtManagementGroupScope {\n  String status;\n  Properties properties;\n  Object error;\n\n  class Properties {\n    List<Change> changes;\n  \n    class Change {\n      String resourceId;\n      String changeType;\n      String unsupportedReason;\n      Object before;\n      Object after;\n      List<Delta> delta;\n    \n      class Delta {\n        String path;\n        String propertyChangeType;\n        Object before;\n        Object after;\n        List<Child> children;\n      \n        class Child {\n          String path;\n          String propertyChangeType;\n          Object before;\n          Object after;\n          List<Child> children;\n        }\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_ExportTemplateAtManagementGroupScope",
      "javaSnippet": "// Deployments_ExportTemplateAtManagementGroupScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_ExportTemplateAtManagementGroupScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_ExportTemplateAtManagementGroupScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_ExportTemplateAtManagementGroupScope {\n  Object template;\n}\n\n",
      "csharpModel": "class Deployments_ExportTemplateAtManagementGroupScope {\n  Object template;\n}\n\n"
    },
    {
      "operationId": "Deployments_ListAtManagementGroupScope",
      "javaSnippet": "// Deployments_ListAtManagementGroupScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_ListAtManagementGroupScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_ListAtManagementGroupScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_ListAtManagementGroupScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String name;\n    String type;\n    String location;\n    Properties properties;\n    Object tags;\n  \n    class Properties {\n      String provisioningState;\n      String correlationId;\n      String timestamp;\n      String duration;\n      Object outputs;\n      List<Provider> providers;\n      List<Dependency> dependencies;\n      TemplateLink templateLink;\n      Object parameters;\n      ParametersLink parametersLink;\n      String mode;\n      DebugSetting debugSetting;\n      OnErrorDeployment onErrorDeployment;\n      String templateHash;\n      List<OutputResource> outputResources;\n      List<ValidatedResource> validatedResources;\n      Object error;\n    \n      class TemplateLink {\n        String uri;\n        String id;\n        String relativePath;\n        String contentVersion;\n        String queryString;\n      }\n    \n      class ParametersLink {\n        String uri;\n        String contentVersion;\n      }\n    \n      class DebugSetting {\n        String detailLevel;\n      }\n    \n      class OnErrorDeployment {\n        String provisioningState;\n        String type;\n        String deploymentName;\n      }\n    \n      class Provider {\n        String id;\n        String namespace;\n        String registrationState;\n        String registrationPolicy;\n        List<ResourceType> resourceTypes;\n      \n        class ResourceType {\n          String resourceType;\n          List<String> locations;\n          List<LocationMapping> locationMappings;\n          List<Alias> aliases;\n          List<String> apiVersions;\n          String defaultApiVersion;\n          List<ZoneMapping> zoneMappings;\n          List<ApiProfile> apiProfiles;\n          String capabilities;\n          Object properties;\n        \n          class LocationMapping {\n            String location;\n            String type;\n            List<String> extendedLocations;\n          }\n        \n          class Alias {\n            String name;\n            List<Path> paths;\n            String type;\n            String defaultPath;\n            DefaultPattern defaultPattern;\n            DefaultMetadata defaultMetadata;\n          \n            class DefaultPattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class DefaultMetadata {\n              String type;\n              String attributes;\n            }\n          \n            class Path {\n              String path;\n              List<String> apiVersions;\n              Pattern pattern;\n              Metadata metadata;\n            \n              class Pattern {\n                String phrase;\n                String variable;\n                String type;\n              }\n            \n              class Metadata {\n                String type;\n                String attributes;\n              }\n            }\n          }\n        \n          class ZoneMapping {\n            String location;\n            List<String> zones;\n          }\n        \n          class ApiProfile {\n            String profileVersion;\n            String apiVersion;\n          }\n        }\n      }\n    \n      class Dependency {\n        List<DependsOn> dependsOn;\n        String id;\n        String resourceType;\n        String resourceName;\n      \n        class DependsOn {\n          String id;\n          String resourceType;\n          String resourceName;\n        }\n      }\n    \n      class OutputResource {\n        String id;\n      }\n    \n      class ValidatedResource {\n        String id;\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_ListAtManagementGroupScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String name;\n    String type;\n    String location;\n    Properties properties;\n    Object tags;\n  \n    class Properties {\n      String provisioningState;\n      String correlationId;\n      String timestamp;\n      String duration;\n      Object outputs;\n      List<Provider> providers;\n      List<Dependency> dependencies;\n      TemplateLink templateLink;\n      Object parameters;\n      ParametersLink parametersLink;\n      String mode;\n      DebugSetting debugSetting;\n      OnErrorDeployment onErrorDeployment;\n      String templateHash;\n      List<OutputResource> outputResources;\n      List<ValidatedResource> validatedResources;\n      Object error;\n    \n      class TemplateLink {\n        String uri;\n        String id;\n        String relativePath;\n        String contentVersion;\n        String queryString;\n      }\n    \n      class ParametersLink {\n        String uri;\n        String contentVersion;\n      }\n    \n      class DebugSetting {\n        String detailLevel;\n      }\n    \n      class OnErrorDeployment {\n        String provisioningState;\n        String type;\n        String deploymentName;\n      }\n    \n      class Provider {\n        String id;\n        String @namespace;\n        String registrationState;\n        String registrationPolicy;\n        List<ResourceType> resourceTypes;\n      \n        class ResourceType {\n          String resourceType;\n          List<String> locations;\n          List<LocationMapping> locationMappings;\n          List<Alias> aliases;\n          List<String> apiVersions;\n          String defaultApiVersion;\n          List<ZoneMapping> zoneMappings;\n          List<ApiProfile> apiProfiles;\n          String capabilities;\n          Object properties;\n        \n          class LocationMapping {\n            String location;\n            String type;\n            List<String> extendedLocations;\n          }\n        \n          class Alias {\n            String name;\n            List<Path> paths;\n            String type;\n            String defaultPath;\n            DefaultPattern defaultPattern;\n            DefaultMetadata defaultMetadata;\n          \n            class DefaultPattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class DefaultMetadata {\n              String type;\n              String attributes;\n            }\n          \n            class Path {\n              String path;\n              List<String> apiVersions;\n              Pattern pattern;\n              Metadata metadata;\n            \n              class Pattern {\n                String phrase;\n                String variable;\n                String type;\n              }\n            \n              class Metadata {\n                String type;\n                String attributes;\n              }\n            }\n          }\n        \n          class ZoneMapping {\n            String location;\n            List<String> zones;\n          }\n        \n          class ApiProfile {\n            String profileVersion;\n            String apiVersion;\n          }\n        }\n      }\n    \n      class Dependency {\n        List<DependsOn> dependsOn;\n        String id;\n        String resourceType;\n        String resourceName;\n      \n        class DependsOn {\n          String id;\n          String resourceType;\n          String resourceName;\n        }\n      }\n    \n      class OutputResource {\n        String id;\n      }\n    \n      class ValidatedResource {\n        String id;\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_DeleteAtSubscriptionScope",
      "javaSnippet": "// Deployments_DeleteAtSubscriptionScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .DELETE()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_DeleteAtSubscriptionScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.delete(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_DeleteAtSubscriptionScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Delete, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_CheckExistenceAtSubscriptionScope",
      "javaSnippet": "// Deployments_CheckExistenceAtSubscriptionScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .HEAD()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CheckExistenceAtSubscriptionScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.head(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CheckExistenceAtSubscriptionScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Head, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_CreateOrUpdateAtSubscriptionScope",
      "javaSnippet": "// Deployments_CreateOrUpdateAtSubscriptionScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PUT(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CreateOrUpdateAtSubscriptionScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.put(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CreateOrUpdateAtSubscriptionScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Put, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Deployments_CreateOrUpdateAtSubscriptionScope - body.json:\n\n{\n  \"location\": ...,\n  \"properties\": ...,\n  \"tags\": ...\n}\n\n",
      "javaModel": "class Deployments_CreateOrUpdateAtSubscriptionScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_CreateOrUpdateAtSubscriptionScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_GetAtSubscriptionScope",
      "javaSnippet": "// Deployments_GetAtSubscriptionScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_GetAtSubscriptionScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_GetAtSubscriptionScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_GetAtSubscriptionScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_GetAtSubscriptionScope {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_CancelAtSubscriptionScope",
      "javaSnippet": "// Deployments_CancelAtSubscriptionScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CancelAtSubscriptionScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CancelAtSubscriptionScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_ValidateAtSubscriptionScope",
      "javaSnippet": "// Deployments_ValidateAtSubscriptionScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_ValidateAtSubscriptionScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_ValidateAtSubscriptionScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Deployments_ValidateAtSubscriptionScope - body.json:\n\n{\n  \"location\": ...,\n  \"properties\": ...,\n  \"tags\": ...\n}\n\n",
      "javaModel": "class Deployments_ValidateAtSubscriptionScope {\n  Object error;\n  Properties properties;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_ValidateAtSubscriptionScope {\n  Object error;\n  Properties properties;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_WhatIfAtSubscriptionScope",
      "javaSnippet": "// Deployments_WhatIfAtSubscriptionScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_WhatIfAtSubscriptionScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_WhatIfAtSubscriptionScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Deployments_WhatIfAtSubscriptionScope - body.json:\n\n{\n  \"location\": ...,\n  \"properties\": ...\n}\n\n",
      "javaModel": "class Deployments_WhatIfAtSubscriptionScope {\n  String status;\n  Properties properties;\n  Object error;\n\n  class Properties {\n    List<Change> changes;\n  \n    class Change {\n      String resourceId;\n      String changeType;\n      String unsupportedReason;\n      Object before;\n      Object after;\n      List<Delta> delta;\n    \n      class Delta {\n        String path;\n        String propertyChangeType;\n        Object before;\n        Object after;\n        List<Child> children;\n      \n        class Child {\n          String path;\n          String propertyChangeType;\n          Object before;\n          Object after;\n          List<Child> children;\n        }\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_WhatIfAtSubscriptionScope {\n  String status;\n  Properties properties;\n  Object error;\n\n  class Properties {\n    List<Change> changes;\n  \n    class Change {\n      String resourceId;\n      String changeType;\n      String unsupportedReason;\n      Object before;\n      Object after;\n      List<Delta> delta;\n    \n      class Delta {\n        String path;\n        String propertyChangeType;\n        Object before;\n        Object after;\n        List<Child> children;\n      \n        class Child {\n          String path;\n          String propertyChangeType;\n          Object before;\n          Object after;\n          List<Child> children;\n        }\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_ExportTemplateAtSubscriptionScope",
      "javaSnippet": "// Deployments_ExportTemplateAtSubscriptionScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_ExportTemplateAtSubscriptionScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_ExportTemplateAtSubscriptionScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_ExportTemplateAtSubscriptionScope {\n  Object template;\n}\n\n",
      "csharpModel": "class Deployments_ExportTemplateAtSubscriptionScope {\n  Object template;\n}\n\n"
    },
    {
      "operationId": "Deployments_ListAtSubscriptionScope",
      "javaSnippet": "// Deployments_ListAtSubscriptionScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_ListAtSubscriptionScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_ListAtSubscriptionScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_ListAtSubscriptionScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String name;\n    String type;\n    String location;\n    Properties properties;\n    Object tags;\n  \n    class Properties {\n      String provisioningState;\n      String correlationId;\n      String timestamp;\n      String duration;\n      Object outputs;\n      List<Provider> providers;\n      List<Dependency> dependencies;\n      TemplateLink templateLink;\n      Object parameters;\n      ParametersLink parametersLink;\n      String mode;\n      DebugSetting debugSetting;\n      OnErrorDeployment onErrorDeployment;\n      String templateHash;\n      List<OutputResource> outputResources;\n      List<ValidatedResource> validatedResources;\n      Object error;\n    \n      class TemplateLink {\n        String uri;\n        String id;\n        String relativePath;\n        String contentVersion;\n        String queryString;\n      }\n    \n      class ParametersLink {\n        String uri;\n        String contentVersion;\n      }\n    \n      class DebugSetting {\n        String detailLevel;\n      }\n    \n      class OnErrorDeployment {\n        String provisioningState;\n        String type;\n        String deploymentName;\n      }\n    \n      class Provider {\n        String id;\n        String namespace;\n        String registrationState;\n        String registrationPolicy;\n        List<ResourceType> resourceTypes;\n      \n        class ResourceType {\n          String resourceType;\n          List<String> locations;\n          List<LocationMapping> locationMappings;\n          List<Alias> aliases;\n          List<String> apiVersions;\n          String defaultApiVersion;\n          List<ZoneMapping> zoneMappings;\n          List<ApiProfile> apiProfiles;\n          String capabilities;\n          Object properties;\n        \n          class LocationMapping {\n            String location;\n            String type;\n            List<String> extendedLocations;\n          }\n        \n          class Alias {\n            String name;\n            List<Path> paths;\n            String type;\n            String defaultPath;\n            DefaultPattern defaultPattern;\n            DefaultMetadata defaultMetadata;\n          \n            class DefaultPattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class DefaultMetadata {\n              String type;\n              String attributes;\n            }\n          \n            class Path {\n              String path;\n              List<String> apiVersions;\n              Pattern pattern;\n              Metadata metadata;\n            \n              class Pattern {\n                String phrase;\n                String variable;\n                String type;\n              }\n            \n              class Metadata {\n                String type;\n                String attributes;\n              }\n            }\n          }\n        \n          class ZoneMapping {\n            String location;\n            List<String> zones;\n          }\n        \n          class ApiProfile {\n            String profileVersion;\n            String apiVersion;\n          }\n        }\n      }\n    \n      class Dependency {\n        List<DependsOn> dependsOn;\n        String id;\n        String resourceType;\n        String resourceName;\n      \n        class DependsOn {\n          String id;\n          String resourceType;\n          String resourceName;\n        }\n      }\n    \n      class OutputResource {\n        String id;\n      }\n    \n      class ValidatedResource {\n        String id;\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_ListAtSubscriptionScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String name;\n    String type;\n    String location;\n    Properties properties;\n    Object tags;\n  \n    class Properties {\n      String provisioningState;\n      String correlationId;\n      String timestamp;\n      String duration;\n      Object outputs;\n      List<Provider> providers;\n      List<Dependency> dependencies;\n      TemplateLink templateLink;\n      Object parameters;\n      ParametersLink parametersLink;\n      String mode;\n      DebugSetting debugSetting;\n      OnErrorDeployment onErrorDeployment;\n      String templateHash;\n      List<OutputResource> outputResources;\n      List<ValidatedResource> validatedResources;\n      Object error;\n    \n      class TemplateLink {\n        String uri;\n        String id;\n        String relativePath;\n        String contentVersion;\n        String queryString;\n      }\n    \n      class ParametersLink {\n        String uri;\n        String contentVersion;\n      }\n    \n      class DebugSetting {\n        String detailLevel;\n      }\n    \n      class OnErrorDeployment {\n        String provisioningState;\n        String type;\n        String deploymentName;\n      }\n    \n      class Provider {\n        String id;\n        String @namespace;\n        String registrationState;\n        String registrationPolicy;\n        List<ResourceType> resourceTypes;\n      \n        class ResourceType {\n          String resourceType;\n          List<String> locations;\n          List<LocationMapping> locationMappings;\n          List<Alias> aliases;\n          List<String> apiVersions;\n          String defaultApiVersion;\n          List<ZoneMapping> zoneMappings;\n          List<ApiProfile> apiProfiles;\n          String capabilities;\n          Object properties;\n        \n          class LocationMapping {\n            String location;\n            String type;\n            List<String> extendedLocations;\n          }\n        \n          class Alias {\n            String name;\n            List<Path> paths;\n            String type;\n            String defaultPath;\n            DefaultPattern defaultPattern;\n            DefaultMetadata defaultMetadata;\n          \n            class DefaultPattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class DefaultMetadata {\n              String type;\n              String attributes;\n            }\n          \n            class Path {\n              String path;\n              List<String> apiVersions;\n              Pattern pattern;\n              Metadata metadata;\n            \n              class Pattern {\n                String phrase;\n                String variable;\n                String type;\n              }\n            \n              class Metadata {\n                String type;\n                String attributes;\n              }\n            }\n          }\n        \n          class ZoneMapping {\n            String location;\n            List<String> zones;\n          }\n        \n          class ApiProfile {\n            String profileVersion;\n            String apiVersion;\n          }\n        }\n      }\n    \n      class Dependency {\n        List<DependsOn> dependsOn;\n        String id;\n        String resourceType;\n        String resourceName;\n      \n        class DependsOn {\n          String id;\n          String resourceType;\n          String resourceName;\n        }\n      }\n    \n      class OutputResource {\n        String id;\n      }\n    \n      class ValidatedResource {\n        String id;\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_Delete",
      "javaSnippet": "// Deployments_Delete\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .DELETE()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_Delete\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.delete(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_Delete\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Delete, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_CheckExistence",
      "javaSnippet": "// Deployments_CheckExistence\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .HEAD()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CheckExistence\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.head(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CheckExistence\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Head, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_CreateOrUpdate",
      "javaSnippet": "// Deployments_CreateOrUpdate\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PUT(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CreateOrUpdate\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.put(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CreateOrUpdate\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Put, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Deployments_CreateOrUpdate - body.json:\n\n{\n  \"location\": ...,\n  \"properties\": ...,\n  \"tags\": ...\n}\n\n",
      "javaModel": "class Deployments_CreateOrUpdate {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_CreateOrUpdate {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_Get",
      "javaSnippet": "// Deployments_Get\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_Get\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_Get\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_Get {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_Get {\n  String id;\n  String name;\n  String type;\n  String location;\n  Properties properties;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_Cancel",
      "javaSnippet": "// Deployments_Cancel\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_Cancel\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_Cancel\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Deployments_Validate",
      "javaSnippet": "// Deployments_Validate\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_Validate\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_Validate\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Deployments_Validate - body.json:\n\n{\n  \"location\": ...,\n  \"properties\": ...,\n  \"tags\": ...\n}\n\n",
      "javaModel": "class Deployments_Validate {\n  Object error;\n  Properties properties;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_Validate {\n  Object error;\n  Properties properties;\n\n  class Properties {\n    String provisioningState;\n    String correlationId;\n    String timestamp;\n    String duration;\n    Object outputs;\n    List<Provider> providers;\n    List<Dependency> dependencies;\n    TemplateLink templateLink;\n    Object parameters;\n    ParametersLink parametersLink;\n    String mode;\n    DebugSetting debugSetting;\n    OnErrorDeployment onErrorDeployment;\n    String templateHash;\n    List<OutputResource> outputResources;\n    List<ValidatedResource> validatedResources;\n    Object error;\n  \n    class TemplateLink {\n      String uri;\n      String id;\n      String relativePath;\n      String contentVersion;\n      String queryString;\n    }\n  \n    class ParametersLink {\n      String uri;\n      String contentVersion;\n    }\n  \n    class DebugSetting {\n      String detailLevel;\n    }\n  \n    class OnErrorDeployment {\n      String provisioningState;\n      String type;\n      String deploymentName;\n    }\n  \n    class Provider {\n      String id;\n      String @namespace;\n      String registrationState;\n      String registrationPolicy;\n      List<ResourceType> resourceTypes;\n    \n      class ResourceType {\n        String resourceType;\n        List<String> locations;\n        List<LocationMapping> locationMappings;\n        List<Alias> aliases;\n        List<String> apiVersions;\n        String defaultApiVersion;\n        List<ZoneMapping> zoneMappings;\n        List<ApiProfile> apiProfiles;\n        String capabilities;\n        Object properties;\n      \n        class LocationMapping {\n          String location;\n          String type;\n          List<String> extendedLocations;\n        }\n      \n        class Alias {\n          String name;\n          List<Path> paths;\n          String type;\n          String defaultPath;\n          DefaultPattern defaultPattern;\n          DefaultMetadata defaultMetadata;\n        \n          class DefaultPattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class DefaultMetadata {\n            String type;\n            String attributes;\n          }\n        \n          class Path {\n            String path;\n            List<String> apiVersions;\n            Pattern pattern;\n            Metadata metadata;\n          \n            class Pattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class Metadata {\n              String type;\n              String attributes;\n            }\n          }\n        }\n      \n        class ZoneMapping {\n          String location;\n          List<String> zones;\n        }\n      \n        class ApiProfile {\n          String profileVersion;\n          String apiVersion;\n        }\n      }\n    }\n  \n    class Dependency {\n      List<DependsOn> dependsOn;\n      String id;\n      String resourceType;\n      String resourceName;\n    \n      class DependsOn {\n        String id;\n        String resourceType;\n        String resourceName;\n      }\n    }\n  \n    class OutputResource {\n      String id;\n    }\n  \n    class ValidatedResource {\n      String id;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_WhatIf",
      "javaSnippet": "// Deployments_WhatIf\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_WhatIf\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_WhatIf\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Deployments_WhatIf - body.json:\n\n{\n  \"location\": ...,\n  \"properties\": ...\n}\n\n",
      "javaModel": "class Deployments_WhatIf {\n  String status;\n  Properties properties;\n  Object error;\n\n  class Properties {\n    List<Change> changes;\n  \n    class Change {\n      String resourceId;\n      String changeType;\n      String unsupportedReason;\n      Object before;\n      Object after;\n      List<Delta> delta;\n    \n      class Delta {\n        String path;\n        String propertyChangeType;\n        Object before;\n        Object after;\n        List<Child> children;\n      \n        class Child {\n          String path;\n          String propertyChangeType;\n          Object before;\n          Object after;\n          List<Child> children;\n        }\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_WhatIf {\n  String status;\n  Properties properties;\n  Object error;\n\n  class Properties {\n    List<Change> changes;\n  \n    class Change {\n      String resourceId;\n      String changeType;\n      String unsupportedReason;\n      Object before;\n      Object after;\n      List<Delta> delta;\n    \n      class Delta {\n        String path;\n        String propertyChangeType;\n        Object before;\n        Object after;\n        List<Child> children;\n      \n        class Child {\n          String path;\n          String propertyChangeType;\n          Object before;\n          Object after;\n          List<Child> children;\n        }\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_ExportTemplate",
      "javaSnippet": "// Deployments_ExportTemplate\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_ExportTemplate\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_ExportTemplate\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_ExportTemplate {\n  Object template;\n}\n\n",
      "csharpModel": "class Deployments_ExportTemplate {\n  Object template;\n}\n\n"
    },
    {
      "operationId": "Deployments_ListByResourceGroup",
      "javaSnippet": "// Deployments_ListByResourceGroup\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_ListByResourceGroup\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_ListByResourceGroup\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_ListByResourceGroup {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String name;\n    String type;\n    String location;\n    Properties properties;\n    Object tags;\n  \n    class Properties {\n      String provisioningState;\n      String correlationId;\n      String timestamp;\n      String duration;\n      Object outputs;\n      List<Provider> providers;\n      List<Dependency> dependencies;\n      TemplateLink templateLink;\n      Object parameters;\n      ParametersLink parametersLink;\n      String mode;\n      DebugSetting debugSetting;\n      OnErrorDeployment onErrorDeployment;\n      String templateHash;\n      List<OutputResource> outputResources;\n      List<ValidatedResource> validatedResources;\n      Object error;\n    \n      class TemplateLink {\n        String uri;\n        String id;\n        String relativePath;\n        String contentVersion;\n        String queryString;\n      }\n    \n      class ParametersLink {\n        String uri;\n        String contentVersion;\n      }\n    \n      class DebugSetting {\n        String detailLevel;\n      }\n    \n      class OnErrorDeployment {\n        String provisioningState;\n        String type;\n        String deploymentName;\n      }\n    \n      class Provider {\n        String id;\n        String namespace;\n        String registrationState;\n        String registrationPolicy;\n        List<ResourceType> resourceTypes;\n      \n        class ResourceType {\n          String resourceType;\n          List<String> locations;\n          List<LocationMapping> locationMappings;\n          List<Alias> aliases;\n          List<String> apiVersions;\n          String defaultApiVersion;\n          List<ZoneMapping> zoneMappings;\n          List<ApiProfile> apiProfiles;\n          String capabilities;\n          Object properties;\n        \n          class LocationMapping {\n            String location;\n            String type;\n            List<String> extendedLocations;\n          }\n        \n          class Alias {\n            String name;\n            List<Path> paths;\n            String type;\n            String defaultPath;\n            DefaultPattern defaultPattern;\n            DefaultMetadata defaultMetadata;\n          \n            class DefaultPattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class DefaultMetadata {\n              String type;\n              String attributes;\n            }\n          \n            class Path {\n              String path;\n              List<String> apiVersions;\n              Pattern pattern;\n              Metadata metadata;\n            \n              class Pattern {\n                String phrase;\n                String variable;\n                String type;\n              }\n            \n              class Metadata {\n                String type;\n                String attributes;\n              }\n            }\n          }\n        \n          class ZoneMapping {\n            String location;\n            List<String> zones;\n          }\n        \n          class ApiProfile {\n            String profileVersion;\n            String apiVersion;\n          }\n        }\n      }\n    \n      class Dependency {\n        List<DependsOn> dependsOn;\n        String id;\n        String resourceType;\n        String resourceName;\n      \n        class DependsOn {\n          String id;\n          String resourceType;\n          String resourceName;\n        }\n      }\n    \n      class OutputResource {\n        String id;\n      }\n    \n      class ValidatedResource {\n        String id;\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class Deployments_ListByResourceGroup {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String name;\n    String type;\n    String location;\n    Properties properties;\n    Object tags;\n  \n    class Properties {\n      String provisioningState;\n      String correlationId;\n      String timestamp;\n      String duration;\n      Object outputs;\n      List<Provider> providers;\n      List<Dependency> dependencies;\n      TemplateLink templateLink;\n      Object parameters;\n      ParametersLink parametersLink;\n      String mode;\n      DebugSetting debugSetting;\n      OnErrorDeployment onErrorDeployment;\n      String templateHash;\n      List<OutputResource> outputResources;\n      List<ValidatedResource> validatedResources;\n      Object error;\n    \n      class TemplateLink {\n        String uri;\n        String id;\n        String relativePath;\n        String contentVersion;\n        String queryString;\n      }\n    \n      class ParametersLink {\n        String uri;\n        String contentVersion;\n      }\n    \n      class DebugSetting {\n        String detailLevel;\n      }\n    \n      class OnErrorDeployment {\n        String provisioningState;\n        String type;\n        String deploymentName;\n      }\n    \n      class Provider {\n        String id;\n        String @namespace;\n        String registrationState;\n        String registrationPolicy;\n        List<ResourceType> resourceTypes;\n      \n        class ResourceType {\n          String resourceType;\n          List<String> locations;\n          List<LocationMapping> locationMappings;\n          List<Alias> aliases;\n          List<String> apiVersions;\n          String defaultApiVersion;\n          List<ZoneMapping> zoneMappings;\n          List<ApiProfile> apiProfiles;\n          String capabilities;\n          Object properties;\n        \n          class LocationMapping {\n            String location;\n            String type;\n            List<String> extendedLocations;\n          }\n        \n          class Alias {\n            String name;\n            List<Path> paths;\n            String type;\n            String defaultPath;\n            DefaultPattern defaultPattern;\n            DefaultMetadata defaultMetadata;\n          \n            class DefaultPattern {\n              String phrase;\n              String variable;\n              String type;\n            }\n          \n            class DefaultMetadata {\n              String type;\n              String attributes;\n            }\n          \n            class Path {\n              String path;\n              List<String> apiVersions;\n              Pattern pattern;\n              Metadata metadata;\n            \n              class Pattern {\n                String phrase;\n                String variable;\n                String type;\n              }\n            \n              class Metadata {\n                String type;\n                String attributes;\n              }\n            }\n          }\n        \n          class ZoneMapping {\n            String location;\n            List<String> zones;\n          }\n        \n          class ApiProfile {\n            String profileVersion;\n            String apiVersion;\n          }\n        }\n      }\n    \n      class Dependency {\n        List<DependsOn> dependsOn;\n        String id;\n        String resourceType;\n        String resourceName;\n      \n        class DependsOn {\n          String id;\n          String resourceType;\n          String resourceName;\n        }\n      }\n    \n      class OutputResource {\n        String id;\n      }\n    \n      class ValidatedResource {\n        String id;\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Providers_Unregister",
      "javaSnippet": "// Providers_Unregister\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Providers_Unregister\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Providers_Unregister\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Providers_Unregister {\n  String id;\n  String namespace;\n  String registrationState;\n  String registrationPolicy;\n  List<ResourceType> resourceTypes;\n\n  class ResourceType {\n    String resourceType;\n    List<String> locations;\n    List<LocationMapping> locationMappings;\n    List<Alias> aliases;\n    List<String> apiVersions;\n    String defaultApiVersion;\n    List<ZoneMapping> zoneMappings;\n    List<ApiProfile> apiProfiles;\n    String capabilities;\n    Object properties;\n  \n    class LocationMapping {\n      String location;\n      String type;\n      List<String> extendedLocations;\n    }\n  \n    class Alias {\n      String name;\n      List<Path> paths;\n      String type;\n      String defaultPath;\n      DefaultPattern defaultPattern;\n      DefaultMetadata defaultMetadata;\n    \n      class DefaultPattern {\n        String phrase;\n        String variable;\n        String type;\n      }\n    \n      class DefaultMetadata {\n        String type;\n        String attributes;\n      }\n    \n      class Path {\n        String path;\n        List<String> apiVersions;\n        Pattern pattern;\n        Metadata metadata;\n      \n        class Pattern {\n          String phrase;\n          String variable;\n          String type;\n        }\n      \n        class Metadata {\n          String type;\n          String attributes;\n        }\n      }\n    }\n  \n    class ZoneMapping {\n      String location;\n      List<String> zones;\n    }\n  \n    class ApiProfile {\n      String profileVersion;\n      String apiVersion;\n    }\n  }\n}\n\n",
      "csharpModel": "class Providers_Unregister {\n  String id;\n  String @namespace;\n  String registrationState;\n  String registrationPolicy;\n  List<ResourceType> resourceTypes;\n\n  class ResourceType {\n    String resourceType;\n    List<String> locations;\n    List<LocationMapping> locationMappings;\n    List<Alias> aliases;\n    List<String> apiVersions;\n    String defaultApiVersion;\n    List<ZoneMapping> zoneMappings;\n    List<ApiProfile> apiProfiles;\n    String capabilities;\n    Object properties;\n  \n    class LocationMapping {\n      String location;\n      String type;\n      List<String> extendedLocations;\n    }\n  \n    class Alias {\n      String name;\n      List<Path> paths;\n      String type;\n      String defaultPath;\n      DefaultPattern defaultPattern;\n      DefaultMetadata defaultMetadata;\n    \n      class DefaultPattern {\n        String phrase;\n        String variable;\n        String type;\n      }\n    \n      class DefaultMetadata {\n        String type;\n        String attributes;\n      }\n    \n      class Path {\n        String path;\n        List<String> apiVersions;\n        Pattern pattern;\n        Metadata metadata;\n      \n        class Pattern {\n          String phrase;\n          String variable;\n          String type;\n        }\n      \n        class Metadata {\n          String type;\n          String attributes;\n        }\n      }\n    }\n  \n    class ZoneMapping {\n      String location;\n      List<String> zones;\n    }\n  \n    class ApiProfile {\n      String profileVersion;\n      String apiVersion;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Providers_RegisterAtManagementGroupScope",
      "javaSnippet": "// Providers_RegisterAtManagementGroupScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/{resourceProviderNamespace}/register?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Providers_RegisterAtManagementGroupScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/{resourceProviderNamespace}/register? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Providers_RegisterAtManagementGroupScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/{resourceProviderNamespace}/register?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Providers_Register",
      "javaSnippet": "// Providers_Register\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Providers_Register\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Providers_Register\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Providers_Register {\n  String id;\n  String namespace;\n  String registrationState;\n  String registrationPolicy;\n  List<ResourceType> resourceTypes;\n\n  class ResourceType {\n    String resourceType;\n    List<String> locations;\n    List<LocationMapping> locationMappings;\n    List<Alias> aliases;\n    List<String> apiVersions;\n    String defaultApiVersion;\n    List<ZoneMapping> zoneMappings;\n    List<ApiProfile> apiProfiles;\n    String capabilities;\n    Object properties;\n  \n    class LocationMapping {\n      String location;\n      String type;\n      List<String> extendedLocations;\n    }\n  \n    class Alias {\n      String name;\n      List<Path> paths;\n      String type;\n      String defaultPath;\n      DefaultPattern defaultPattern;\n      DefaultMetadata defaultMetadata;\n    \n      class DefaultPattern {\n        String phrase;\n        String variable;\n        String type;\n      }\n    \n      class DefaultMetadata {\n        String type;\n        String attributes;\n      }\n    \n      class Path {\n        String path;\n        List<String> apiVersions;\n        Pattern pattern;\n        Metadata metadata;\n      \n        class Pattern {\n          String phrase;\n          String variable;\n          String type;\n        }\n      \n        class Metadata {\n          String type;\n          String attributes;\n        }\n      }\n    }\n  \n    class ZoneMapping {\n      String location;\n      List<String> zones;\n    }\n  \n    class ApiProfile {\n      String profileVersion;\n      String apiVersion;\n    }\n  }\n}\n\n",
      "csharpModel": "class Providers_Register {\n  String id;\n  String @namespace;\n  String registrationState;\n  String registrationPolicy;\n  List<ResourceType> resourceTypes;\n\n  class ResourceType {\n    String resourceType;\n    List<String> locations;\n    List<LocationMapping> locationMappings;\n    List<Alias> aliases;\n    List<String> apiVersions;\n    String defaultApiVersion;\n    List<ZoneMapping> zoneMappings;\n    List<ApiProfile> apiProfiles;\n    String capabilities;\n    Object properties;\n  \n    class LocationMapping {\n      String location;\n      String type;\n      List<String> extendedLocations;\n    }\n  \n    class Alias {\n      String name;\n      List<Path> paths;\n      String type;\n      String defaultPath;\n      DefaultPattern defaultPattern;\n      DefaultMetadata defaultMetadata;\n    \n      class DefaultPattern {\n        String phrase;\n        String variable;\n        String type;\n      }\n    \n      class DefaultMetadata {\n        String type;\n        String attributes;\n      }\n    \n      class Path {\n        String path;\n        List<String> apiVersions;\n        Pattern pattern;\n        Metadata metadata;\n      \n        class Pattern {\n          String phrase;\n          String variable;\n          String type;\n        }\n      \n        class Metadata {\n          String type;\n          String attributes;\n        }\n      }\n    }\n  \n    class ZoneMapping {\n      String location;\n      List<String> zones;\n    }\n  \n    class ApiProfile {\n      String profileVersion;\n      String apiVersion;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Providers_List",
      "javaSnippet": "// Providers_List\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Providers_List\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Providers_List\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Providers_List {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String namespace;\n    String registrationState;\n    String registrationPolicy;\n    List<ResourceType> resourceTypes;\n  \n    class ResourceType {\n      String resourceType;\n      List<String> locations;\n      List<LocationMapping> locationMappings;\n      List<Alias> aliases;\n      List<String> apiVersions;\n      String defaultApiVersion;\n      List<ZoneMapping> zoneMappings;\n      List<ApiProfile> apiProfiles;\n      String capabilities;\n      Object properties;\n    \n      class LocationMapping {\n        String location;\n        String type;\n        List<String> extendedLocations;\n      }\n    \n      class Alias {\n        String name;\n        List<Path> paths;\n        String type;\n        String defaultPath;\n        DefaultPattern defaultPattern;\n        DefaultMetadata defaultMetadata;\n      \n        class DefaultPattern {\n          String phrase;\n          String variable;\n          String type;\n        }\n      \n        class DefaultMetadata {\n          String type;\n          String attributes;\n        }\n      \n        class Path {\n          String path;\n          List<String> apiVersions;\n          Pattern pattern;\n          Metadata metadata;\n        \n          class Pattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class Metadata {\n            String type;\n            String attributes;\n          }\n        }\n      }\n    \n      class ZoneMapping {\n        String location;\n        List<String> zones;\n      }\n    \n      class ApiProfile {\n        String profileVersion;\n        String apiVersion;\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class Providers_List {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String @namespace;\n    String registrationState;\n    String registrationPolicy;\n    List<ResourceType> resourceTypes;\n  \n    class ResourceType {\n      String resourceType;\n      List<String> locations;\n      List<LocationMapping> locationMappings;\n      List<Alias> aliases;\n      List<String> apiVersions;\n      String defaultApiVersion;\n      List<ZoneMapping> zoneMappings;\n      List<ApiProfile> apiProfiles;\n      String capabilities;\n      Object properties;\n    \n      class LocationMapping {\n        String location;\n        String type;\n        List<String> extendedLocations;\n      }\n    \n      class Alias {\n        String name;\n        List<Path> paths;\n        String type;\n        String defaultPath;\n        DefaultPattern defaultPattern;\n        DefaultMetadata defaultMetadata;\n      \n        class DefaultPattern {\n          String phrase;\n          String variable;\n          String type;\n        }\n      \n        class DefaultMetadata {\n          String type;\n          String attributes;\n        }\n      \n        class Path {\n          String path;\n          List<String> apiVersions;\n          Pattern pattern;\n          Metadata metadata;\n        \n          class Pattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class Metadata {\n            String type;\n            String attributes;\n          }\n        }\n      }\n    \n      class ZoneMapping {\n        String location;\n        List<String> zones;\n      }\n    \n      class ApiProfile {\n        String profileVersion;\n        String apiVersion;\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Providers_ListAtTenantScope",
      "javaSnippet": "// Providers_ListAtTenantScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Providers_ListAtTenantScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/providers? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Providers_ListAtTenantScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/providers?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Providers_ListAtTenantScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String namespace;\n    String registrationState;\n    String registrationPolicy;\n    List<ResourceType> resourceTypes;\n  \n    class ResourceType {\n      String resourceType;\n      List<String> locations;\n      List<LocationMapping> locationMappings;\n      List<Alias> aliases;\n      List<String> apiVersions;\n      String defaultApiVersion;\n      List<ZoneMapping> zoneMappings;\n      List<ApiProfile> apiProfiles;\n      String capabilities;\n      Object properties;\n    \n      class LocationMapping {\n        String location;\n        String type;\n        List<String> extendedLocations;\n      }\n    \n      class Alias {\n        String name;\n        List<Path> paths;\n        String type;\n        String defaultPath;\n        DefaultPattern defaultPattern;\n        DefaultMetadata defaultMetadata;\n      \n        class DefaultPattern {\n          String phrase;\n          String variable;\n          String type;\n        }\n      \n        class DefaultMetadata {\n          String type;\n          String attributes;\n        }\n      \n        class Path {\n          String path;\n          List<String> apiVersions;\n          Pattern pattern;\n          Metadata metadata;\n        \n          class Pattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class Metadata {\n            String type;\n            String attributes;\n          }\n        }\n      }\n    \n      class ZoneMapping {\n        String location;\n        List<String> zones;\n      }\n    \n      class ApiProfile {\n        String profileVersion;\n        String apiVersion;\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class Providers_ListAtTenantScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String @namespace;\n    String registrationState;\n    String registrationPolicy;\n    List<ResourceType> resourceTypes;\n  \n    class ResourceType {\n      String resourceType;\n      List<String> locations;\n      List<LocationMapping> locationMappings;\n      List<Alias> aliases;\n      List<String> apiVersions;\n      String defaultApiVersion;\n      List<ZoneMapping> zoneMappings;\n      List<ApiProfile> apiProfiles;\n      String capabilities;\n      Object properties;\n    \n      class LocationMapping {\n        String location;\n        String type;\n        List<String> extendedLocations;\n      }\n    \n      class Alias {\n        String name;\n        List<Path> paths;\n        String type;\n        String defaultPath;\n        DefaultPattern defaultPattern;\n        DefaultMetadata defaultMetadata;\n      \n        class DefaultPattern {\n          String phrase;\n          String variable;\n          String type;\n        }\n      \n        class DefaultMetadata {\n          String type;\n          String attributes;\n        }\n      \n        class Path {\n          String path;\n          List<String> apiVersions;\n          Pattern pattern;\n          Metadata metadata;\n        \n          class Pattern {\n            String phrase;\n            String variable;\n            String type;\n          }\n        \n          class Metadata {\n            String type;\n            String attributes;\n          }\n        }\n      }\n    \n      class ZoneMapping {\n        String location;\n        List<String> zones;\n      }\n    \n      class ApiProfile {\n        String profileVersion;\n        String apiVersion;\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Providers_Get",
      "javaSnippet": "// Providers_Get\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Providers_Get\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Providers_Get\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Providers_Get {\n  String id;\n  String namespace;\n  String registrationState;\n  String registrationPolicy;\n  List<ResourceType> resourceTypes;\n\n  class ResourceType {\n    String resourceType;\n    List<String> locations;\n    List<LocationMapping> locationMappings;\n    List<Alias> aliases;\n    List<String> apiVersions;\n    String defaultApiVersion;\n    List<ZoneMapping> zoneMappings;\n    List<ApiProfile> apiProfiles;\n    String capabilities;\n    Object properties;\n  \n    class LocationMapping {\n      String location;\n      String type;\n      List<String> extendedLocations;\n    }\n  \n    class Alias {\n      String name;\n      List<Path> paths;\n      String type;\n      String defaultPath;\n      DefaultPattern defaultPattern;\n      DefaultMetadata defaultMetadata;\n    \n      class DefaultPattern {\n        String phrase;\n        String variable;\n        String type;\n      }\n    \n      class DefaultMetadata {\n        String type;\n        String attributes;\n      }\n    \n      class Path {\n        String path;\n        List<String> apiVersions;\n        Pattern pattern;\n        Metadata metadata;\n      \n        class Pattern {\n          String phrase;\n          String variable;\n          String type;\n        }\n      \n        class Metadata {\n          String type;\n          String attributes;\n        }\n      }\n    }\n  \n    class ZoneMapping {\n      String location;\n      List<String> zones;\n    }\n  \n    class ApiProfile {\n      String profileVersion;\n      String apiVersion;\n    }\n  }\n}\n\n",
      "csharpModel": "class Providers_Get {\n  String id;\n  String @namespace;\n  String registrationState;\n  String registrationPolicy;\n  List<ResourceType> resourceTypes;\n\n  class ResourceType {\n    String resourceType;\n    List<String> locations;\n    List<LocationMapping> locationMappings;\n    List<Alias> aliases;\n    List<String> apiVersions;\n    String defaultApiVersion;\n    List<ZoneMapping> zoneMappings;\n    List<ApiProfile> apiProfiles;\n    String capabilities;\n    Object properties;\n  \n    class LocationMapping {\n      String location;\n      String type;\n      List<String> extendedLocations;\n    }\n  \n    class Alias {\n      String name;\n      List<Path> paths;\n      String type;\n      String defaultPath;\n      DefaultPattern defaultPattern;\n      DefaultMetadata defaultMetadata;\n    \n      class DefaultPattern {\n        String phrase;\n        String variable;\n        String type;\n      }\n    \n      class DefaultMetadata {\n        String type;\n        String attributes;\n      }\n    \n      class Path {\n        String path;\n        List<String> apiVersions;\n        Pattern pattern;\n        Metadata metadata;\n      \n        class Pattern {\n          String phrase;\n          String variable;\n          String type;\n        }\n      \n        class Metadata {\n          String type;\n          String attributes;\n        }\n      }\n    }\n  \n    class ZoneMapping {\n      String location;\n      List<String> zones;\n    }\n  \n    class ApiProfile {\n      String profileVersion;\n      String apiVersion;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "ProviderResourceTypes_List",
      "javaSnippet": "// ProviderResourceTypes_List\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/resourceTypes?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# ProviderResourceTypes_List\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/resourceTypes? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// ProviderResourceTypes_List\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/resourceTypes?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class ProviderResourceTypes_List {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String resourceType;\n    List<String> locations;\n    List<LocationMapping> locationMappings;\n    List<Alias> aliases;\n    List<String> apiVersions;\n    String defaultApiVersion;\n    List<ZoneMapping> zoneMappings;\n    List<ApiProfile> apiProfiles;\n    String capabilities;\n    Object properties;\n  \n    class LocationMapping {\n      String location;\n      String type;\n      List<String> extendedLocations;\n    }\n  \n    class Alias {\n      String name;\n      List<Path> paths;\n      String type;\n      String defaultPath;\n      DefaultPattern defaultPattern;\n      DefaultMetadata defaultMetadata;\n    \n      class DefaultPattern {\n        String phrase;\n        String variable;\n        String type;\n      }\n    \n      class DefaultMetadata {\n        String type;\n        String attributes;\n      }\n    \n      class Path {\n        String path;\n        List<String> apiVersions;\n        Pattern pattern;\n        Metadata metadata;\n      \n        class Pattern {\n          String phrase;\n          String variable;\n          String type;\n        }\n      \n        class Metadata {\n          String type;\n          String attributes;\n        }\n      }\n    }\n  \n    class ZoneMapping {\n      String location;\n      List<String> zones;\n    }\n  \n    class ApiProfile {\n      String profileVersion;\n      String apiVersion;\n    }\n  }\n}\n\n",
      "csharpModel": "class ProviderResourceTypes_List {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String resourceType;\n    List<String> locations;\n    List<LocationMapping> locationMappings;\n    List<Alias> aliases;\n    List<String> apiVersions;\n    String defaultApiVersion;\n    List<ZoneMapping> zoneMappings;\n    List<ApiProfile> apiProfiles;\n    String capabilities;\n    Object properties;\n  \n    class LocationMapping {\n      String location;\n      String type;\n      List<String> extendedLocations;\n    }\n  \n    class Alias {\n      String name;\n      List<Path> paths;\n      String type;\n      String defaultPath;\n      DefaultPattern defaultPattern;\n      DefaultMetadata defaultMetadata;\n    \n      class DefaultPattern {\n        String phrase;\n        String variable;\n        String type;\n      }\n    \n      class DefaultMetadata {\n        String type;\n        String attributes;\n      }\n    \n      class Path {\n        String path;\n        List<String> apiVersions;\n        Pattern pattern;\n        Metadata metadata;\n      \n        class Pattern {\n          String phrase;\n          String variable;\n          String type;\n        }\n      \n        class Metadata {\n          String type;\n          String attributes;\n        }\n      }\n    }\n  \n    class ZoneMapping {\n      String location;\n      List<String> zones;\n    }\n  \n    class ApiProfile {\n      String profileVersion;\n      String apiVersion;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Providers_GetAtTenantScope",
      "javaSnippet": "// Providers_GetAtTenantScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/{resourceProviderNamespace}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Providers_GetAtTenantScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/providers/{resourceProviderNamespace}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Providers_GetAtTenantScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/providers/{resourceProviderNamespace}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Providers_GetAtTenantScope {\n  String id;\n  String namespace;\n  String registrationState;\n  String registrationPolicy;\n  List<ResourceType> resourceTypes;\n\n  class ResourceType {\n    String resourceType;\n    List<String> locations;\n    List<LocationMapping> locationMappings;\n    List<Alias> aliases;\n    List<String> apiVersions;\n    String defaultApiVersion;\n    List<ZoneMapping> zoneMappings;\n    List<ApiProfile> apiProfiles;\n    String capabilities;\n    Object properties;\n  \n    class LocationMapping {\n      String location;\n      String type;\n      List<String> extendedLocations;\n    }\n  \n    class Alias {\n      String name;\n      List<Path> paths;\n      String type;\n      String defaultPath;\n      DefaultPattern defaultPattern;\n      DefaultMetadata defaultMetadata;\n    \n      class DefaultPattern {\n        String phrase;\n        String variable;\n        String type;\n      }\n    \n      class DefaultMetadata {\n        String type;\n        String attributes;\n      }\n    \n      class Path {\n        String path;\n        List<String> apiVersions;\n        Pattern pattern;\n        Metadata metadata;\n      \n        class Pattern {\n          String phrase;\n          String variable;\n          String type;\n        }\n      \n        class Metadata {\n          String type;\n          String attributes;\n        }\n      }\n    }\n  \n    class ZoneMapping {\n      String location;\n      List<String> zones;\n    }\n  \n    class ApiProfile {\n      String profileVersion;\n      String apiVersion;\n    }\n  }\n}\n\n",
      "csharpModel": "class Providers_GetAtTenantScope {\n  String id;\n  String @namespace;\n  String registrationState;\n  String registrationPolicy;\n  List<ResourceType> resourceTypes;\n\n  class ResourceType {\n    String resourceType;\n    List<String> locations;\n    List<LocationMapping> locationMappings;\n    List<Alias> aliases;\n    List<String> apiVersions;\n    String defaultApiVersion;\n    List<ZoneMapping> zoneMappings;\n    List<ApiProfile> apiProfiles;\n    String capabilities;\n    Object properties;\n  \n    class LocationMapping {\n      String location;\n      String type;\n      List<String> extendedLocations;\n    }\n  \n    class Alias {\n      String name;\n      List<Path> paths;\n      String type;\n      String defaultPath;\n      DefaultPattern defaultPattern;\n      DefaultMetadata defaultMetadata;\n    \n      class DefaultPattern {\n        String phrase;\n        String variable;\n        String type;\n      }\n    \n      class DefaultMetadata {\n        String type;\n        String attributes;\n      }\n    \n      class Path {\n        String path;\n        List<String> apiVersions;\n        Pattern pattern;\n        Metadata metadata;\n      \n        class Pattern {\n          String phrase;\n          String variable;\n          String type;\n        }\n      \n        class Metadata {\n          String type;\n          String attributes;\n        }\n      }\n    }\n  \n    class ZoneMapping {\n      String location;\n      List<String> zones;\n    }\n  \n    class ApiProfile {\n      String profileVersion;\n      String apiVersion;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Resources_ListByResourceGroup",
      "javaSnippet": "// Resources_ListByResourceGroup\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Resources_ListByResourceGroup\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Resources_ListByResourceGroup\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Resources_ListByResourceGroup {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String createdTime;\n    String changedTime;\n    String provisioningState;\n  }\n}\n\n",
      "csharpModel": "class Resources_ListByResourceGroup {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String createdTime;\n    String changedTime;\n    String provisioningState;\n  }\n}\n\n"
    },
    {
      "operationId": "ResourceGroups_CheckExistence",
      "javaSnippet": "// ResourceGroups_CheckExistence\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .HEAD()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# ResourceGroups_CheckExistence\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.head(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// ResourceGroups_CheckExistence\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Head, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "ResourceGroups_CreateOrUpdate",
      "javaSnippet": "// ResourceGroups_CreateOrUpdate\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PUT(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# ResourceGroups_CreateOrUpdate\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.put(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// ResourceGroups_CreateOrUpdate\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Put, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "ResourceGroups_CreateOrUpdate - body.json:\n\n{\n  \"properties\": ...,\n  \"location\": ...,\n  \"managedBy\": ...,\n  \"tags\": ...\n}\n\n",
      "javaModel": "class ResourceGroups_CreateOrUpdate {\n  String id;\n  String name;\n  String type;\n  Properties properties;\n  String location;\n  String managedBy;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n  }\n}\n\n",
      "csharpModel": "class ResourceGroups_CreateOrUpdate {\n  String id;\n  String name;\n  String type;\n  Properties properties;\n  String location;\n  String managedBy;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n  }\n}\n\n"
    },
    {
      "operationId": "ResourceGroups_Delete",
      "javaSnippet": "// ResourceGroups_Delete\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .DELETE()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# ResourceGroups_Delete\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.delete(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// ResourceGroups_Delete\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Delete, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "ResourceGroups_Get",
      "javaSnippet": "// ResourceGroups_Get\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# ResourceGroups_Get\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// ResourceGroups_Get\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class ResourceGroups_Get {\n  String id;\n  String name;\n  String type;\n  Properties properties;\n  String location;\n  String managedBy;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n  }\n}\n\n",
      "csharpModel": "class ResourceGroups_Get {\n  String id;\n  String name;\n  String type;\n  Properties properties;\n  String location;\n  String managedBy;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n  }\n}\n\n"
    },
    {
      "operationId": "ResourceGroups_Update",
      "javaSnippet": "// ResourceGroups_Update\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PATCH(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# ResourceGroups_Update\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.patch(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// ResourceGroups_Update\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Patch, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "ResourceGroups_Update - body.json:\n\n{\n  \"name\": ...,\n  \"properties\": ...,\n  \"managedBy\": ...,\n  \"tags\": ...\n}\n\n",
      "javaModel": "class ResourceGroups_Update {\n  String id;\n  String name;\n  String type;\n  Properties properties;\n  String location;\n  String managedBy;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n  }\n}\n\n",
      "csharpModel": "class ResourceGroups_Update {\n  String id;\n  String name;\n  String type;\n  Properties properties;\n  String location;\n  String managedBy;\n  Object tags;\n\n  class Properties {\n    String provisioningState;\n  }\n}\n\n"
    },
    {
      "operationId": "ResourceGroups_ExportTemplate",
      "javaSnippet": "// ResourceGroups_ExportTemplate\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# ResourceGroups_ExportTemplate\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// ResourceGroups_ExportTemplate\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "ResourceGroups_ExportTemplate - body.json:\n\n{\n  \"resources\": ...,\n  \"options\": ...\n}\n\n",
      "javaModel": "class ResourceGroups_ExportTemplate {\n  Object template;\n  Object error;\n}\n\n",
      "csharpModel": "class ResourceGroups_ExportTemplate {\n  Object template;\n  Object error;\n}\n\n"
    },
    {
      "operationId": "ResourceGroups_List",
      "javaSnippet": "// ResourceGroups_List\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# ResourceGroups_List\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// ResourceGroups_List\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class ResourceGroups_List {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String name;\n    String type;\n    Properties properties;\n    String location;\n    String managedBy;\n    Object tags;\n  \n    class Properties {\n      String provisioningState;\n    }\n  }\n}\n\n",
      "csharpModel": "class ResourceGroups_List {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String name;\n    String type;\n    Properties properties;\n    String location;\n    String managedBy;\n    Object tags;\n  \n    class Properties {\n      String provisioningState;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Resources_MoveResources",
      "javaSnippet": "// Resources_MoveResources\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Resources_MoveResources\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Resources_MoveResources\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Resources_MoveResources - body.json:\n\n{\n  \"resources\": ...,\n  \"targetResourceGroup\": ...\n}\n\n"
    },
    {
      "operationId": "Resources_ValidateMoveResources",
      "javaSnippet": "// Resources_ValidateMoveResources\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/validateMoveResources?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Resources_ValidateMoveResources\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/validateMoveResources? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Resources_ValidateMoveResources\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/validateMoveResources?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Resources_ValidateMoveResources - body.json:\n\n{\n  \"resources\": ...,\n  \"targetResourceGroup\": ...\n}\n\n"
    },
    {
      "operationId": "Resources_List",
      "javaSnippet": "// Resources_List\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resources?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Resources_List\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resources? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Resources_List\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resources?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Resources_List {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String createdTime;\n    String changedTime;\n    String provisioningState;\n  }\n}\n\n",
      "csharpModel": "class Resources_List {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String createdTime;\n    String changedTime;\n    String provisioningState;\n  }\n}\n\n"
    },
    {
      "operationId": "Resources_CheckExistence",
      "javaSnippet": "// Resources_CheckExistence\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .HEAD()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Resources_CheckExistence\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.head(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Resources_CheckExistence\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Head, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Resources_Delete",
      "javaSnippet": "// Resources_Delete\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .DELETE()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Resources_Delete\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.delete(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Resources_Delete\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Delete, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Resources_CreateOrUpdate",
      "javaSnippet": "// Resources_CreateOrUpdate\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PUT(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Resources_CreateOrUpdate\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.put(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Resources_CreateOrUpdate\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Put, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Resources_CreateOrUpdate - body.json:\n\n{\n  \"plan\": ...,\n  \"properties\": ...,\n  \"kind\": ...,\n  \"managedBy\": ...,\n  \"sku\": ...,\n  \"identity\": ...\n}\n\n",
      "javaModel": "class Resources_CreateOrUpdate {\n  Plan plan;\n  Object properties;\n  String kind;\n  String managedBy;\n  Sku sku;\n  Identity identity;\n\n  class Plan {\n    String name;\n    String publisher;\n    String product;\n    String promotionCode;\n    String version;\n  }\n\n  class Sku {\n    String name;\n    String tier;\n    String size;\n    String family;\n    String model;\n    Integer capacity;\n  }\n\n  class Identity {\n    String principalId;\n    String tenantId;\n    String type;\n    Object userAssignedIdentities;\n  }\n}\n\n",
      "csharpModel": "class Resources_CreateOrUpdate {\n  Plan plan;\n  Object properties;\n  String kind;\n  String managedBy;\n  Sku sku;\n  Identity identity;\n\n  class Plan {\n    String name;\n    String publisher;\n    String product;\n    String promotionCode;\n    String version;\n  }\n\n  class Sku {\n    String name;\n    String tier;\n    String size;\n    String family;\n    String model;\n    Integer capacity;\n  }\n\n  class Identity {\n    String principalId;\n    String tenantId;\n    String type;\n    Object userAssignedIdentities;\n  }\n}\n\n"
    },
    {
      "operationId": "Resources_Update",
      "javaSnippet": "// Resources_Update\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PATCH(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Resources_Update\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.patch(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Resources_Update\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Patch, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Resources_Update - body.json:\n\n{\n  \"plan\": ...,\n  \"properties\": ...,\n  \"kind\": ...,\n  \"managedBy\": ...,\n  \"sku\": ...,\n  \"identity\": ...\n}\n\n",
      "javaModel": "class Resources_Update {\n  Plan plan;\n  Object properties;\n  String kind;\n  String managedBy;\n  Sku sku;\n  Identity identity;\n\n  class Plan {\n    String name;\n    String publisher;\n    String product;\n    String promotionCode;\n    String version;\n  }\n\n  class Sku {\n    String name;\n    String tier;\n    String size;\n    String family;\n    String model;\n    Integer capacity;\n  }\n\n  class Identity {\n    String principalId;\n    String tenantId;\n    String type;\n    Object userAssignedIdentities;\n  }\n}\n\n",
      "csharpModel": "class Resources_Update {\n  Plan plan;\n  Object properties;\n  String kind;\n  String managedBy;\n  Sku sku;\n  Identity identity;\n\n  class Plan {\n    String name;\n    String publisher;\n    String product;\n    String promotionCode;\n    String version;\n  }\n\n  class Sku {\n    String name;\n    String tier;\n    String size;\n    String family;\n    String model;\n    Integer capacity;\n  }\n\n  class Identity {\n    String principalId;\n    String tenantId;\n    String type;\n    Object userAssignedIdentities;\n  }\n}\n\n"
    },
    {
      "operationId": "Resources_Get",
      "javaSnippet": "// Resources_Get\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Resources_Get\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Resources_Get\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Resources_Get {\n  Plan plan;\n  Object properties;\n  String kind;\n  String managedBy;\n  Sku sku;\n  Identity identity;\n\n  class Plan {\n    String name;\n    String publisher;\n    String product;\n    String promotionCode;\n    String version;\n  }\n\n  class Sku {\n    String name;\n    String tier;\n    String size;\n    String family;\n    String model;\n    Integer capacity;\n  }\n\n  class Identity {\n    String principalId;\n    String tenantId;\n    String type;\n    Object userAssignedIdentities;\n  }\n}\n\n",
      "csharpModel": "class Resources_Get {\n  Plan plan;\n  Object properties;\n  String kind;\n  String managedBy;\n  Sku sku;\n  Identity identity;\n\n  class Plan {\n    String name;\n    String publisher;\n    String product;\n    String promotionCode;\n    String version;\n  }\n\n  class Sku {\n    String name;\n    String tier;\n    String size;\n    String family;\n    String model;\n    Integer capacity;\n  }\n\n  class Identity {\n    String principalId;\n    String tenantId;\n    String type;\n    Object userAssignedIdentities;\n  }\n}\n\n"
    },
    {
      "operationId": "Resources_CheckExistenceById",
      "javaSnippet": "// Resources_CheckExistenceById\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{resourceId}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .HEAD()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Resources_CheckExistenceById\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.head(\n  \"https://managemement.azure.com/{resourceId}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Resources_CheckExistenceById\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Head, \"https://managemement.azure.com/{resourceId}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Resources_DeleteById",
      "javaSnippet": "// Resources_DeleteById\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{resourceId}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .DELETE()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Resources_DeleteById\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.delete(\n  \"https://managemement.azure.com/{resourceId}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Resources_DeleteById\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Delete, \"https://managemement.azure.com/{resourceId}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Resources_CreateOrUpdateById",
      "javaSnippet": "// Resources_CreateOrUpdateById\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{resourceId}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PUT(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Resources_CreateOrUpdateById\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.put(\n  \"https://managemement.azure.com/{resourceId}? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Resources_CreateOrUpdateById\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Put, \"https://managemement.azure.com/{resourceId}?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Resources_CreateOrUpdateById - body.json:\n\n{\n  \"plan\": ...,\n  \"properties\": ...,\n  \"kind\": ...,\n  \"managedBy\": ...,\n  \"sku\": ...,\n  \"identity\": ...\n}\n\n",
      "javaModel": "class Resources_CreateOrUpdateById {\n  Plan plan;\n  Object properties;\n  String kind;\n  String managedBy;\n  Sku sku;\n  Identity identity;\n\n  class Plan {\n    String name;\n    String publisher;\n    String product;\n    String promotionCode;\n    String version;\n  }\n\n  class Sku {\n    String name;\n    String tier;\n    String size;\n    String family;\n    String model;\n    Integer capacity;\n  }\n\n  class Identity {\n    String principalId;\n    String tenantId;\n    String type;\n    Object userAssignedIdentities;\n  }\n}\n\n",
      "csharpModel": "class Resources_CreateOrUpdateById {\n  Plan plan;\n  Object properties;\n  String kind;\n  String managedBy;\n  Sku sku;\n  Identity identity;\n\n  class Plan {\n    String name;\n    String publisher;\n    String product;\n    String promotionCode;\n    String version;\n  }\n\n  class Sku {\n    String name;\n    String tier;\n    String size;\n    String family;\n    String model;\n    Integer capacity;\n  }\n\n  class Identity {\n    String principalId;\n    String tenantId;\n    String type;\n    Object userAssignedIdentities;\n  }\n}\n\n"
    },
    {
      "operationId": "Resources_UpdateById",
      "javaSnippet": "// Resources_UpdateById\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{resourceId}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PATCH(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Resources_UpdateById\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.patch(\n  \"https://managemement.azure.com/{resourceId}? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Resources_UpdateById\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Patch, \"https://managemement.azure.com/{resourceId}?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Resources_UpdateById - body.json:\n\n{\n  \"plan\": ...,\n  \"properties\": ...,\n  \"kind\": ...,\n  \"managedBy\": ...,\n  \"sku\": ...,\n  \"identity\": ...\n}\n\n",
      "javaModel": "class Resources_UpdateById {\n  Plan plan;\n  Object properties;\n  String kind;\n  String managedBy;\n  Sku sku;\n  Identity identity;\n\n  class Plan {\n    String name;\n    String publisher;\n    String product;\n    String promotionCode;\n    String version;\n  }\n\n  class Sku {\n    String name;\n    String tier;\n    String size;\n    String family;\n    String model;\n    Integer capacity;\n  }\n\n  class Identity {\n    String principalId;\n    String tenantId;\n    String type;\n    Object userAssignedIdentities;\n  }\n}\n\n",
      "csharpModel": "class Resources_UpdateById {\n  Plan plan;\n  Object properties;\n  String kind;\n  String managedBy;\n  Sku sku;\n  Identity identity;\n\n  class Plan {\n    String name;\n    String publisher;\n    String product;\n    String promotionCode;\n    String version;\n  }\n\n  class Sku {\n    String name;\n    String tier;\n    String size;\n    String family;\n    String model;\n    Integer capacity;\n  }\n\n  class Identity {\n    String principalId;\n    String tenantId;\n    String type;\n    Object userAssignedIdentities;\n  }\n}\n\n"
    },
    {
      "operationId": "Resources_GetById",
      "javaSnippet": "// Resources_GetById\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{resourceId}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Resources_GetById\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/{resourceId}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Resources_GetById\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/{resourceId}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Resources_GetById {\n  Plan plan;\n  Object properties;\n  String kind;\n  String managedBy;\n  Sku sku;\n  Identity identity;\n\n  class Plan {\n    String name;\n    String publisher;\n    String product;\n    String promotionCode;\n    String version;\n  }\n\n  class Sku {\n    String name;\n    String tier;\n    String size;\n    String family;\n    String model;\n    Integer capacity;\n  }\n\n  class Identity {\n    String principalId;\n    String tenantId;\n    String type;\n    Object userAssignedIdentities;\n  }\n}\n\n",
      "csharpModel": "class Resources_GetById {\n  Plan plan;\n  Object properties;\n  String kind;\n  String managedBy;\n  Sku sku;\n  Identity identity;\n\n  class Plan {\n    String name;\n    String publisher;\n    String product;\n    String promotionCode;\n    String version;\n  }\n\n  class Sku {\n    String name;\n    String tier;\n    String size;\n    String family;\n    String model;\n    Integer capacity;\n  }\n\n  class Identity {\n    String principalId;\n    String tenantId;\n    String type;\n    Object userAssignedIdentities;\n  }\n}\n\n"
    },
    {
      "operationId": "Tags_DeleteValue",
      "javaSnippet": "// Tags_DeleteValue\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .DELETE()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Tags_DeleteValue\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.delete(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Tags_DeleteValue\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Delete, \"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Tags_CreateOrUpdateValue",
      "javaSnippet": "// Tags_CreateOrUpdateValue\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PUT()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Tags_CreateOrUpdateValue\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.put(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Tags_CreateOrUpdateValue\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Put, \"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Tags_CreateOrUpdateValue {\n  String id;\n  String tagValue;\n  Count count;\n\n  class Count {\n    String type;\n    Integer value;\n  }\n}\n\n",
      "csharpModel": "class Tags_CreateOrUpdateValue {\n  String id;\n  String tagValue;\n  Count count;\n\n  class Count {\n    String type;\n    Integer value;\n  }\n}\n\n"
    },
    {
      "operationId": "Tags_CreateOrUpdate",
      "javaSnippet": "// Tags_CreateOrUpdate\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames/{tagName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PUT()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Tags_CreateOrUpdate\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.put(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames/{tagName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Tags_CreateOrUpdate\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Put, \"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames/{tagName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Tags_CreateOrUpdate {\n  String id;\n  String tagName;\n  Count count;\n  List<Value> values;\n\n  class Count {\n    String type;\n    Integer value;\n  }\n\n  class Value {\n    String id;\n    String tagValue;\n    Count count;\n  \n    class Count {\n      String type;\n      Integer value;\n    }\n  }\n}\n\n",
      "csharpModel": "class Tags_CreateOrUpdate {\n  String id;\n  String tagName;\n  Count count;\n  List<Value> values;\n\n  class Count {\n    String type;\n    Integer value;\n  }\n\n  class Value {\n    String id;\n    String tagValue;\n    Count count;\n  \n    class Count {\n      String type;\n      Integer value;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Tags_Delete",
      "javaSnippet": "// Tags_Delete\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames/{tagName}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .DELETE()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Tags_Delete\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.delete(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames/{tagName}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Tags_Delete\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Delete, \"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames/{tagName}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    },
    {
      "operationId": "Tags_List",
      "javaSnippet": "// Tags_List\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Tags_List\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Tags_List\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/tagNames?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Tags_List {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String tagName;\n    Count count;\n    List<Value> values;\n  \n    class Count {\n      String type;\n      Integer value;\n    }\n  }\n}\n\n",
      "csharpModel": "class Tags_List {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String tagName;\n    Count count;\n    List<Value> values;\n  \n    class Count {\n      String type;\n      Integer value;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "DeploymentOperations_GetAtScope",
      "javaSnippet": "// DeploymentOperations_GetAtScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# DeploymentOperations_GetAtScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// DeploymentOperations_GetAtScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class DeploymentOperations_GetAtScope {\n  String id;\n  String operationId;\n  Properties properties;\n\n  class Properties {\n    String provisioningOperation;\n    String provisioningState;\n    String timestamp;\n    String duration;\n    String serviceRequestId;\n    String statusCode;\n    Object statusMessage;\n    TargetResource targetResource;\n    Request request;\n    Response response;\n  \n    class TargetResource {\n      String id;\n      String resourceName;\n      String resourceType;\n    }\n  \n    class Request {\n      Object content;\n    }\n  \n    class Response {\n      Object content;\n    }\n  }\n}\n\n",
      "csharpModel": "class DeploymentOperations_GetAtScope {\n  String id;\n  String operationId;\n  Properties properties;\n\n  class Properties {\n    String provisioningOperation;\n    String provisioningState;\n    String timestamp;\n    String duration;\n    String serviceRequestId;\n    String statusCode;\n    Object statusMessage;\n    TargetResource targetResource;\n    Request request;\n    Response response;\n  \n    class TargetResource {\n      String id;\n      String resourceName;\n      String resourceType;\n    }\n  \n    class Request {\n      Object content;\n    }\n  \n    class Response {\n      Object content;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "DeploymentOperations_ListAtScope",
      "javaSnippet": "// DeploymentOperations_ListAtScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# DeploymentOperations_ListAtScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// DeploymentOperations_ListAtScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class DeploymentOperations_ListAtScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String operationId;\n    Properties properties;\n  \n    class Properties {\n      String provisioningOperation;\n      String provisioningState;\n      String timestamp;\n      String duration;\n      String serviceRequestId;\n      String statusCode;\n      Object statusMessage;\n      TargetResource targetResource;\n      Request request;\n      Response response;\n    \n      class TargetResource {\n        String id;\n        String resourceName;\n        String resourceType;\n      }\n    \n      class Request {\n        Object content;\n      }\n    \n      class Response {\n        Object content;\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class DeploymentOperations_ListAtScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String operationId;\n    Properties properties;\n  \n    class Properties {\n      String provisioningOperation;\n      String provisioningState;\n      String timestamp;\n      String duration;\n      String serviceRequestId;\n      String statusCode;\n      Object statusMessage;\n      TargetResource targetResource;\n      Request request;\n      Response response;\n    \n      class TargetResource {\n        String id;\n        String resourceName;\n        String resourceType;\n      }\n    \n      class Request {\n        Object content;\n      }\n    \n      class Response {\n        Object content;\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "DeploymentOperations_GetAtTenantScope",
      "javaSnippet": "// DeploymentOperations_GetAtTenantScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# DeploymentOperations_GetAtTenantScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// DeploymentOperations_GetAtTenantScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class DeploymentOperations_GetAtTenantScope {\n  String id;\n  String operationId;\n  Properties properties;\n\n  class Properties {\n    String provisioningOperation;\n    String provisioningState;\n    String timestamp;\n    String duration;\n    String serviceRequestId;\n    String statusCode;\n    Object statusMessage;\n    TargetResource targetResource;\n    Request request;\n    Response response;\n  \n    class TargetResource {\n      String id;\n      String resourceName;\n      String resourceType;\n    }\n  \n    class Request {\n      Object content;\n    }\n  \n    class Response {\n      Object content;\n    }\n  }\n}\n\n",
      "csharpModel": "class DeploymentOperations_GetAtTenantScope {\n  String id;\n  String operationId;\n  Properties properties;\n\n  class Properties {\n    String provisioningOperation;\n    String provisioningState;\n    String timestamp;\n    String duration;\n    String serviceRequestId;\n    String statusCode;\n    Object statusMessage;\n    TargetResource targetResource;\n    Request request;\n    Response response;\n  \n    class TargetResource {\n      String id;\n      String resourceName;\n      String resourceType;\n    }\n  \n    class Request {\n      Object content;\n    }\n  \n    class Response {\n      Object content;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "DeploymentOperations_ListAtTenantScope",
      "javaSnippet": "// DeploymentOperations_ListAtTenantScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/operations?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# DeploymentOperations_ListAtTenantScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/operations? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// DeploymentOperations_ListAtTenantScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/providers/Microsoft.Resources/deployments/{deploymentName}/operations?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class DeploymentOperations_ListAtTenantScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String operationId;\n    Properties properties;\n  \n    class Properties {\n      String provisioningOperation;\n      String provisioningState;\n      String timestamp;\n      String duration;\n      String serviceRequestId;\n      String statusCode;\n      Object statusMessage;\n      TargetResource targetResource;\n      Request request;\n      Response response;\n    \n      class TargetResource {\n        String id;\n        String resourceName;\n        String resourceType;\n      }\n    \n      class Request {\n        Object content;\n      }\n    \n      class Response {\n        Object content;\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class DeploymentOperations_ListAtTenantScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String operationId;\n    Properties properties;\n  \n    class Properties {\n      String provisioningOperation;\n      String provisioningState;\n      String timestamp;\n      String duration;\n      String serviceRequestId;\n      String statusCode;\n      Object statusMessage;\n      TargetResource targetResource;\n      Request request;\n      Response response;\n    \n      class TargetResource {\n        String id;\n        String resourceName;\n        String resourceType;\n      }\n    \n      class Request {\n        Object content;\n      }\n    \n      class Response {\n        Object content;\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "DeploymentOperations_GetAtManagementGroupScope",
      "javaSnippet": "// DeploymentOperations_GetAtManagementGroupScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# DeploymentOperations_GetAtManagementGroupScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// DeploymentOperations_GetAtManagementGroupScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class DeploymentOperations_GetAtManagementGroupScope {\n  String id;\n  String operationId;\n  Properties properties;\n\n  class Properties {\n    String provisioningOperation;\n    String provisioningState;\n    String timestamp;\n    String duration;\n    String serviceRequestId;\n    String statusCode;\n    Object statusMessage;\n    TargetResource targetResource;\n    Request request;\n    Response response;\n  \n    class TargetResource {\n      String id;\n      String resourceName;\n      String resourceType;\n    }\n  \n    class Request {\n      Object content;\n    }\n  \n    class Response {\n      Object content;\n    }\n  }\n}\n\n",
      "csharpModel": "class DeploymentOperations_GetAtManagementGroupScope {\n  String id;\n  String operationId;\n  Properties properties;\n\n  class Properties {\n    String provisioningOperation;\n    String provisioningState;\n    String timestamp;\n    String duration;\n    String serviceRequestId;\n    String statusCode;\n    Object statusMessage;\n    TargetResource targetResource;\n    Request request;\n    Response response;\n  \n    class TargetResource {\n      String id;\n      String resourceName;\n      String resourceType;\n    }\n  \n    class Request {\n      Object content;\n    }\n  \n    class Response {\n      Object content;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "DeploymentOperations_ListAtManagementGroupScope",
      "javaSnippet": "// DeploymentOperations_ListAtManagementGroupScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# DeploymentOperations_ListAtManagementGroupScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// DeploymentOperations_ListAtManagementGroupScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class DeploymentOperations_ListAtManagementGroupScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String operationId;\n    Properties properties;\n  \n    class Properties {\n      String provisioningOperation;\n      String provisioningState;\n      String timestamp;\n      String duration;\n      String serviceRequestId;\n      String statusCode;\n      Object statusMessage;\n      TargetResource targetResource;\n      Request request;\n      Response response;\n    \n      class TargetResource {\n        String id;\n        String resourceName;\n        String resourceType;\n      }\n    \n      class Request {\n        Object content;\n      }\n    \n      class Response {\n        Object content;\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class DeploymentOperations_ListAtManagementGroupScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String operationId;\n    Properties properties;\n  \n    class Properties {\n      String provisioningOperation;\n      String provisioningState;\n      String timestamp;\n      String duration;\n      String serviceRequestId;\n      String statusCode;\n      Object statusMessage;\n      TargetResource targetResource;\n      Request request;\n      Response response;\n    \n      class TargetResource {\n        String id;\n        String resourceName;\n        String resourceType;\n      }\n    \n      class Request {\n        Object content;\n      }\n    \n      class Response {\n        Object content;\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "DeploymentOperations_GetAtSubscriptionScope",
      "javaSnippet": "// DeploymentOperations_GetAtSubscriptionScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# DeploymentOperations_GetAtSubscriptionScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// DeploymentOperations_GetAtSubscriptionScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class DeploymentOperations_GetAtSubscriptionScope {\n  String id;\n  String operationId;\n  Properties properties;\n\n  class Properties {\n    String provisioningOperation;\n    String provisioningState;\n    String timestamp;\n    String duration;\n    String serviceRequestId;\n    String statusCode;\n    Object statusMessage;\n    TargetResource targetResource;\n    Request request;\n    Response response;\n  \n    class TargetResource {\n      String id;\n      String resourceName;\n      String resourceType;\n    }\n  \n    class Request {\n      Object content;\n    }\n  \n    class Response {\n      Object content;\n    }\n  }\n}\n\n",
      "csharpModel": "class DeploymentOperations_GetAtSubscriptionScope {\n  String id;\n  String operationId;\n  Properties properties;\n\n  class Properties {\n    String provisioningOperation;\n    String provisioningState;\n    String timestamp;\n    String duration;\n    String serviceRequestId;\n    String statusCode;\n    Object statusMessage;\n    TargetResource targetResource;\n    Request request;\n    Response response;\n  \n    class TargetResource {\n      String id;\n      String resourceName;\n      String resourceType;\n    }\n  \n    class Request {\n      Object content;\n    }\n  \n    class Response {\n      Object content;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "DeploymentOperations_ListAtSubscriptionScope",
      "javaSnippet": "// DeploymentOperations_ListAtSubscriptionScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# DeploymentOperations_ListAtSubscriptionScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// DeploymentOperations_ListAtSubscriptionScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class DeploymentOperations_ListAtSubscriptionScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String operationId;\n    Properties properties;\n  \n    class Properties {\n      String provisioningOperation;\n      String provisioningState;\n      String timestamp;\n      String duration;\n      String serviceRequestId;\n      String statusCode;\n      Object statusMessage;\n      TargetResource targetResource;\n      Request request;\n      Response response;\n    \n      class TargetResource {\n        String id;\n        String resourceName;\n        String resourceType;\n      }\n    \n      class Request {\n        Object content;\n      }\n    \n      class Response {\n        Object content;\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class DeploymentOperations_ListAtSubscriptionScope {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String operationId;\n    Properties properties;\n  \n    class Properties {\n      String provisioningOperation;\n      String provisioningState;\n      String timestamp;\n      String duration;\n      String serviceRequestId;\n      String statusCode;\n      Object statusMessage;\n      TargetResource targetResource;\n      Request request;\n      Response response;\n    \n      class TargetResource {\n        String id;\n        String resourceName;\n        String resourceType;\n      }\n    \n      class Request {\n        Object content;\n      }\n    \n      class Response {\n        Object content;\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "DeploymentOperations_Get",
      "javaSnippet": "// DeploymentOperations_Get\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# DeploymentOperations_Get\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// DeploymentOperations_Get\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class DeploymentOperations_Get {\n  String id;\n  String operationId;\n  Properties properties;\n\n  class Properties {\n    String provisioningOperation;\n    String provisioningState;\n    String timestamp;\n    String duration;\n    String serviceRequestId;\n    String statusCode;\n    Object statusMessage;\n    TargetResource targetResource;\n    Request request;\n    Response response;\n  \n    class TargetResource {\n      String id;\n      String resourceName;\n      String resourceType;\n    }\n  \n    class Request {\n      Object content;\n    }\n  \n    class Response {\n      Object content;\n    }\n  }\n}\n\n",
      "csharpModel": "class DeploymentOperations_Get {\n  String id;\n  String operationId;\n  Properties properties;\n\n  class Properties {\n    String provisioningOperation;\n    String provisioningState;\n    String timestamp;\n    String duration;\n    String serviceRequestId;\n    String statusCode;\n    Object statusMessage;\n    TargetResource targetResource;\n    Request request;\n    Response response;\n  \n    class TargetResource {\n      String id;\n      String resourceName;\n      String resourceType;\n    }\n  \n    class Request {\n      Object content;\n    }\n  \n    class Response {\n      Object content;\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "DeploymentOperations_List",
      "javaSnippet": "// DeploymentOperations_List\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# DeploymentOperations_List\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// DeploymentOperations_List\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class DeploymentOperations_List {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String operationId;\n    Properties properties;\n  \n    class Properties {\n      String provisioningOperation;\n      String provisioningState;\n      String timestamp;\n      String duration;\n      String serviceRequestId;\n      String statusCode;\n      Object statusMessage;\n      TargetResource targetResource;\n      Request request;\n      Response response;\n    \n      class TargetResource {\n        String id;\n        String resourceName;\n        String resourceType;\n      }\n    \n      class Request {\n        Object content;\n      }\n    \n      class Response {\n        Object content;\n      }\n    }\n  }\n}\n\n",
      "csharpModel": "class DeploymentOperations_List {\n  List<Value> value;\n  String nextLink;\n\n  class Value {\n    String id;\n    String operationId;\n    Properties properties;\n  \n    class Properties {\n      String provisioningOperation;\n      String provisioningState;\n      String timestamp;\n      String duration;\n      String serviceRequestId;\n      String statusCode;\n      Object statusMessage;\n      TargetResource targetResource;\n      Request request;\n      Response response;\n    \n      class TargetResource {\n        String id;\n        String resourceName;\n        String resourceType;\n      }\n    \n      class Request {\n        Object content;\n      }\n    \n      class Response {\n        Object content;\n      }\n    }\n  }\n}\n\n"
    },
    {
      "operationId": "Deployments_CalculateTemplateHash",
      "javaSnippet": "// Deployments_CalculateTemplateHash\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/providers/Microsoft.Resources/calculateTemplateHash?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .POST()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Deployments_CalculateTemplateHash\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.post(\n  \"https://managemement.azure.com/providers/Microsoft.Resources/calculateTemplateHash? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Deployments_CalculateTemplateHash\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, \"https://managemement.azure.com/providers/Microsoft.Resources/calculateTemplateHash?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Deployments_CalculateTemplateHash {\n  String minifiedTemplate;\n  String templateHash;\n}\n\n",
      "csharpModel": "class Deployments_CalculateTemplateHash {\n  String minifiedTemplate;\n  String templateHash;\n}\n\n"
    },
    {
      "operationId": "Tags_CreateOrUpdateAtScope",
      "javaSnippet": "// Tags_CreateOrUpdateAtScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/tags/default?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PUT(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Tags_CreateOrUpdateAtScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.put(\n  \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/tags/default? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Tags_CreateOrUpdateAtScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Put, \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/tags/default?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Tags_CreateOrUpdateAtScope - body.json:\n\n{\n  \"properties\": ...\n}\n\n",
      "javaModel": "class Tags_CreateOrUpdateAtScope {\n  String id;\n  String name;\n  String type;\n  Properties properties;\n\n  class Properties {\n    Object tags;\n  }\n}\n\n",
      "csharpModel": "class Tags_CreateOrUpdateAtScope {\n  String id;\n  String name;\n  String type;\n  Properties properties;\n\n  class Properties {\n    Object tags;\n  }\n}\n\n"
    },
    {
      "operationId": "Tags_UpdateAtScope",
      "javaSnippet": "// Tags_UpdateAtScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/tags/default?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .PATCH(BodyPublishers.ofFile(Paths.get(\"body.json\")))\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Tags_UpdateAtScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.patch(\n  \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/tags/default? \\\n  api-version=2021-01-01\",\n  headers=headers, files={\"file\": open(\"body.json\", \"r\")})\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Tags_UpdateAtScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Patch, \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/tags/default?api-version=2021-01-01\");\nreq.Content = new StringContent(System.IO.File.ReadAllText(@\"body.json\"), Encoding.UTF8, \"application/json\");\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "requestBody": "Tags_UpdateAtScope - body.json:\n\n{\n  \"operation\": ...,\n  \"properties\": ...\n}\n\n",
      "javaModel": "class Tags_UpdateAtScope {\n  String id;\n  String name;\n  String type;\n  Properties properties;\n\n  class Properties {\n    Object tags;\n  }\n}\n\n",
      "csharpModel": "class Tags_UpdateAtScope {\n  String id;\n  String name;\n  String type;\n  Properties properties;\n\n  class Properties {\n    Object tags;\n  }\n}\n\n"
    },
    {
      "operationId": "Tags_GetAtScope",
      "javaSnippet": "// Tags_GetAtScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/tags/default?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .GET()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Tags_GetAtScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.get(\n  \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/tags/default? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Tags_GetAtScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Get, \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/tags/default?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n",
      "javaModel": "class Tags_GetAtScope {\n  String id;\n  String name;\n  String type;\n  Properties properties;\n\n  class Properties {\n    Object tags;\n  }\n}\n\n",
      "csharpModel": "class Tags_GetAtScope {\n  String id;\n  String name;\n  String type;\n  Properties properties;\n\n  class Properties {\n    Object tags;\n  }\n}\n\n"
    },
    {
      "operationId": "Tags_DeleteAtScope",
      "javaSnippet": "// Tags_DeleteAtScope\n\nHttpClient client = HttpClient.newHttpClient();\n\nHttpRequest request = HttpRequest.newBuilder()\n  .uri(URI.create(\"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/tags/default?api-version=2021-01-01\"))\n  .header(\"Content-Type\", \"application/json\")\n  .DELETE()\n  .build();\n\nHttpResponse<String> response = client.send(request, BodyHandlers.ofString());\nSystem.out.println(response.statusCode());\nSystem.out.println(response.body());\n\n",
      "pythonSnippet": "# Tags_DeleteAtScope\n\n# import requests\n\nheaders = {\"Content-Type\": \"application/json\"}\n\nresponse = requests.delete(\n  \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/tags/default? \\\n  api-version=2021-01-01\",\n  headers=headers)\n\nprint(response.status_code)\nprint(response.content)\n\n",
      "csharpSnippet": "// Tags_DeleteAtScope\n\nHttpClient client = new HttpClient();\nHttpRequestMessage req = new HttpRequestMessage(HttpMethod.Delete, \"https://managemement.azure.com/{scope}/providers/Microsoft.Resources/tags/default?api-version=2021-01-01\");\nreq.Content = new StringContent();\n\nHttpResponseMessage httpResponseMessage = await client.SendAsync(req);\nhttpResponseMessage.EnsureSuccessStatusCode();\nHttpContent httpContent = httpResponseMessage.Content;\nstring responseString = await httpContent.ReadAsStringAsync();\nstring responseStatus = httpResponseMessage.StatusCode.ToString();\nConsole.WriteLine(responseString);\nConsole.WriteLine(responseString);\n\n"
    }
  ]
}