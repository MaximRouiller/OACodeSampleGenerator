{
  "openapi": "3.0.0",
  "info": {
    "title": "ResourceManagementClient",
    "version": "2021-04-01",
    "description": "Provides operations for working with resources and resource groups."
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "paths": {
    "/providers/Microsoft.Resources/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists all of the available Microsoft.Resources REST API operations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Result of the request to list Microsoft.Resources operations. It contains a list of operations and a URL link to get the next set of results.",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "description": "Microsoft.Resources operation",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Operation name: {provider}/{resource}/{operation}",
                            "type": "string"
                          },
                          "display": {
                            "description": "The object that represents the operation.",
                            "properties": {
                              "provider": {
                                "description": "Service provider: Microsoft.Resources",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
                                "type": "string"
                              },
                              "operation": {
                                "description": "Operation type: Read, write, delete, etc.",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description of the operation.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "description": "List of Microsoft.Resources operations."
                    },
                    "nextLink": {
                      "type": "string",
                      "description": "URL to get the next set of operation list results if there are any."
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_DeleteAtScope",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
              },
              "Update tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Update tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              },
              "Get tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Get tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistenceAtScope",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
              },
              "Update tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Update tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              },
              "Get tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Get tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdateAtScope",
        "summary": "Deploys resources at a given scope.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
              },
              "Update tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Update tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              },
              "Get tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Get tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deployments_CreateOrUpdateAtScopeParameters"
        },
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                },
                "examples": {
                  "Create deployment at a given scope.": {
                    "$ref": "#/components/examples/Create_deployment_at_a_given_scope."
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                },
                "examples": {
                  "Create deployment at a given scope.": {
                    "$ref": "#/components/examples/Create_deployment_at_a_given_scope."
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_GetAtScope",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
              },
              "Update tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Update tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              },
              "Get tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Get tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CancelAtScope",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
              },
              "Update tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Update tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              },
              "Get tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Get tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ValidateAtScope",
        "x-ms-long-running-operation": true,
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
              },
              "Update tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Update tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              },
              "Get tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Get tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deployments_ValidateAtScopeParameters"
        },
        "responses": {
          "200": {
            "description": "OK - Returns the validation result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          },
          "400": {
            "description": "Returns the validation result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplateAtScope",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
              },
              "Update tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Update tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              },
              "Get tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Get tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content."
                    }
                  },
                  "description": "The deployment export result. "
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListAtScope",
        "description": "Get all the deployments at the given scope.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
              },
              "Update tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Update tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              },
              "Get tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Get tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "The number of results to get. If null is passed, returns all deployments.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentListResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/components/schemas/DeploymentExtendedFilter"
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_DeleteAtTenantScope",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistenceAtTenantScope",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdateAtTenantScope",
        "summary": "Deploys resources at tenant scope.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deployments_CreateOrUpdateAtTenantScopeParameters"
        },
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                },
                "examples": {
                  "Create deployment at tenant scope.": {
                    "$ref": "#/components/examples/Create_deployment_at_tenant_scope."
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                },
                "examples": {
                  "Create deployment at tenant scope.": {
                    "$ref": "#/components/examples/Create_deployment_at_tenant_scope."
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_GetAtTenantScope",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CancelAtTenantScope",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ValidateAtTenantScope",
        "x-ms-long-running-operation": true,
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deployments_ValidateAtTenantScopeParameters"
        },
        "responses": {
          "200": {
            "description": "OK - Returns the validation result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          },
          "400": {
            "description": "Returns the validation result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_WhatIfAtTenantScope",
        "description": "Returns changes that will be made by the deployment if executed at the scope of the tenant group.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deployments_WhatIfAtTenantScopeParameters"
        },
        "responses": {
          "200": {
            "description": "OK - Returns What-If operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhatIfOperationResult"
                },
                "examples": {
                  "Predict template changes at management group scope": {
                    "$ref": "#/components/examples/Predict_template_changes_at_management_group_scope"
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Returns URL in Location header to query for long-running operation status.",
            "headers": {
              "Location": {
                "description": "URL to get status of this long-running operation.",
                "schema": {
                  "type": "string"
                },
                "example": "/subscriptions/4d0ca63b-7939-4c9c-afbe-5fafae501724/operationresults/ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"
              },
              "Retry-After": {
                "description": "Number of seconds to wait before polling for status.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplateAtTenantScope",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content."
                    }
                  },
                  "description": "The deployment export result. "
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListAtTenantScope",
        "description": "Get all the deployments at the tenant scope.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "The number of results to get. If null is passed, returns all deployments.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentListResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/components/schemas/DeploymentExtendedFilter"
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_DeleteAtManagementGroupScope",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90
            },
            "examples": {
              "Create deployment at management group scope.": {
                "value": "my-management-group-id"
              },
              "Predict template changes at management group scope": {
                "value": "myManagementGruop"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistenceAtManagementGroupScope",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90
            },
            "examples": {
              "Create deployment at management group scope.": {
                "value": "my-management-group-id"
              },
              "Predict template changes at management group scope": {
                "value": "myManagementGruop"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdateAtManagementGroupScope",
        "summary": "Deploys resources at management group scope.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90
            },
            "examples": {
              "Create deployment at management group scope.": {
                "value": "my-management-group-id"
              },
              "Predict template changes at management group scope": {
                "value": "myManagementGruop"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deployments_CreateOrUpdateAtTenantScopeParameters"
        },
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                },
                "examples": {
                  "Create deployment at management group scope.": {
                    "$ref": "#/components/examples/Create_deployment_at_management_group_scope."
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                },
                "examples": {
                  "Create deployment at management group scope.": {
                    "$ref": "#/components/examples/Create_deployment_at_management_group_scope."
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_GetAtManagementGroupScope",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90
            },
            "examples": {
              "Create deployment at management group scope.": {
                "value": "my-management-group-id"
              },
              "Predict template changes at management group scope": {
                "value": "myManagementGruop"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CancelAtManagementGroupScope",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90
            },
            "examples": {
              "Create deployment at management group scope.": {
                "value": "my-management-group-id"
              },
              "Predict template changes at management group scope": {
                "value": "myManagementGruop"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ValidateAtManagementGroupScope",
        "x-ms-long-running-operation": true,
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90
            },
            "examples": {
              "Create deployment at management group scope.": {
                "value": "my-management-group-id"
              },
              "Predict template changes at management group scope": {
                "value": "myManagementGruop"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deployments_ValidateAtTenantScopeParameters"
        },
        "responses": {
          "200": {
            "description": "OK - Returns the validation result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          },
          "400": {
            "description": "Returns the validation result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_WhatIfAtManagementGroupScope",
        "description": "Returns changes that will be made by the deployment if executed at the scope of the management group.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90
            },
            "examples": {
              "Create deployment at management group scope.": {
                "value": "my-management-group-id"
              },
              "Predict template changes at management group scope": {
                "value": "myManagementGruop"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deployments_WhatIfAtTenantScopeParameters"
        },
        "responses": {
          "200": {
            "description": "OK - Returns What-If operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhatIfOperationResult"
                },
                "examples": {
                  "Predict template changes at management group scope": {
                    "$ref": "#/components/examples/Predict_template_changes_at_management_group_scope"
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Returns URL in Location header to query for long-running operation status.",
            "headers": {
              "Location": {
                "description": "URL to get status of this long-running operation.",
                "schema": {
                  "type": "string"
                },
                "example": "/subscriptions/4d0ca63b-7939-4c9c-afbe-5fafae501724/operationresults/ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"
              },
              "Retry-After": {
                "description": "Number of seconds to wait before polling for status.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplateAtManagementGroupScope",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90
            },
            "examples": {
              "Create deployment at management group scope.": {
                "value": "my-management-group-id"
              },
              "Predict template changes at management group scope": {
                "value": "myManagementGruop"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content."
                    }
                  },
                  "description": "The deployment export result. "
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListAtManagementGroupScope",
        "description": "Get all the deployments for a management group.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90
            },
            "examples": {
              "Create deployment at management group scope.": {
                "value": "my-management-group-id"
              },
              "Predict template changes at management group scope": {
                "value": "myManagementGruop"
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "The number of results to get. If null is passed, returns all deployments.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentListResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/components/schemas/DeploymentExtendedFilter"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_DeleteAtSubscriptionScope",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistenceAtSubscriptionScope",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdateAtSubscriptionScope",
        "summary": "Deploys resources at subscription scope.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deployments_CreateOrUpdateAtScopeParameters"
        },
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                },
                "examples": {
                  "Create a deployment that will deploy a templateSpec with the given resourceId": {
                    "$ref": "#/components/examples/Create_a_deployment_that_will_deploy_a_templateSpec_with_the_given_resourceId"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                },
                "examples": {
                  "Create a deployment that will deploy a templateSpec with the given resourceId": {
                    "$ref": "#/components/examples/Create_a_deployment_that_will_deploy_a_templateSpec_with_the_given_resourceId"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_GetAtSubscriptionScope",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CancelAtSubscriptionScope",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ValidateAtSubscriptionScope",
        "x-ms-long-running-operation": true,
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deployments_ValidateAtScopeParameters"
        },
        "responses": {
          "200": {
            "description": "OK - Returns the validation result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          },
          "400": {
            "description": "Returns the validation result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_WhatIfAtSubscriptionScope",
        "description": "Returns changes that will be made by the deployment if executed at the scope of the subscription.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "location": {
                    "type": "string",
                    "description": "The location to store the deployment data."
                  },
                  "properties": {
                    "description": "The deployment properties.",
                    "properties": {
                      "whatIfSettings": {
                        "description": "Optional What-If operation settings.",
                        "properties": {
                          "resultFormat": {
                            "type": "string",
                            "description": "The format of the What-If results",
                            "enum": [
                              "ResourceIdOnly",
                              "FullResourcePayloads"
                            ],
                            "x-ms-enum": {
                              "name": "WhatIfResultFormat",
                              "modelAsString": false
                            }
                          }
                        }
                      }
                    },
                    "allOf": [
                      {
                        "properties": {
                          "template": {
                            "type": "object",
                            "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                          },
                          "templateLink": {
                            "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                            "properties": {
                              "uri": {
                                "type": "string",
                                "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                              },
                              "id": {
                                "type": "string",
                                "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                              },
                              "relativePath": {
                                "type": "string",
                                "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                              },
                              "contentVersion": {
                                "type": "string",
                                "description": "If included, must match the ContentVersion in the template."
                              },
                              "queryString": {
                                "type": "string",
                                "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                              }
                            }
                          },
                          "parameters": {
                            "type": "object",
                            "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                          },
                          "parametersLink": {
                            "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                            "properties": {
                              "uri": {
                                "type": "string",
                                "description": "The URI of the parameters file."
                              },
                              "contentVersion": {
                                "type": "string",
                                "description": "If included, must match the ContentVersion in the template."
                              }
                            },
                            "required": [
                              "uri"
                            ]
                          },
                          "mode": {
                            "type": "string",
                            "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                            "enum": [
                              "Incremental",
                              "Complete"
                            ],
                            "x-ms-enum": {
                              "name": "DeploymentMode",
                              "modelAsString": false
                            }
                          },
                          "debugSetting": {
                            "description": "The debug setting of the deployment.",
                            "properties": {
                              "detailLevel": {
                                "type": "string",
                                "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                              }
                            }
                          },
                          "onErrorDeployment": {
                            "description": "The deployment on error behavior.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                                "enum": [
                                  "LastSuccessful",
                                  "SpecificDeployment"
                                ],
                                "x-ms-enum": {
                                  "name": "OnErrorDeploymentType",
                                  "modelAsString": false
                                }
                              },
                              "deploymentName": {
                                "type": "string",
                                "description": "The deployment to be used on error case."
                              }
                            }
                          },
                          "expressionEvaluationOptions": {
                            "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                            "properties": {
                              "scope": {
                                "type": "string",
                                "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                                "enum": [
                                  "NotSpecified",
                                  "Outer",
                                  "Inner"
                                ],
                                "x-ms-enum": {
                                  "name": "ExpressionEvaluationOptionsScopeType",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "mode"
                        ],
                        "description": "Deployment properties."
                      }
                    ]
                  }
                },
                "required": [
                  "properties"
                ],
                "description": "Deployment What-if operation parameters."
              }
            }
          },
          "description": "Parameters to What If.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returns What-If operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhatIfOperationResult"
                },
                "examples": {
                  "Predict template changes at subscription scope": {
                    "$ref": "#/components/examples/Predict_template_changes_at_subscription_scope"
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Returns URL in Location header to query for long-running operation status.",
            "headers": {
              "Location": {
                "description": "URL to get status of this long-running operation.",
                "schema": {
                  "type": "string"
                },
                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"
              },
              "Retry-After": {
                "description": "Number of seconds to wait before polling for status.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplateAtSubscriptionScope",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content."
                    }
                  },
                  "description": "The deployment export result. "
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListAtSubscriptionScope",
        "description": "Get all the deployments for a subscription.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "The number of results to get. If null is passed, returns all deployments.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentListResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/components/schemas/DeploymentExtendedFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Delete",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group with the deployment to delete. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistence",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group with the deployment to check. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdate",
        "summary": "Deploys resources to a resource group.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-resource-group"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-resource-group"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-resource-group"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-resource-group"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deployments_CreateOrUpdateAtScopeParameters"
        },
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                },
                "examples": {
                  "Create a deployment that will redeploy the last successful deployment on failure": {
                    "$ref": "#/components/examples/Create_a_deployment_that_will_redeploy_the_last_successful_deployment_on_failure"
                  },
                  "Create a deployment that will redeploy another deployment on failure": {
                    "$ref": "#/components/examples/Create_a_deployment_that_will_redeploy_another_deployment_on_failure"
                  },
                  "Create a deployment that will deploy a templateSpec with the given resourceId": {
                    "$ref": "#/components/examples/Create_a_deployment_that_will_deploy_a_templateSpec_with_the_given_resourceId"
                  },
                  "Create a deployment that will deploy a template with a uri and queryString": {
                    "$ref": "#/components/examples/Create_a_deployment_that_will_deploy_a_template_with_a_uri_and_queryString"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                },
                "examples": {
                  "Create a deployment that will redeploy the last successful deployment on failure": {
                    "$ref": "#/components/examples/Create_a_deployment_that_will_redeploy_the_last_successful_deployment_on_failure"
                  },
                  "Create a deployment that will redeploy another deployment on failure": {
                    "$ref": "#/components/examples/Create_a_deployment_that_will_redeploy_another_deployment_on_failure"
                  },
                  "Create a deployment that will deploy a templateSpec with the given resourceId": {
                    "$ref": "#/components/examples/Create_a_deployment_that_will_deploy_a_templateSpec_with_the_given_resourceId"
                  },
                  "Create a deployment that will deploy a template with a uri and queryString": {
                    "$ref": "#/components/examples/Create_a_deployment_that_will_deploy_a_template_with_a_uri_and_queryString"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Get",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Cancel",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Validate",
        "x-ms-long-running-operation": true,
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group the template will be deployed to. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deployments_ValidateAtScopeParameters"
        },
        "responses": {
          "200": {
            "description": "OK - Returns the validation result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          },
          "400": {
            "description": "Returns the validation result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_WhatIf",
        "description": "Returns changes that will be made by the deployment if executed at the scope of the resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group the template will be deployed to. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Predict template changes at resource group scope": {
                "value": "my-resource-group"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "location": {
                    "type": "string",
                    "description": "The location to store the deployment data."
                  },
                  "properties": {
                    "description": "The deployment properties.",
                    "properties": {
                      "whatIfSettings": {
                        "description": "Optional What-If operation settings.",
                        "properties": {
                          "resultFormat": {
                            "type": "string",
                            "description": "The format of the What-If results",
                            "enum": [
                              "ResourceIdOnly",
                              "FullResourcePayloads"
                            ],
                            "x-ms-enum": {
                              "name": "WhatIfResultFormat",
                              "modelAsString": false
                            }
                          }
                        }
                      }
                    },
                    "allOf": [
                      {
                        "properties": {
                          "template": {
                            "type": "object",
                            "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                          },
                          "templateLink": {
                            "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                            "properties": {
                              "uri": {
                                "type": "string",
                                "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                              },
                              "id": {
                                "type": "string",
                                "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                              },
                              "relativePath": {
                                "type": "string",
                                "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                              },
                              "contentVersion": {
                                "type": "string",
                                "description": "If included, must match the ContentVersion in the template."
                              },
                              "queryString": {
                                "type": "string",
                                "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                              }
                            }
                          },
                          "parameters": {
                            "type": "object",
                            "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                          },
                          "parametersLink": {
                            "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                            "properties": {
                              "uri": {
                                "type": "string",
                                "description": "The URI of the parameters file."
                              },
                              "contentVersion": {
                                "type": "string",
                                "description": "If included, must match the ContentVersion in the template."
                              }
                            },
                            "required": [
                              "uri"
                            ]
                          },
                          "mode": {
                            "type": "string",
                            "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                            "enum": [
                              "Incremental",
                              "Complete"
                            ],
                            "x-ms-enum": {
                              "name": "DeploymentMode",
                              "modelAsString": false
                            }
                          },
                          "debugSetting": {
                            "description": "The debug setting of the deployment.",
                            "properties": {
                              "detailLevel": {
                                "type": "string",
                                "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                              }
                            }
                          },
                          "onErrorDeployment": {
                            "description": "The deployment on error behavior.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                                "enum": [
                                  "LastSuccessful",
                                  "SpecificDeployment"
                                ],
                                "x-ms-enum": {
                                  "name": "OnErrorDeploymentType",
                                  "modelAsString": false
                                }
                              },
                              "deploymentName": {
                                "type": "string",
                                "description": "The deployment to be used on error case."
                              }
                            }
                          },
                          "expressionEvaluationOptions": {
                            "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                            "properties": {
                              "scope": {
                                "type": "string",
                                "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                                "enum": [
                                  "NotSpecified",
                                  "Outer",
                                  "Inner"
                                ],
                                "x-ms-enum": {
                                  "name": "ExpressionEvaluationOptionsScopeType",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "mode"
                        ],
                        "description": "Deployment properties."
                      }
                    ]
                  }
                },
                "required": [
                  "properties"
                ],
                "description": "Deployment What-if operation parameters."
              }
            }
          },
          "description": "Parameters to validate.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returns What-If operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhatIfOperationResult"
                },
                "examples": {
                  "Predict template changes at resource group scope": {
                    "$ref": "#/components/examples/Predict_template_changes_at_resource_group_scope"
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Returns URL in Location header to query for long-running operation status.",
            "headers": {
              "Location": {
                "description": "URL to get status of this long-running operation.",
                "schema": {
                  "type": "string"
                },
                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"
              },
              "Retry-After": {
                "description": "Number of seconds to wait before polling for status.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplate",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content."
                    }
                  },
                  "description": "The deployment export result. "
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListByResourceGroup",
        "description": "Get all the deployments for a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group with the deployments to get. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "The number of results to get. If null is passed, returns all deployments.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentListResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/components/schemas/DeploymentExtendedFilter"
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister": {
      "post": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_Unregister",
        "description": "Unregisters a subscription from a resource provider.",
        "parameters": [
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "description": "The namespace of the resource provider to unregister.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource provider.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provider ID."
                    },
                    "namespace": {
                      "type": "string",
                      "description": "The namespace of the resource provider."
                    },
                    "registrationState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The registration state of the resource provider."
                    },
                    "registrationPolicy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The registration policy of the resource provider."
                    },
                    "resourceTypes": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "properties": {
                          "resourceType": {
                            "type": "string",
                            "description": "The resource type."
                          },
                          "locations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The collection of locations where this resource type can be created."
                          },
                          "locationMappings": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "location": {
                                  "type": "string",
                                  "description": "The azure location."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The extended location type."
                                },
                                "extendedLocations": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The extended locations for the azure location."
                                }
                              },
                              "description": "The provider extended location. "
                            },
                            "description": "The location mappings that are supported by this resource type."
                          },
                          "aliases": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The alias name."
                                },
                                "paths": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path of an alias."
                                      },
                                      "apiVersions": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "The API versions."
                                      },
                                      "pattern": {
                                        "description": "The pattern for an alias path.",
                                        "properties": {
                                          "phrase": {
                                            "type": "string",
                                            "description": "The alias pattern phrase."
                                          },
                                          "variable": {
                                            "type": "string",
                                            "description": "The alias pattern variable."
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "NotSpecified",
                                              "Extract"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPatternType",
                                              "modelAsString": false,
                                              "values": [
                                                {
                                                  "value": "NotSpecified",
                                                  "description": "NotSpecified is not allowed."
                                                },
                                                {
                                                  "value": "Extract",
                                                  "description": "Extract is the only allowed value."
                                                }
                                              ]
                                            },
                                            "description": "The type of alias pattern"
                                          }
                                        }
                                      },
                                      "metadata": {
                                        "readOnly": true,
                                        "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "readOnly": true,
                                            "enum": [
                                              "NotSpecified",
                                              "Any",
                                              "String",
                                              "Object",
                                              "Array",
                                              "Integer",
                                              "Number",
                                              "Boolean"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPathTokenType",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "NotSpecified",
                                                  "description": "The token type is not specified."
                                                },
                                                {
                                                  "value": "Any",
                                                  "description": "The token type can be anything."
                                                },
                                                {
                                                  "value": "String",
                                                  "description": "The token type is string."
                                                },
                                                {
                                                  "value": "Object",
                                                  "description": "The token type is object."
                                                },
                                                {
                                                  "value": "Array",
                                                  "description": "The token type is array."
                                                },
                                                {
                                                  "value": "Integer",
                                                  "description": "The token type is integer."
                                                },
                                                {
                                                  "value": "Number",
                                                  "description": "The token type is number."
                                                },
                                                {
                                                  "value": "Boolean",
                                                  "description": "The token type is boolean."
                                                }
                                              ]
                                            },
                                            "description": "The type of the token that the alias path is referring to."
                                          },
                                          "attributes": {
                                            "type": "string",
                                            "readOnly": true,
                                            "enum": [
                                              "None",
                                              "Modifiable"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPathAttributes",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "None",
                                                  "description": "The token that the alias path is referring to has no attributes."
                                                },
                                                {
                                                  "value": "Modifiable",
                                                  "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                                }
                                              ]
                                            },
                                            "description": "The attributes of the token that the alias path is referring to."
                                          }
                                        }
                                      }
                                    },
                                    "description": "The type of the paths for alias."
                                  },
                                  "description": "The paths for an alias."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the alias.",
                                  "enum": [
                                    "NotSpecified",
                                    "PlainText",
                                    "Mask"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasType",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "value": "NotSpecified",
                                        "description": "Alias type is unknown (same as not providing alias type)."
                                      },
                                      {
                                        "value": "PlainText",
                                        "description": "Alias value is not secret."
                                      },
                                      {
                                        "value": "Mask",
                                        "description": "Alias value is secret."
                                      }
                                    ]
                                  }
                                },
                                "defaultPath": {
                                  "type": "string",
                                  "description": "The default path for an alias."
                                },
                                "defaultPattern": {
                                  "description": "The default pattern for an alias.",
                                  "properties": {
                                    "phrase": {
                                      "type": "string",
                                      "description": "The alias pattern phrase."
                                    },
                                    "variable": {
                                      "type": "string",
                                      "description": "The alias pattern variable."
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "NotSpecified",
                                        "Extract"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPatternType",
                                        "modelAsString": false,
                                        "values": [
                                          {
                                            "value": "NotSpecified",
                                            "description": "NotSpecified is not allowed."
                                          },
                                          {
                                            "value": "Extract",
                                            "description": "Extract is the only allowed value."
                                          }
                                        ]
                                      },
                                      "description": "The type of alias pattern"
                                    }
                                  }
                                },
                                "defaultMetadata": {
                                  "readOnly": true,
                                  "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "NotSpecified",
                                        "Any",
                                        "String",
                                        "Object",
                                        "Array",
                                        "Integer",
                                        "Number",
                                        "Boolean"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPathTokenType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "NotSpecified",
                                            "description": "The token type is not specified."
                                          },
                                          {
                                            "value": "Any",
                                            "description": "The token type can be anything."
                                          },
                                          {
                                            "value": "String",
                                            "description": "The token type is string."
                                          },
                                          {
                                            "value": "Object",
                                            "description": "The token type is object."
                                          },
                                          {
                                            "value": "Array",
                                            "description": "The token type is array."
                                          },
                                          {
                                            "value": "Integer",
                                            "description": "The token type is integer."
                                          },
                                          {
                                            "value": "Number",
                                            "description": "The token type is number."
                                          },
                                          {
                                            "value": "Boolean",
                                            "description": "The token type is boolean."
                                          }
                                        ]
                                      },
                                      "description": "The type of the token that the alias path is referring to."
                                    },
                                    "attributes": {
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "None",
                                        "Modifiable"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPathAttributes",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "None",
                                            "description": "The token that the alias path is referring to has no attributes."
                                          },
                                          {
                                            "value": "Modifiable",
                                            "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                          }
                                        ]
                                      },
                                      "description": "The attributes of the token that the alias path is referring to."
                                    }
                                  }
                                }
                              },
                              "description": "The alias type. "
                            },
                            "description": "The aliases that are supported by this resource type."
                          },
                          "apiVersions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The API version."
                          },
                          "defaultApiVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The default API version."
                          },
                          "zoneMappings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "location": {
                                  "type": "string",
                                  "description": "The location of the zone mapping."
                                },
                                "zones": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "apiProfiles": {
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "properties": {
                                "profileVersion": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The profile version."
                                },
                                "apiVersion": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The API version."
                                }
                              }
                            },
                            "description": "The API profiles for the resource provider."
                          },
                          "capabilities": {
                            "type": "string",
                            "description": "The additional capabilities offered by this resource type."
                          },
                          "properties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string",
                              "description": "The additional properties. "
                            },
                            "description": "The properties."
                          }
                        },
                        "description": "Resource type managed by the resource provider."
                      },
                      "description": "The collection of provider resource types."
                    },
                    "providerAuthorizationConsentState": {
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Required",
                        "NotRequired",
                        "Consented"
                      ],
                      "description": "The provider authorization consent state.",
                      "x-ms-enum": {
                        "name": "ProviderAuthorizationConsentState",
                        "modelAsString": true
                      }
                    }
                  },
                  "description": "Resource provider information."
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/{resourceProviderNamespace}/register": {
      "post": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_RegisterAtManagementGroupScope",
        "description": "Registers a management group with a resource provider.",
        "parameters": [
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "description": "The namespace of the resource provider to register.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90
            },
            "examples": {
              "Create deployment at management group scope.": {
                "value": "my-management-group-id"
              },
              "Predict template changes at management group scope": {
                "value": "myManagementGruop"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource provider."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/providerPermissions": {
      "get": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_ProviderPermissions",
        "description": "Get the provider permissions.",
        "parameters": [
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "description": "The namespace of the resource provider.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Get provider resource types.": {
                "value": "Microsoft.TestRP"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information on the provider permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The provider permission",
                        "properties": {
                          "applicationId": {
                            "type": "string",
                            "description": "The application id."
                          },
                          "roleDefinition": {
                            "description": "Role definition properties.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The role definition ID."
                              },
                              "name": {
                                "type": "string",
                                "description": "The role definition name."
                              },
                              "isServiceRole": {
                                "type": "boolean",
                                "description": "If this is a service role."
                              },
                              "permissions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "readOnly": true,
                                  "properties": {
                                    "actions": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Allowed actions."
                                    },
                                    "notActions": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Denied actions."
                                    },
                                    "dataActions": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Allowed Data actions."
                                    },
                                    "notDataActions": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Denied Data actions."
                                    }
                                  },
                                  "description": "Role definition permissions."
                                },
                                "description": "Role definition permissions."
                              },
                              "scopes": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Role definition assignable scopes."
                              }
                            }
                          },
                          "managedByRoleDefinition": {
                            "description": "Role definition properties.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The role definition ID."
                              },
                              "name": {
                                "type": "string",
                                "description": "The role definition name."
                              },
                              "isServiceRole": {
                                "type": "boolean",
                                "description": "If this is a service role."
                              },
                              "permissions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "readOnly": true,
                                  "properties": {
                                    "actions": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Allowed actions."
                                    },
                                    "notActions": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Denied actions."
                                    },
                                    "dataActions": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Allowed Data actions."
                                    },
                                    "notDataActions": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Denied Data actions."
                                    }
                                  },
                                  "description": "Role definition permissions."
                                },
                                "description": "Role definition permissions."
                              },
                              "scopes": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Role definition assignable scopes."
                              }
                            }
                          },
                          "providerAuthorizationConsentState": {
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Required",
                              "NotRequired",
                              "Consented"
                            ],
                            "description": "The provider authorization consent state.",
                            "x-ms-enum": {
                              "name": "ProviderAuthorizationConsentState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "description": "An array of provider permissions."
                    },
                    "nextLink": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The URL to use for getting the next set of results."
                    }
                  },
                  "description": "List of provider permissions."
                },
                "examples": {
                  "Get provider resource types.": {
                    "$ref": "#/components/examples/Get_provider_resource_types."
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register": {
      "post": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_Register",
        "description": "Registers a subscription with a resource provider.",
        "parameters": [
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "description": "The namespace of the resource provider to register.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "The provider registration definition.",
                "properties": {
                  "thirdPartyProviderConsent": {
                    "description": "The provider consent.",
                    "type": "object",
                    "properties": {
                      "consentToAuthorization": {
                        "type": "boolean",
                        "description": "A value indicating whether authorization is consented or not."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "The third party consent for S2S."
        },
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource provider.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provider ID."
                    },
                    "namespace": {
                      "type": "string",
                      "description": "The namespace of the resource provider."
                    },
                    "registrationState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The registration state of the resource provider."
                    },
                    "registrationPolicy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The registration policy of the resource provider."
                    },
                    "resourceTypes": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "properties": {
                          "resourceType": {
                            "type": "string",
                            "description": "The resource type."
                          },
                          "locations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The collection of locations where this resource type can be created."
                          },
                          "locationMappings": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "location": {
                                  "type": "string",
                                  "description": "The azure location."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The extended location type."
                                },
                                "extendedLocations": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The extended locations for the azure location."
                                }
                              },
                              "description": "The provider extended location. "
                            },
                            "description": "The location mappings that are supported by this resource type."
                          },
                          "aliases": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The alias name."
                                },
                                "paths": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path of an alias."
                                      },
                                      "apiVersions": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "The API versions."
                                      },
                                      "pattern": {
                                        "description": "The pattern for an alias path.",
                                        "properties": {
                                          "phrase": {
                                            "type": "string",
                                            "description": "The alias pattern phrase."
                                          },
                                          "variable": {
                                            "type": "string",
                                            "description": "The alias pattern variable."
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "NotSpecified",
                                              "Extract"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPatternType",
                                              "modelAsString": false,
                                              "values": [
                                                {
                                                  "value": "NotSpecified",
                                                  "description": "NotSpecified is not allowed."
                                                },
                                                {
                                                  "value": "Extract",
                                                  "description": "Extract is the only allowed value."
                                                }
                                              ]
                                            },
                                            "description": "The type of alias pattern"
                                          }
                                        }
                                      },
                                      "metadata": {
                                        "readOnly": true,
                                        "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "readOnly": true,
                                            "enum": [
                                              "NotSpecified",
                                              "Any",
                                              "String",
                                              "Object",
                                              "Array",
                                              "Integer",
                                              "Number",
                                              "Boolean"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPathTokenType",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "NotSpecified",
                                                  "description": "The token type is not specified."
                                                },
                                                {
                                                  "value": "Any",
                                                  "description": "The token type can be anything."
                                                },
                                                {
                                                  "value": "String",
                                                  "description": "The token type is string."
                                                },
                                                {
                                                  "value": "Object",
                                                  "description": "The token type is object."
                                                },
                                                {
                                                  "value": "Array",
                                                  "description": "The token type is array."
                                                },
                                                {
                                                  "value": "Integer",
                                                  "description": "The token type is integer."
                                                },
                                                {
                                                  "value": "Number",
                                                  "description": "The token type is number."
                                                },
                                                {
                                                  "value": "Boolean",
                                                  "description": "The token type is boolean."
                                                }
                                              ]
                                            },
                                            "description": "The type of the token that the alias path is referring to."
                                          },
                                          "attributes": {
                                            "type": "string",
                                            "readOnly": true,
                                            "enum": [
                                              "None",
                                              "Modifiable"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPathAttributes",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "None",
                                                  "description": "The token that the alias path is referring to has no attributes."
                                                },
                                                {
                                                  "value": "Modifiable",
                                                  "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                                }
                                              ]
                                            },
                                            "description": "The attributes of the token that the alias path is referring to."
                                          }
                                        }
                                      }
                                    },
                                    "description": "The type of the paths for alias."
                                  },
                                  "description": "The paths for an alias."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the alias.",
                                  "enum": [
                                    "NotSpecified",
                                    "PlainText",
                                    "Mask"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasType",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "value": "NotSpecified",
                                        "description": "Alias type is unknown (same as not providing alias type)."
                                      },
                                      {
                                        "value": "PlainText",
                                        "description": "Alias value is not secret."
                                      },
                                      {
                                        "value": "Mask",
                                        "description": "Alias value is secret."
                                      }
                                    ]
                                  }
                                },
                                "defaultPath": {
                                  "type": "string",
                                  "description": "The default path for an alias."
                                },
                                "defaultPattern": {
                                  "description": "The default pattern for an alias.",
                                  "properties": {
                                    "phrase": {
                                      "type": "string",
                                      "description": "The alias pattern phrase."
                                    },
                                    "variable": {
                                      "type": "string",
                                      "description": "The alias pattern variable."
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "NotSpecified",
                                        "Extract"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPatternType",
                                        "modelAsString": false,
                                        "values": [
                                          {
                                            "value": "NotSpecified",
                                            "description": "NotSpecified is not allowed."
                                          },
                                          {
                                            "value": "Extract",
                                            "description": "Extract is the only allowed value."
                                          }
                                        ]
                                      },
                                      "description": "The type of alias pattern"
                                    }
                                  }
                                },
                                "defaultMetadata": {
                                  "readOnly": true,
                                  "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "NotSpecified",
                                        "Any",
                                        "String",
                                        "Object",
                                        "Array",
                                        "Integer",
                                        "Number",
                                        "Boolean"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPathTokenType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "NotSpecified",
                                            "description": "The token type is not specified."
                                          },
                                          {
                                            "value": "Any",
                                            "description": "The token type can be anything."
                                          },
                                          {
                                            "value": "String",
                                            "description": "The token type is string."
                                          },
                                          {
                                            "value": "Object",
                                            "description": "The token type is object."
                                          },
                                          {
                                            "value": "Array",
                                            "description": "The token type is array."
                                          },
                                          {
                                            "value": "Integer",
                                            "description": "The token type is integer."
                                          },
                                          {
                                            "value": "Number",
                                            "description": "The token type is number."
                                          },
                                          {
                                            "value": "Boolean",
                                            "description": "The token type is boolean."
                                          }
                                        ]
                                      },
                                      "description": "The type of the token that the alias path is referring to."
                                    },
                                    "attributes": {
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "None",
                                        "Modifiable"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPathAttributes",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "None",
                                            "description": "The token that the alias path is referring to has no attributes."
                                          },
                                          {
                                            "value": "Modifiable",
                                            "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                          }
                                        ]
                                      },
                                      "description": "The attributes of the token that the alias path is referring to."
                                    }
                                  }
                                }
                              },
                              "description": "The alias type. "
                            },
                            "description": "The aliases that are supported by this resource type."
                          },
                          "apiVersions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The API version."
                          },
                          "defaultApiVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The default API version."
                          },
                          "zoneMappings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "location": {
                                  "type": "string",
                                  "description": "The location of the zone mapping."
                                },
                                "zones": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "apiProfiles": {
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "properties": {
                                "profileVersion": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The profile version."
                                },
                                "apiVersion": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The API version."
                                }
                              }
                            },
                            "description": "The API profiles for the resource provider."
                          },
                          "capabilities": {
                            "type": "string",
                            "description": "The additional capabilities offered by this resource type."
                          },
                          "properties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string",
                              "description": "The additional properties. "
                            },
                            "description": "The properties."
                          }
                        },
                        "description": "Resource type managed by the resource provider."
                      },
                      "description": "The collection of provider resource types."
                    },
                    "providerAuthorizationConsentState": {
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Required",
                        "NotRequired",
                        "Consented"
                      ],
                      "description": "The provider authorization consent state.",
                      "x-ms-enum": {
                        "name": "ProviderAuthorizationConsentState",
                        "modelAsString": true
                      }
                    }
                  },
                  "description": "Resource provider information."
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers": {
      "get": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_List",
        "description": "Gets all resource providers for a subscription.",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of resource providers.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The provider ID."
                          },
                          "namespace": {
                            "type": "string",
                            "description": "The namespace of the resource provider."
                          },
                          "registrationState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The registration state of the resource provider."
                          },
                          "registrationPolicy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The registration policy of the resource provider."
                          },
                          "resourceTypes": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "properties": {
                                "resourceType": {
                                  "type": "string",
                                  "description": "The resource type."
                                },
                                "locations": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The collection of locations where this resource type can be created."
                                },
                                "locationMappings": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "location": {
                                        "type": "string",
                                        "description": "The azure location."
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The extended location type."
                                      },
                                      "extendedLocations": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "The extended locations for the azure location."
                                      }
                                    },
                                    "description": "The provider extended location. "
                                  },
                                  "description": "The location mappings that are supported by this resource type."
                                },
                                "aliases": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The alias name."
                                      },
                                      "paths": {
                                        "type": "array",
                                        "items": {
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "The path of an alias."
                                            },
                                            "apiVersions": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "The API versions."
                                            },
                                            "pattern": {
                                              "description": "The pattern for an alias path.",
                                              "properties": {
                                                "phrase": {
                                                  "type": "string",
                                                  "description": "The alias pattern phrase."
                                                },
                                                "variable": {
                                                  "type": "string",
                                                  "description": "The alias pattern variable."
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "NotSpecified",
                                                    "Extract"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "AliasPatternType",
                                                    "modelAsString": false,
                                                    "values": [
                                                      {
                                                        "value": "NotSpecified",
                                                        "description": "NotSpecified is not allowed."
                                                      },
                                                      {
                                                        "value": "Extract",
                                                        "description": "Extract is the only allowed value."
                                                      }
                                                    ]
                                                  },
                                                  "description": "The type of alias pattern"
                                                }
                                              }
                                            },
                                            "metadata": {
                                              "readOnly": true,
                                              "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "readOnly": true,
                                                  "enum": [
                                                    "NotSpecified",
                                                    "Any",
                                                    "String",
                                                    "Object",
                                                    "Array",
                                                    "Integer",
                                                    "Number",
                                                    "Boolean"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "AliasPathTokenType",
                                                    "modelAsString": true,
                                                    "values": [
                                                      {
                                                        "value": "NotSpecified",
                                                        "description": "The token type is not specified."
                                                      },
                                                      {
                                                        "value": "Any",
                                                        "description": "The token type can be anything."
                                                      },
                                                      {
                                                        "value": "String",
                                                        "description": "The token type is string."
                                                      },
                                                      {
                                                        "value": "Object",
                                                        "description": "The token type is object."
                                                      },
                                                      {
                                                        "value": "Array",
                                                        "description": "The token type is array."
                                                      },
                                                      {
                                                        "value": "Integer",
                                                        "description": "The token type is integer."
                                                      },
                                                      {
                                                        "value": "Number",
                                                        "description": "The token type is number."
                                                      },
                                                      {
                                                        "value": "Boolean",
                                                        "description": "The token type is boolean."
                                                      }
                                                    ]
                                                  },
                                                  "description": "The type of the token that the alias path is referring to."
                                                },
                                                "attributes": {
                                                  "type": "string",
                                                  "readOnly": true,
                                                  "enum": [
                                                    "None",
                                                    "Modifiable"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "AliasPathAttributes",
                                                    "modelAsString": true,
                                                    "values": [
                                                      {
                                                        "value": "None",
                                                        "description": "The token that the alias path is referring to has no attributes."
                                                      },
                                                      {
                                                        "value": "Modifiable",
                                                        "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                                      }
                                                    ]
                                                  },
                                                  "description": "The attributes of the token that the alias path is referring to."
                                                }
                                              }
                                            }
                                          },
                                          "description": "The type of the paths for alias."
                                        },
                                        "description": "The paths for an alias."
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the alias.",
                                        "enum": [
                                          "NotSpecified",
                                          "PlainText",
                                          "Mask"
                                        ],
                                        "x-ms-enum": {
                                          "name": "AliasType",
                                          "modelAsString": false,
                                          "values": [
                                            {
                                              "value": "NotSpecified",
                                              "description": "Alias type is unknown (same as not providing alias type)."
                                            },
                                            {
                                              "value": "PlainText",
                                              "description": "Alias value is not secret."
                                            },
                                            {
                                              "value": "Mask",
                                              "description": "Alias value is secret."
                                            }
                                          ]
                                        }
                                      },
                                      "defaultPath": {
                                        "type": "string",
                                        "description": "The default path for an alias."
                                      },
                                      "defaultPattern": {
                                        "description": "The default pattern for an alias.",
                                        "properties": {
                                          "phrase": {
                                            "type": "string",
                                            "description": "The alias pattern phrase."
                                          },
                                          "variable": {
                                            "type": "string",
                                            "description": "The alias pattern variable."
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "NotSpecified",
                                              "Extract"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPatternType",
                                              "modelAsString": false,
                                              "values": [
                                                {
                                                  "value": "NotSpecified",
                                                  "description": "NotSpecified is not allowed."
                                                },
                                                {
                                                  "value": "Extract",
                                                  "description": "Extract is the only allowed value."
                                                }
                                              ]
                                            },
                                            "description": "The type of alias pattern"
                                          }
                                        }
                                      },
                                      "defaultMetadata": {
                                        "readOnly": true,
                                        "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "readOnly": true,
                                            "enum": [
                                              "NotSpecified",
                                              "Any",
                                              "String",
                                              "Object",
                                              "Array",
                                              "Integer",
                                              "Number",
                                              "Boolean"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPathTokenType",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "NotSpecified",
                                                  "description": "The token type is not specified."
                                                },
                                                {
                                                  "value": "Any",
                                                  "description": "The token type can be anything."
                                                },
                                                {
                                                  "value": "String",
                                                  "description": "The token type is string."
                                                },
                                                {
                                                  "value": "Object",
                                                  "description": "The token type is object."
                                                },
                                                {
                                                  "value": "Array",
                                                  "description": "The token type is array."
                                                },
                                                {
                                                  "value": "Integer",
                                                  "description": "The token type is integer."
                                                },
                                                {
                                                  "value": "Number",
                                                  "description": "The token type is number."
                                                },
                                                {
                                                  "value": "Boolean",
                                                  "description": "The token type is boolean."
                                                }
                                              ]
                                            },
                                            "description": "The type of the token that the alias path is referring to."
                                          },
                                          "attributes": {
                                            "type": "string",
                                            "readOnly": true,
                                            "enum": [
                                              "None",
                                              "Modifiable"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPathAttributes",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "None",
                                                  "description": "The token that the alias path is referring to has no attributes."
                                                },
                                                {
                                                  "value": "Modifiable",
                                                  "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                                }
                                              ]
                                            },
                                            "description": "The attributes of the token that the alias path is referring to."
                                          }
                                        }
                                      }
                                    },
                                    "description": "The alias type. "
                                  },
                                  "description": "The aliases that are supported by this resource type."
                                },
                                "apiVersions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The API version."
                                },
                                "defaultApiVersion": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The default API version."
                                },
                                "zoneMappings": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "location": {
                                        "type": "string",
                                        "description": "The location of the zone mapping."
                                      },
                                      "zones": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "apiProfiles": {
                                  "type": "array",
                                  "readOnly": true,
                                  "items": {
                                    "properties": {
                                      "profileVersion": {
                                        "type": "string",
                                        "readOnly": true,
                                        "description": "The profile version."
                                      },
                                      "apiVersion": {
                                        "type": "string",
                                        "readOnly": true,
                                        "description": "The API version."
                                      }
                                    }
                                  },
                                  "description": "The API profiles for the resource provider."
                                },
                                "capabilities": {
                                  "type": "string",
                                  "description": "The additional capabilities offered by this resource type."
                                },
                                "properties": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string",
                                    "description": "The additional properties. "
                                  },
                                  "description": "The properties."
                                }
                              },
                              "description": "Resource type managed by the resource provider."
                            },
                            "description": "The collection of provider resource types."
                          },
                          "providerAuthorizationConsentState": {
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Required",
                              "NotRequired",
                              "Consented"
                            ],
                            "description": "The provider authorization consent state.",
                            "x-ms-enum": {
                              "name": "ProviderAuthorizationConsentState",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "Resource provider information."
                      },
                      "description": "An array of resource providers."
                    },
                    "nextLink": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The URL to use for getting the next set of results."
                    }
                  },
                  "description": "List of resource providers."
                },
                "examples": {
                  "Get providers.": {
                    "$ref": "#/components/examples/Get_providers."
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers": {
      "get": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_ListAtTenantScope",
        "description": "Gets all resource providers for the tenant.",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of resource providers.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The provider ID."
                          },
                          "namespace": {
                            "type": "string",
                            "description": "The namespace of the resource provider."
                          },
                          "registrationState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The registration state of the resource provider."
                          },
                          "registrationPolicy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The registration policy of the resource provider."
                          },
                          "resourceTypes": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "properties": {
                                "resourceType": {
                                  "type": "string",
                                  "description": "The resource type."
                                },
                                "locations": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The collection of locations where this resource type can be created."
                                },
                                "locationMappings": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "location": {
                                        "type": "string",
                                        "description": "The azure location."
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The extended location type."
                                      },
                                      "extendedLocations": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "The extended locations for the azure location."
                                      }
                                    },
                                    "description": "The provider extended location. "
                                  },
                                  "description": "The location mappings that are supported by this resource type."
                                },
                                "aliases": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The alias name."
                                      },
                                      "paths": {
                                        "type": "array",
                                        "items": {
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "The path of an alias."
                                            },
                                            "apiVersions": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "The API versions."
                                            },
                                            "pattern": {
                                              "description": "The pattern for an alias path.",
                                              "properties": {
                                                "phrase": {
                                                  "type": "string",
                                                  "description": "The alias pattern phrase."
                                                },
                                                "variable": {
                                                  "type": "string",
                                                  "description": "The alias pattern variable."
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "NotSpecified",
                                                    "Extract"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "AliasPatternType",
                                                    "modelAsString": false,
                                                    "values": [
                                                      {
                                                        "value": "NotSpecified",
                                                        "description": "NotSpecified is not allowed."
                                                      },
                                                      {
                                                        "value": "Extract",
                                                        "description": "Extract is the only allowed value."
                                                      }
                                                    ]
                                                  },
                                                  "description": "The type of alias pattern"
                                                }
                                              }
                                            },
                                            "metadata": {
                                              "readOnly": true,
                                              "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "readOnly": true,
                                                  "enum": [
                                                    "NotSpecified",
                                                    "Any",
                                                    "String",
                                                    "Object",
                                                    "Array",
                                                    "Integer",
                                                    "Number",
                                                    "Boolean"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "AliasPathTokenType",
                                                    "modelAsString": true,
                                                    "values": [
                                                      {
                                                        "value": "NotSpecified",
                                                        "description": "The token type is not specified."
                                                      },
                                                      {
                                                        "value": "Any",
                                                        "description": "The token type can be anything."
                                                      },
                                                      {
                                                        "value": "String",
                                                        "description": "The token type is string."
                                                      },
                                                      {
                                                        "value": "Object",
                                                        "description": "The token type is object."
                                                      },
                                                      {
                                                        "value": "Array",
                                                        "description": "The token type is array."
                                                      },
                                                      {
                                                        "value": "Integer",
                                                        "description": "The token type is integer."
                                                      },
                                                      {
                                                        "value": "Number",
                                                        "description": "The token type is number."
                                                      },
                                                      {
                                                        "value": "Boolean",
                                                        "description": "The token type is boolean."
                                                      }
                                                    ]
                                                  },
                                                  "description": "The type of the token that the alias path is referring to."
                                                },
                                                "attributes": {
                                                  "type": "string",
                                                  "readOnly": true,
                                                  "enum": [
                                                    "None",
                                                    "Modifiable"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "AliasPathAttributes",
                                                    "modelAsString": true,
                                                    "values": [
                                                      {
                                                        "value": "None",
                                                        "description": "The token that the alias path is referring to has no attributes."
                                                      },
                                                      {
                                                        "value": "Modifiable",
                                                        "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                                      }
                                                    ]
                                                  },
                                                  "description": "The attributes of the token that the alias path is referring to."
                                                }
                                              }
                                            }
                                          },
                                          "description": "The type of the paths for alias."
                                        },
                                        "description": "The paths for an alias."
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the alias.",
                                        "enum": [
                                          "NotSpecified",
                                          "PlainText",
                                          "Mask"
                                        ],
                                        "x-ms-enum": {
                                          "name": "AliasType",
                                          "modelAsString": false,
                                          "values": [
                                            {
                                              "value": "NotSpecified",
                                              "description": "Alias type is unknown (same as not providing alias type)."
                                            },
                                            {
                                              "value": "PlainText",
                                              "description": "Alias value is not secret."
                                            },
                                            {
                                              "value": "Mask",
                                              "description": "Alias value is secret."
                                            }
                                          ]
                                        }
                                      },
                                      "defaultPath": {
                                        "type": "string",
                                        "description": "The default path for an alias."
                                      },
                                      "defaultPattern": {
                                        "description": "The default pattern for an alias.",
                                        "properties": {
                                          "phrase": {
                                            "type": "string",
                                            "description": "The alias pattern phrase."
                                          },
                                          "variable": {
                                            "type": "string",
                                            "description": "The alias pattern variable."
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "NotSpecified",
                                              "Extract"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPatternType",
                                              "modelAsString": false,
                                              "values": [
                                                {
                                                  "value": "NotSpecified",
                                                  "description": "NotSpecified is not allowed."
                                                },
                                                {
                                                  "value": "Extract",
                                                  "description": "Extract is the only allowed value."
                                                }
                                              ]
                                            },
                                            "description": "The type of alias pattern"
                                          }
                                        }
                                      },
                                      "defaultMetadata": {
                                        "readOnly": true,
                                        "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "readOnly": true,
                                            "enum": [
                                              "NotSpecified",
                                              "Any",
                                              "String",
                                              "Object",
                                              "Array",
                                              "Integer",
                                              "Number",
                                              "Boolean"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPathTokenType",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "NotSpecified",
                                                  "description": "The token type is not specified."
                                                },
                                                {
                                                  "value": "Any",
                                                  "description": "The token type can be anything."
                                                },
                                                {
                                                  "value": "String",
                                                  "description": "The token type is string."
                                                },
                                                {
                                                  "value": "Object",
                                                  "description": "The token type is object."
                                                },
                                                {
                                                  "value": "Array",
                                                  "description": "The token type is array."
                                                },
                                                {
                                                  "value": "Integer",
                                                  "description": "The token type is integer."
                                                },
                                                {
                                                  "value": "Number",
                                                  "description": "The token type is number."
                                                },
                                                {
                                                  "value": "Boolean",
                                                  "description": "The token type is boolean."
                                                }
                                              ]
                                            },
                                            "description": "The type of the token that the alias path is referring to."
                                          },
                                          "attributes": {
                                            "type": "string",
                                            "readOnly": true,
                                            "enum": [
                                              "None",
                                              "Modifiable"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPathAttributes",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "None",
                                                  "description": "The token that the alias path is referring to has no attributes."
                                                },
                                                {
                                                  "value": "Modifiable",
                                                  "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                                }
                                              ]
                                            },
                                            "description": "The attributes of the token that the alias path is referring to."
                                          }
                                        }
                                      }
                                    },
                                    "description": "The alias type. "
                                  },
                                  "description": "The aliases that are supported by this resource type."
                                },
                                "apiVersions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The API version."
                                },
                                "defaultApiVersion": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The default API version."
                                },
                                "zoneMappings": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "location": {
                                        "type": "string",
                                        "description": "The location of the zone mapping."
                                      },
                                      "zones": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "apiProfiles": {
                                  "type": "array",
                                  "readOnly": true,
                                  "items": {
                                    "properties": {
                                      "profileVersion": {
                                        "type": "string",
                                        "readOnly": true,
                                        "description": "The profile version."
                                      },
                                      "apiVersion": {
                                        "type": "string",
                                        "readOnly": true,
                                        "description": "The API version."
                                      }
                                    }
                                  },
                                  "description": "The API profiles for the resource provider."
                                },
                                "capabilities": {
                                  "type": "string",
                                  "description": "The additional capabilities offered by this resource type."
                                },
                                "properties": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string",
                                    "description": "The additional properties. "
                                  },
                                  "description": "The properties."
                                }
                              },
                              "description": "Resource type managed by the resource provider."
                            },
                            "description": "The collection of provider resource types."
                          },
                          "providerAuthorizationConsentState": {
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Required",
                              "NotRequired",
                              "Consented"
                            ],
                            "description": "The provider authorization consent state.",
                            "x-ms-enum": {
                              "name": "ProviderAuthorizationConsentState",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "Resource provider information."
                      },
                      "description": "An array of resource providers."
                    },
                    "nextLink": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The URL to use for getting the next set of results."
                    }
                  },
                  "description": "List of resource providers."
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}": {
      "get": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_Get",
        "description": "Gets the specified resource provider.",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "description": "The namespace of the resource provider.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Get provider.": {
                "value": "Microsoft.TestRP1"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource provider.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provider ID."
                    },
                    "namespace": {
                      "type": "string",
                      "description": "The namespace of the resource provider."
                    },
                    "registrationState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The registration state of the resource provider."
                    },
                    "registrationPolicy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The registration policy of the resource provider."
                    },
                    "resourceTypes": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "properties": {
                          "resourceType": {
                            "type": "string",
                            "description": "The resource type."
                          },
                          "locations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The collection of locations where this resource type can be created."
                          },
                          "locationMappings": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "location": {
                                  "type": "string",
                                  "description": "The azure location."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The extended location type."
                                },
                                "extendedLocations": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The extended locations for the azure location."
                                }
                              },
                              "description": "The provider extended location. "
                            },
                            "description": "The location mappings that are supported by this resource type."
                          },
                          "aliases": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The alias name."
                                },
                                "paths": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path of an alias."
                                      },
                                      "apiVersions": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "The API versions."
                                      },
                                      "pattern": {
                                        "description": "The pattern for an alias path.",
                                        "properties": {
                                          "phrase": {
                                            "type": "string",
                                            "description": "The alias pattern phrase."
                                          },
                                          "variable": {
                                            "type": "string",
                                            "description": "The alias pattern variable."
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "NotSpecified",
                                              "Extract"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPatternType",
                                              "modelAsString": false,
                                              "values": [
                                                {
                                                  "value": "NotSpecified",
                                                  "description": "NotSpecified is not allowed."
                                                },
                                                {
                                                  "value": "Extract",
                                                  "description": "Extract is the only allowed value."
                                                }
                                              ]
                                            },
                                            "description": "The type of alias pattern"
                                          }
                                        }
                                      },
                                      "metadata": {
                                        "readOnly": true,
                                        "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "readOnly": true,
                                            "enum": [
                                              "NotSpecified",
                                              "Any",
                                              "String",
                                              "Object",
                                              "Array",
                                              "Integer",
                                              "Number",
                                              "Boolean"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPathTokenType",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "NotSpecified",
                                                  "description": "The token type is not specified."
                                                },
                                                {
                                                  "value": "Any",
                                                  "description": "The token type can be anything."
                                                },
                                                {
                                                  "value": "String",
                                                  "description": "The token type is string."
                                                },
                                                {
                                                  "value": "Object",
                                                  "description": "The token type is object."
                                                },
                                                {
                                                  "value": "Array",
                                                  "description": "The token type is array."
                                                },
                                                {
                                                  "value": "Integer",
                                                  "description": "The token type is integer."
                                                },
                                                {
                                                  "value": "Number",
                                                  "description": "The token type is number."
                                                },
                                                {
                                                  "value": "Boolean",
                                                  "description": "The token type is boolean."
                                                }
                                              ]
                                            },
                                            "description": "The type of the token that the alias path is referring to."
                                          },
                                          "attributes": {
                                            "type": "string",
                                            "readOnly": true,
                                            "enum": [
                                              "None",
                                              "Modifiable"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPathAttributes",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "None",
                                                  "description": "The token that the alias path is referring to has no attributes."
                                                },
                                                {
                                                  "value": "Modifiable",
                                                  "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                                }
                                              ]
                                            },
                                            "description": "The attributes of the token that the alias path is referring to."
                                          }
                                        }
                                      }
                                    },
                                    "description": "The type of the paths for alias."
                                  },
                                  "description": "The paths for an alias."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the alias.",
                                  "enum": [
                                    "NotSpecified",
                                    "PlainText",
                                    "Mask"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasType",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "value": "NotSpecified",
                                        "description": "Alias type is unknown (same as not providing alias type)."
                                      },
                                      {
                                        "value": "PlainText",
                                        "description": "Alias value is not secret."
                                      },
                                      {
                                        "value": "Mask",
                                        "description": "Alias value is secret."
                                      }
                                    ]
                                  }
                                },
                                "defaultPath": {
                                  "type": "string",
                                  "description": "The default path for an alias."
                                },
                                "defaultPattern": {
                                  "description": "The default pattern for an alias.",
                                  "properties": {
                                    "phrase": {
                                      "type": "string",
                                      "description": "The alias pattern phrase."
                                    },
                                    "variable": {
                                      "type": "string",
                                      "description": "The alias pattern variable."
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "NotSpecified",
                                        "Extract"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPatternType",
                                        "modelAsString": false,
                                        "values": [
                                          {
                                            "value": "NotSpecified",
                                            "description": "NotSpecified is not allowed."
                                          },
                                          {
                                            "value": "Extract",
                                            "description": "Extract is the only allowed value."
                                          }
                                        ]
                                      },
                                      "description": "The type of alias pattern"
                                    }
                                  }
                                },
                                "defaultMetadata": {
                                  "readOnly": true,
                                  "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "NotSpecified",
                                        "Any",
                                        "String",
                                        "Object",
                                        "Array",
                                        "Integer",
                                        "Number",
                                        "Boolean"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPathTokenType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "NotSpecified",
                                            "description": "The token type is not specified."
                                          },
                                          {
                                            "value": "Any",
                                            "description": "The token type can be anything."
                                          },
                                          {
                                            "value": "String",
                                            "description": "The token type is string."
                                          },
                                          {
                                            "value": "Object",
                                            "description": "The token type is object."
                                          },
                                          {
                                            "value": "Array",
                                            "description": "The token type is array."
                                          },
                                          {
                                            "value": "Integer",
                                            "description": "The token type is integer."
                                          },
                                          {
                                            "value": "Number",
                                            "description": "The token type is number."
                                          },
                                          {
                                            "value": "Boolean",
                                            "description": "The token type is boolean."
                                          }
                                        ]
                                      },
                                      "description": "The type of the token that the alias path is referring to."
                                    },
                                    "attributes": {
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "None",
                                        "Modifiable"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPathAttributes",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "None",
                                            "description": "The token that the alias path is referring to has no attributes."
                                          },
                                          {
                                            "value": "Modifiable",
                                            "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                          }
                                        ]
                                      },
                                      "description": "The attributes of the token that the alias path is referring to."
                                    }
                                  }
                                }
                              },
                              "description": "The alias type. "
                            },
                            "description": "The aliases that are supported by this resource type."
                          },
                          "apiVersions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The API version."
                          },
                          "defaultApiVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The default API version."
                          },
                          "zoneMappings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "location": {
                                  "type": "string",
                                  "description": "The location of the zone mapping."
                                },
                                "zones": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "apiProfiles": {
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "properties": {
                                "profileVersion": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The profile version."
                                },
                                "apiVersion": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The API version."
                                }
                              }
                            },
                            "description": "The API profiles for the resource provider."
                          },
                          "capabilities": {
                            "type": "string",
                            "description": "The additional capabilities offered by this resource type."
                          },
                          "properties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string",
                              "description": "The additional properties. "
                            },
                            "description": "The properties."
                          }
                        },
                        "description": "Resource type managed by the resource provider."
                      },
                      "description": "The collection of provider resource types."
                    },
                    "providerAuthorizationConsentState": {
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Required",
                        "NotRequired",
                        "Consented"
                      ],
                      "description": "The provider authorization consent state.",
                      "x-ms-enum": {
                        "name": "ProviderAuthorizationConsentState",
                        "modelAsString": true
                      }
                    }
                  },
                  "description": "Resource provider information."
                },
                "examples": {
                  "Get provider.": {
                    "$ref": "#/components/examples/Get_provider."
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/resourceTypes": {
      "get": {
        "tags": [
          "Providers"
        ],
        "operationId": "ProviderResourceTypes_List",
        "description": "List the resource types for a specified resource provider.",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "description": "The namespace of the resource provider.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Get provider resource types.": {
                "value": "Microsoft.TestRP"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns resource types information for the resource provider.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "resourceType": {
                            "type": "string",
                            "description": "The resource type."
                          },
                          "locations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The collection of locations where this resource type can be created."
                          },
                          "locationMappings": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "location": {
                                  "type": "string",
                                  "description": "The azure location."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The extended location type."
                                },
                                "extendedLocations": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The extended locations for the azure location."
                                }
                              },
                              "description": "The provider extended location. "
                            },
                            "description": "The location mappings that are supported by this resource type."
                          },
                          "aliases": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The alias name."
                                },
                                "paths": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path of an alias."
                                      },
                                      "apiVersions": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "The API versions."
                                      },
                                      "pattern": {
                                        "description": "The pattern for an alias path.",
                                        "properties": {
                                          "phrase": {
                                            "type": "string",
                                            "description": "The alias pattern phrase."
                                          },
                                          "variable": {
                                            "type": "string",
                                            "description": "The alias pattern variable."
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "NotSpecified",
                                              "Extract"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPatternType",
                                              "modelAsString": false,
                                              "values": [
                                                {
                                                  "value": "NotSpecified",
                                                  "description": "NotSpecified is not allowed."
                                                },
                                                {
                                                  "value": "Extract",
                                                  "description": "Extract is the only allowed value."
                                                }
                                              ]
                                            },
                                            "description": "The type of alias pattern"
                                          }
                                        }
                                      },
                                      "metadata": {
                                        "readOnly": true,
                                        "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "readOnly": true,
                                            "enum": [
                                              "NotSpecified",
                                              "Any",
                                              "String",
                                              "Object",
                                              "Array",
                                              "Integer",
                                              "Number",
                                              "Boolean"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPathTokenType",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "NotSpecified",
                                                  "description": "The token type is not specified."
                                                },
                                                {
                                                  "value": "Any",
                                                  "description": "The token type can be anything."
                                                },
                                                {
                                                  "value": "String",
                                                  "description": "The token type is string."
                                                },
                                                {
                                                  "value": "Object",
                                                  "description": "The token type is object."
                                                },
                                                {
                                                  "value": "Array",
                                                  "description": "The token type is array."
                                                },
                                                {
                                                  "value": "Integer",
                                                  "description": "The token type is integer."
                                                },
                                                {
                                                  "value": "Number",
                                                  "description": "The token type is number."
                                                },
                                                {
                                                  "value": "Boolean",
                                                  "description": "The token type is boolean."
                                                }
                                              ]
                                            },
                                            "description": "The type of the token that the alias path is referring to."
                                          },
                                          "attributes": {
                                            "type": "string",
                                            "readOnly": true,
                                            "enum": [
                                              "None",
                                              "Modifiable"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPathAttributes",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "None",
                                                  "description": "The token that the alias path is referring to has no attributes."
                                                },
                                                {
                                                  "value": "Modifiable",
                                                  "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                                }
                                              ]
                                            },
                                            "description": "The attributes of the token that the alias path is referring to."
                                          }
                                        }
                                      }
                                    },
                                    "description": "The type of the paths for alias."
                                  },
                                  "description": "The paths for an alias."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the alias.",
                                  "enum": [
                                    "NotSpecified",
                                    "PlainText",
                                    "Mask"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasType",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "value": "NotSpecified",
                                        "description": "Alias type is unknown (same as not providing alias type)."
                                      },
                                      {
                                        "value": "PlainText",
                                        "description": "Alias value is not secret."
                                      },
                                      {
                                        "value": "Mask",
                                        "description": "Alias value is secret."
                                      }
                                    ]
                                  }
                                },
                                "defaultPath": {
                                  "type": "string",
                                  "description": "The default path for an alias."
                                },
                                "defaultPattern": {
                                  "description": "The default pattern for an alias.",
                                  "properties": {
                                    "phrase": {
                                      "type": "string",
                                      "description": "The alias pattern phrase."
                                    },
                                    "variable": {
                                      "type": "string",
                                      "description": "The alias pattern variable."
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "NotSpecified",
                                        "Extract"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPatternType",
                                        "modelAsString": false,
                                        "values": [
                                          {
                                            "value": "NotSpecified",
                                            "description": "NotSpecified is not allowed."
                                          },
                                          {
                                            "value": "Extract",
                                            "description": "Extract is the only allowed value."
                                          }
                                        ]
                                      },
                                      "description": "The type of alias pattern"
                                    }
                                  }
                                },
                                "defaultMetadata": {
                                  "readOnly": true,
                                  "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "NotSpecified",
                                        "Any",
                                        "String",
                                        "Object",
                                        "Array",
                                        "Integer",
                                        "Number",
                                        "Boolean"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPathTokenType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "NotSpecified",
                                            "description": "The token type is not specified."
                                          },
                                          {
                                            "value": "Any",
                                            "description": "The token type can be anything."
                                          },
                                          {
                                            "value": "String",
                                            "description": "The token type is string."
                                          },
                                          {
                                            "value": "Object",
                                            "description": "The token type is object."
                                          },
                                          {
                                            "value": "Array",
                                            "description": "The token type is array."
                                          },
                                          {
                                            "value": "Integer",
                                            "description": "The token type is integer."
                                          },
                                          {
                                            "value": "Number",
                                            "description": "The token type is number."
                                          },
                                          {
                                            "value": "Boolean",
                                            "description": "The token type is boolean."
                                          }
                                        ]
                                      },
                                      "description": "The type of the token that the alias path is referring to."
                                    },
                                    "attributes": {
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "None",
                                        "Modifiable"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPathAttributes",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "None",
                                            "description": "The token that the alias path is referring to has no attributes."
                                          },
                                          {
                                            "value": "Modifiable",
                                            "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                          }
                                        ]
                                      },
                                      "description": "The attributes of the token that the alias path is referring to."
                                    }
                                  }
                                }
                              },
                              "description": "The alias type. "
                            },
                            "description": "The aliases that are supported by this resource type."
                          },
                          "apiVersions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The API version."
                          },
                          "defaultApiVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The default API version."
                          },
                          "zoneMappings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "location": {
                                  "type": "string",
                                  "description": "The location of the zone mapping."
                                },
                                "zones": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "apiProfiles": {
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "properties": {
                                "profileVersion": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The profile version."
                                },
                                "apiVersion": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The API version."
                                }
                              }
                            },
                            "description": "The API profiles for the resource provider."
                          },
                          "capabilities": {
                            "type": "string",
                            "description": "The additional capabilities offered by this resource type."
                          },
                          "properties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string",
                              "description": "The additional properties. "
                            },
                            "description": "The properties."
                          }
                        },
                        "description": "Resource type managed by the resource provider."
                      },
                      "description": "An array of resource types."
                    },
                    "nextLink": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The URL to use for getting the next set of results."
                    }
                  },
                  "description": "List of resource types of a resource provider."
                },
                "examples": {
                  "Get provider resource types.": {
                    "$ref": "#/components/examples/Get_provider_resource_types."
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/{resourceProviderNamespace}": {
      "get": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_GetAtTenantScope",
        "description": "Gets the specified resource provider at the tenant level.",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Get a resource provider at tenant scope": {
                "value": "resourceTypes/aliases"
              }
            }
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "description": "The namespace of the resource provider.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Get a resource provider at tenant scope": {
                "value": "Microsoft.Storage"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource provider.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provider ID."
                    },
                    "namespace": {
                      "type": "string",
                      "description": "The namespace of the resource provider."
                    },
                    "registrationState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The registration state of the resource provider."
                    },
                    "registrationPolicy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The registration policy of the resource provider."
                    },
                    "resourceTypes": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "properties": {
                          "resourceType": {
                            "type": "string",
                            "description": "The resource type."
                          },
                          "locations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The collection of locations where this resource type can be created."
                          },
                          "locationMappings": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "location": {
                                  "type": "string",
                                  "description": "The azure location."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The extended location type."
                                },
                                "extendedLocations": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The extended locations for the azure location."
                                }
                              },
                              "description": "The provider extended location. "
                            },
                            "description": "The location mappings that are supported by this resource type."
                          },
                          "aliases": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The alias name."
                                },
                                "paths": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path of an alias."
                                      },
                                      "apiVersions": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "The API versions."
                                      },
                                      "pattern": {
                                        "description": "The pattern for an alias path.",
                                        "properties": {
                                          "phrase": {
                                            "type": "string",
                                            "description": "The alias pattern phrase."
                                          },
                                          "variable": {
                                            "type": "string",
                                            "description": "The alias pattern variable."
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "NotSpecified",
                                              "Extract"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPatternType",
                                              "modelAsString": false,
                                              "values": [
                                                {
                                                  "value": "NotSpecified",
                                                  "description": "NotSpecified is not allowed."
                                                },
                                                {
                                                  "value": "Extract",
                                                  "description": "Extract is the only allowed value."
                                                }
                                              ]
                                            },
                                            "description": "The type of alias pattern"
                                          }
                                        }
                                      },
                                      "metadata": {
                                        "readOnly": true,
                                        "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "readOnly": true,
                                            "enum": [
                                              "NotSpecified",
                                              "Any",
                                              "String",
                                              "Object",
                                              "Array",
                                              "Integer",
                                              "Number",
                                              "Boolean"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPathTokenType",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "NotSpecified",
                                                  "description": "The token type is not specified."
                                                },
                                                {
                                                  "value": "Any",
                                                  "description": "The token type can be anything."
                                                },
                                                {
                                                  "value": "String",
                                                  "description": "The token type is string."
                                                },
                                                {
                                                  "value": "Object",
                                                  "description": "The token type is object."
                                                },
                                                {
                                                  "value": "Array",
                                                  "description": "The token type is array."
                                                },
                                                {
                                                  "value": "Integer",
                                                  "description": "The token type is integer."
                                                },
                                                {
                                                  "value": "Number",
                                                  "description": "The token type is number."
                                                },
                                                {
                                                  "value": "Boolean",
                                                  "description": "The token type is boolean."
                                                }
                                              ]
                                            },
                                            "description": "The type of the token that the alias path is referring to."
                                          },
                                          "attributes": {
                                            "type": "string",
                                            "readOnly": true,
                                            "enum": [
                                              "None",
                                              "Modifiable"
                                            ],
                                            "x-ms-enum": {
                                              "name": "AliasPathAttributes",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "None",
                                                  "description": "The token that the alias path is referring to has no attributes."
                                                },
                                                {
                                                  "value": "Modifiable",
                                                  "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                                }
                                              ]
                                            },
                                            "description": "The attributes of the token that the alias path is referring to."
                                          }
                                        }
                                      }
                                    },
                                    "description": "The type of the paths for alias."
                                  },
                                  "description": "The paths for an alias."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the alias.",
                                  "enum": [
                                    "NotSpecified",
                                    "PlainText",
                                    "Mask"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasType",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "value": "NotSpecified",
                                        "description": "Alias type is unknown (same as not providing alias type)."
                                      },
                                      {
                                        "value": "PlainText",
                                        "description": "Alias value is not secret."
                                      },
                                      {
                                        "value": "Mask",
                                        "description": "Alias value is secret."
                                      }
                                    ]
                                  }
                                },
                                "defaultPath": {
                                  "type": "string",
                                  "description": "The default path for an alias."
                                },
                                "defaultPattern": {
                                  "description": "The default pattern for an alias.",
                                  "properties": {
                                    "phrase": {
                                      "type": "string",
                                      "description": "The alias pattern phrase."
                                    },
                                    "variable": {
                                      "type": "string",
                                      "description": "The alias pattern variable."
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "NotSpecified",
                                        "Extract"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPatternType",
                                        "modelAsString": false,
                                        "values": [
                                          {
                                            "value": "NotSpecified",
                                            "description": "NotSpecified is not allowed."
                                          },
                                          {
                                            "value": "Extract",
                                            "description": "Extract is the only allowed value."
                                          }
                                        ]
                                      },
                                      "description": "The type of alias pattern"
                                    }
                                  }
                                },
                                "defaultMetadata": {
                                  "readOnly": true,
                                  "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "NotSpecified",
                                        "Any",
                                        "String",
                                        "Object",
                                        "Array",
                                        "Integer",
                                        "Number",
                                        "Boolean"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPathTokenType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "NotSpecified",
                                            "description": "The token type is not specified."
                                          },
                                          {
                                            "value": "Any",
                                            "description": "The token type can be anything."
                                          },
                                          {
                                            "value": "String",
                                            "description": "The token type is string."
                                          },
                                          {
                                            "value": "Object",
                                            "description": "The token type is object."
                                          },
                                          {
                                            "value": "Array",
                                            "description": "The token type is array."
                                          },
                                          {
                                            "value": "Integer",
                                            "description": "The token type is integer."
                                          },
                                          {
                                            "value": "Number",
                                            "description": "The token type is number."
                                          },
                                          {
                                            "value": "Boolean",
                                            "description": "The token type is boolean."
                                          }
                                        ]
                                      },
                                      "description": "The type of the token that the alias path is referring to."
                                    },
                                    "attributes": {
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "None",
                                        "Modifiable"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPathAttributes",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "None",
                                            "description": "The token that the alias path is referring to has no attributes."
                                          },
                                          {
                                            "value": "Modifiable",
                                            "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                          }
                                        ]
                                      },
                                      "description": "The attributes of the token that the alias path is referring to."
                                    }
                                  }
                                }
                              },
                              "description": "The alias type. "
                            },
                            "description": "The aliases that are supported by this resource type."
                          },
                          "apiVersions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The API version."
                          },
                          "defaultApiVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The default API version."
                          },
                          "zoneMappings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "location": {
                                  "type": "string",
                                  "description": "The location of the zone mapping."
                                },
                                "zones": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "apiProfiles": {
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "properties": {
                                "profileVersion": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The profile version."
                                },
                                "apiVersion": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The API version."
                                }
                              }
                            },
                            "description": "The API profiles for the resource provider."
                          },
                          "capabilities": {
                            "type": "string",
                            "description": "The additional capabilities offered by this resource type."
                          },
                          "properties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string",
                              "description": "The additional properties. "
                            },
                            "description": "The properties."
                          }
                        },
                        "description": "Resource type managed by the resource provider."
                      },
                      "description": "The collection of provider resource types."
                    },
                    "providerAuthorizationConsentState": {
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Required",
                        "NotRequired",
                        "Consented"
                      ],
                      "description": "The provider authorization consent state.",
                      "x-ms-enum": {
                        "name": "ProviderAuthorizationConsentState",
                        "modelAsString": true
                      }
                    }
                  },
                  "description": "Resource provider information."
                },
                "examples": {
                  "Get a resource provider at tenant scope": {
                    "$ref": "#/components/examples/Get_a_resource_provider_at_tenant_scope"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources": {
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "Resources_ListByResourceGroup",
        "description": "Get all the resources for a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The resource group with the resources to get.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.<br><br>For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together by adding and/or operators.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value, the tags for each resource are not returned in the results.<br><br>You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "The number of results to return. If null is passed, returns all resources.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of resources",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "createdTime": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "The created time of the resource. This is only present if requested via the $expand query parameter."
                          },
                          "changedTime": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "The changed time of the resource. This is only present if requested via the $expand query parameter."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The provisioning state of the resource. This is only present if requested via the $expand query parameter."
                          }
                        },
                        "allOf": [
                          {
                            "properties": {
                              "plan": {
                                "description": "The plan of the resource.",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The plan ID."
                                  },
                                  "publisher": {
                                    "type": "string",
                                    "description": "The publisher ID."
                                  },
                                  "product": {
                                    "type": "string",
                                    "description": "The offer ID."
                                  },
                                  "promotionCode": {
                                    "type": "string",
                                    "description": "The promotion code."
                                  },
                                  "version": {
                                    "type": "string",
                                    "description": "The plan's version."
                                  }
                                }
                              },
                              "properties": {
                                "type": "object",
                                "description": "The resource properties."
                              },
                              "kind": {
                                "type": "string",
                                "description": "The kind of the resource.",
                                "pattern": "^[-\\w\\._,\\(\\)]+$"
                              },
                              "managedBy": {
                                "type": "string",
                                "description": "ID of the resource that manages this resource."
                              },
                              "sku": {
                                "description": "The SKU of the resource.",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The SKU name."
                                  },
                                  "tier": {
                                    "type": "string",
                                    "description": "The SKU tier."
                                  },
                                  "size": {
                                    "type": "string",
                                    "description": "The SKU size."
                                  },
                                  "family": {
                                    "type": "string",
                                    "description": "The SKU family."
                                  },
                                  "model": {
                                    "type": "string",
                                    "description": "The SKU model."
                                  },
                                  "capacity": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The SKU capacity."
                                  }
                                }
                              },
                              "identity": {
                                "description": "The identity of the resource.",
                                "properties": {
                                  "principalId": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The principal ID of resource identity."
                                  },
                                  "tenantId": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The tenant ID of resource."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The identity type.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned",
                                      "SystemAssigned, UserAssigned",
                                      "None"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ResourceIdentityType",
                                      "modelAsString": false
                                    }
                                  },
                                  "userAssignedIdentities": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                                      "properties": {
                                        "principalId": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The principal id of user assigned identity."
                                        },
                                        "clientId": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The client id of user assigned identity."
                                        }
                                      }
                                    },
                                    "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                                  }
                                }
                              }
                            },
                            "allOf": [
                              {
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "Resource ID"
                                  },
                                  "name": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "Resource name"
                                  },
                                  "type": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "Resource type"
                                  },
                                  "location": {
                                    "type": "string",
                                    "description": "Resource location"
                                  },
                                  "extendedLocation": {
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "description": "Resource extended location.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "EdgeZone"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ExtendedLocationType",
                                          "modelAsString": true
                                        },
                                        "description": "The extended location type."
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The extended location name."
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "Resource tags"
                                  }
                                },
                                "x-ms-azure-resource": true,
                                "description": "Specified resource."
                              }
                            ],
                            "description": "Resource information."
                          }
                        ],
                        "description": "Resource information."
                      },
                      "description": "An array of resources."
                    },
                    "nextLink": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The URL to use for getting the next set of results."
                    }
                  },
                  "description": "List of resource groups."
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/components/schemas/GenericResourceFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}": {
      "head": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_CheckExistence",
        "description": "Checks whether a resource group exists.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group to check. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_CreateOrUpdate",
        "description": "Creates or updates a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group to create or update. Can include alphanumeric, underscore, parentheses, hyphen, period (except at end), and Unicode characters that match the allowed characters.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create or update a resource group": {
                "value": "my-resource-group"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The ID of the resource group."
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource group."
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource group."
                  },
                  "properties": {
                    "description": "The resource group properties.",
                    "properties": {
                      "provisioningState": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The provisioning state. "
                      }
                    }
                  },
                  "location": {
                    "type": "string",
                    "description": "The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations."
                  },
                  "managedBy": {
                    "type": "string",
                    "description": "The ID of the resource that manages this resource group."
                  },
                  "tags": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "description": "The additional properties. "
                    },
                    "description": "The tags attached to the resource group."
                  }
                },
                "required": [
                  "location"
                ],
                "x-ms-azure-resource": true,
                "description": "Resource group information."
              }
            }
          },
          "description": "Parameters supplied to the create or update a resource group.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returns information about the new resource group.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The ID of the resource group."
                    },
                    "name": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The name of the resource group."
                    },
                    "type": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The type of the resource group."
                    },
                    "properties": {
                      "description": "The resource group properties.",
                      "properties": {
                        "provisioningState": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The provisioning state. "
                        }
                      }
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations."
                    },
                    "managedBy": {
                      "type": "string",
                      "description": "The ID of the resource that manages this resource group."
                    },
                    "tags": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "description": "The additional properties. "
                      },
                      "description": "The tags attached to the resource group."
                    }
                  },
                  "required": [
                    "location"
                  ],
                  "x-ms-azure-resource": true,
                  "description": "Resource group information."
                },
                "examples": {
                  "Create or update a resource group": {
                    "$ref": "#/components/examples/Create_or_update_a_resource_group"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created - Returns information about the new resource group.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The ID of the resource group."
                    },
                    "name": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The name of the resource group."
                    },
                    "type": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The type of the resource group."
                    },
                    "properties": {
                      "description": "The resource group properties.",
                      "properties": {
                        "provisioningState": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The provisioning state. "
                        }
                      }
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations."
                    },
                    "managedBy": {
                      "type": "string",
                      "description": "The ID of the resource that manages this resource group."
                    },
                    "tags": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "description": "The additional properties. "
                      },
                      "description": "The tags attached to the resource group."
                    }
                  },
                  "required": [
                    "location"
                  ],
                  "x-ms-azure-resource": true,
                  "description": "Resource group information."
                },
                "examples": {
                  "Create or update a resource group": {
                    "$ref": "#/components/examples/Create_or_update_a_resource_group"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_Delete",
        "summary": "Deletes a resource group.",
        "description": "When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group to delete. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Force delete all the Virtual Machines in a resource group": {
                "value": "my-resource-group"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "my-resource-group"
              }
            }
          },
          {
            "name": "forceDeletionTypes",
            "in": "query",
            "required": false,
            "description": "The resource types you want to force delete. Currently, only the following is supported: forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Force delete all the Virtual Machines in a resource group": {
                "value": "Microsoft.Compute/virtualMachines"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_Get",
        "description": "Gets a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group to get. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource group.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The ID of the resource group."
                    },
                    "name": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The name of the resource group."
                    },
                    "type": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The type of the resource group."
                    },
                    "properties": {
                      "description": "The resource group properties.",
                      "properties": {
                        "provisioningState": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The provisioning state. "
                        }
                      }
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations."
                    },
                    "managedBy": {
                      "type": "string",
                      "description": "The ID of the resource that manages this resource group."
                    },
                    "tags": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "description": "The additional properties. "
                      },
                      "description": "The tags attached to the resource group."
                    }
                  },
                  "required": [
                    "location"
                  ],
                  "x-ms-azure-resource": true,
                  "description": "Resource group information."
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_Update",
        "summary": "Updates a resource group.",
        "description": "Resource groups can be updated through a simple PATCH operation to a group address. The format of the request is the same as that for creating a resource group. If a field is unspecified, the current value is retained.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group to update. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the resource group."
                  },
                  "properties": {
                    "description": "The resource group properties.",
                    "properties": {
                      "provisioningState": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The provisioning state. "
                      }
                    }
                  },
                  "managedBy": {
                    "type": "string",
                    "description": "The ID of the resource that manages this resource group."
                  },
                  "tags": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "description": "The additional properties. "
                    },
                    "description": "The tags attached to the resource group."
                  }
                },
                "description": "Resource group information."
              }
            }
          },
          "description": "Parameters supplied to update a resource group.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource group.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The ID of the resource group."
                    },
                    "name": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The name of the resource group."
                    },
                    "type": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The type of the resource group."
                    },
                    "properties": {
                      "description": "The resource group properties.",
                      "properties": {
                        "provisioningState": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The provisioning state. "
                        }
                      }
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations."
                    },
                    "managedBy": {
                      "type": "string",
                      "description": "The ID of the resource that manages this resource group."
                    },
                    "tags": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "description": "The additional properties. "
                      },
                      "description": "The tags attached to the resource group."
                    }
                  },
                  "required": [
                    "location"
                  ],
                  "x-ms-azure-resource": true,
                  "description": "Resource group information."
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate": {
      "post": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_ExportTemplate",
        "description": "Captures the specified resource group as a template.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The ID of the target subscription.",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "examples": {
              "Export a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Export a resource group with filtering": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group. The name is case insensitive.",
            "x-ms-parameter-location": "method",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90
            },
            "examples": {
              "Export a resource group": {
                "value": "my-resource-group"
              },
              "Export a resource group with filtering": {
                "value": "my-resource-group"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "examples": {
              "Export a resource group": {
                "value": "2021-04-01"
              },
              "Export a resource group with filtering": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The IDs of the resources to filter the export by. To export all resources, supply an array with single entry '*'."
                  },
                  "options": {
                    "type": "string",
                    "description": "The export template options. A CSV-formatted list containing zero or more of the following: 'IncludeParameterDefaultValue', 'IncludeComments', 'SkipResourceNameParameterization', 'SkipAllParameterization'"
                  }
                },
                "description": "Export resource group template request parameters."
              }
            }
          },
          "description": "Parameters for exporting the template.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returns the result of the export.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceGroupExportResult"
                },
                "examples": {
                  "Export a resource group": {
                    "$ref": "#/components/examples/Export_a_resource_group"
                  },
                  "Export a resource group with filtering": {
                    "$ref": "#/components/examples/Export_a_resource_group_with_filtering"
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups": {
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_List",
        "description": "Gets all the resource groups for a subscription.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "The filter to apply on the operation.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "The number of results to return. If null is passed, returns all resource groups.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of resource groups.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The ID of the resource group."
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource group."
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource group."
                          },
                          "properties": {
                            "description": "The resource group properties.",
                            "properties": {
                              "provisioningState": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The provisioning state. "
                              }
                            }
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations."
                          },
                          "managedBy": {
                            "type": "string",
                            "description": "The ID of the resource that manages this resource group."
                          },
                          "tags": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string",
                              "description": "The additional properties. "
                            },
                            "description": "The tags attached to the resource group."
                          }
                        },
                        "required": [
                          "location"
                        ],
                        "x-ms-azure-resource": true,
                        "description": "Resource group information."
                      },
                      "description": "An array of resource groups."
                    },
                    "nextLink": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The URL to use for getting the next set of results."
                    }
                  },
                  "description": "List of resource groups."
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/components/schemas/ResourceGroupFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources": {
      "post": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_MoveResources",
        "summary": "Moves resources from one resource group to another resource group.",
        "description": "The resources to be moved must be in the same source resource group in the source subscription being used. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes. ",
        "parameters": [
          {
            "name": "sourceResourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group from the source subscription containing the resources to be moved.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Resources_MoveResourcesParameters"
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/validateMoveResources": {
      "post": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_ValidateMoveResources",
        "summary": "Validates whether resources can be moved from one resource group to another resource group.",
        "description": "This operation checks whether the specified resources can be moved to the target. The resources to be moved must be in the same source resource group in the source subscription being used. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation.",
        "parameters": [
          {
            "name": "sourceResourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group from the source subscription containing the resources to be validated for move.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Resources_MoveResourcesParameters"
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resources": {
      "get": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_List",
        "description": "Get all the resources in a subscription.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "The filter to apply on the operation.<br><br>Filter comparison operators include `eq` (equals) and `ne` (not equals) and may be used with the following properties: `location`, `resourceType`, `name`, `resourceGroup`, `identity`, `identity/principalId`, `plan`, `plan/publisher`, `plan/product`, `plan/name`, `plan/version`, and `plan/promotionCode`.<br><br>For example, to filter by a resource type, use `$filter=resourceType eq 'Microsoft.Network/virtualNetworks'`<br><br><br>`substringof(value, property)` can  be used to filter for substrings of the following currently-supported properties: `name` and `resourceGroup`<br><br>For example, to get all resources with 'demo' anywhere in the resource name, use `$filter=substringof('demo', name)`<br><br>Multiple substring operations can also be combined using `and`/`or` operators.<br><br>Note that any truncated number of results queried via `$top` may also not be compatible when using a filter.<br><br><br>Resources can be filtered by tag names and values. For example, to filter for a tag name and value, use `$filter=tagName eq 'tag1' and tagValue eq 'Value1'`. Note that when resources are filtered by tag name and value, <b>the original tags for each resource will not be returned in the results.</b> Any list of additional properties queried via `$expand` may also not be compatible when filtering by tag names/values. <br><br>For tag names only, resources can be filtered by prefix using the following syntax: `$filter=startswith(tagName, 'depart')`. This query will return all resources with a tag name prefixed by the phrase `depart` (i.e.`department`, `departureDate`, `departureTime`, etc.)<br><br><br>Note that some properties can be combined when filtering resources, which include the following: `substringof() and/or resourceType`, `plan and plan/publisher and plan/name`, and `identity and identity/principalId`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "The number of results to return. If null is passed, returns all resources.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of resources.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "createdTime": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "The created time of the resource. This is only present if requested via the $expand query parameter."
                          },
                          "changedTime": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "The changed time of the resource. This is only present if requested via the $expand query parameter."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The provisioning state of the resource. This is only present if requested via the $expand query parameter."
                          }
                        },
                        "allOf": [
                          {
                            "properties": {
                              "plan": {
                                "description": "The plan of the resource.",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The plan ID."
                                  },
                                  "publisher": {
                                    "type": "string",
                                    "description": "The publisher ID."
                                  },
                                  "product": {
                                    "type": "string",
                                    "description": "The offer ID."
                                  },
                                  "promotionCode": {
                                    "type": "string",
                                    "description": "The promotion code."
                                  },
                                  "version": {
                                    "type": "string",
                                    "description": "The plan's version."
                                  }
                                }
                              },
                              "properties": {
                                "type": "object",
                                "description": "The resource properties."
                              },
                              "kind": {
                                "type": "string",
                                "description": "The kind of the resource.",
                                "pattern": "^[-\\w\\._,\\(\\)]+$"
                              },
                              "managedBy": {
                                "type": "string",
                                "description": "ID of the resource that manages this resource."
                              },
                              "sku": {
                                "description": "The SKU of the resource.",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The SKU name."
                                  },
                                  "tier": {
                                    "type": "string",
                                    "description": "The SKU tier."
                                  },
                                  "size": {
                                    "type": "string",
                                    "description": "The SKU size."
                                  },
                                  "family": {
                                    "type": "string",
                                    "description": "The SKU family."
                                  },
                                  "model": {
                                    "type": "string",
                                    "description": "The SKU model."
                                  },
                                  "capacity": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The SKU capacity."
                                  }
                                }
                              },
                              "identity": {
                                "description": "The identity of the resource.",
                                "properties": {
                                  "principalId": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The principal ID of resource identity."
                                  },
                                  "tenantId": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The tenant ID of resource."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The identity type.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned",
                                      "SystemAssigned, UserAssigned",
                                      "None"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ResourceIdentityType",
                                      "modelAsString": false
                                    }
                                  },
                                  "userAssignedIdentities": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                                      "properties": {
                                        "principalId": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The principal id of user assigned identity."
                                        },
                                        "clientId": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The client id of user assigned identity."
                                        }
                                      }
                                    },
                                    "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                                  }
                                }
                              }
                            },
                            "allOf": [
                              {
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "Resource ID"
                                  },
                                  "name": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "Resource name"
                                  },
                                  "type": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "Resource type"
                                  },
                                  "location": {
                                    "type": "string",
                                    "description": "Resource location"
                                  },
                                  "extendedLocation": {
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "description": "Resource extended location.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "EdgeZone"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ExtendedLocationType",
                                          "modelAsString": true
                                        },
                                        "description": "The extended location type."
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The extended location name."
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "Resource tags"
                                  }
                                },
                                "x-ms-azure-resource": true,
                                "description": "Specified resource."
                              }
                            ],
                            "description": "Resource information."
                          }
                        ],
                        "description": "Resource information."
                      },
                      "description": "An array of resources."
                    },
                    "nextLink": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The URL to use for getting the next set of results."
                    }
                  },
                  "description": "List of resource groups."
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/components/schemas/GenericResourceFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}": {
      "head": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_CheckExistence",
        "description": "Checks whether a resource exists.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group containing the resource to check. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "description": "The resource provider of the resource to check.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "description": "The parent resource identity.",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "description": "The resource type.",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "description": "The name of the resource to check whether it exists.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_Delete",
        "description": "Deletes a resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group that contains the resource to delete. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "description": "The namespace of the resource provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "description": "The parent resource identity.",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "description": "The resource type.",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "description": "The name of the resource to delete.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_CreateOrUpdate",
        "description": "Creates a resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group for the resource. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "description": "The namespace of the resource provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "description": "The parent resource identity.",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "description": "The resource type of the resource to create.",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "description": "The name of the resource to create.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "plan": {
                    "description": "The plan of the resource.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The plan ID."
                      },
                      "publisher": {
                        "type": "string",
                        "description": "The publisher ID."
                      },
                      "product": {
                        "type": "string",
                        "description": "The offer ID."
                      },
                      "promotionCode": {
                        "type": "string",
                        "description": "The promotion code."
                      },
                      "version": {
                        "type": "string",
                        "description": "The plan's version."
                      }
                    }
                  },
                  "properties": {
                    "type": "object",
                    "description": "The resource properties."
                  },
                  "kind": {
                    "type": "string",
                    "description": "The kind of the resource.",
                    "pattern": "^[-\\w\\._,\\(\\)]+$"
                  },
                  "managedBy": {
                    "type": "string",
                    "description": "ID of the resource that manages this resource."
                  },
                  "sku": {
                    "description": "The SKU of the resource.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The SKU name."
                      },
                      "tier": {
                        "type": "string",
                        "description": "The SKU tier."
                      },
                      "size": {
                        "type": "string",
                        "description": "The SKU size."
                      },
                      "family": {
                        "type": "string",
                        "description": "The SKU family."
                      },
                      "model": {
                        "type": "string",
                        "description": "The SKU model."
                      },
                      "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The SKU capacity."
                      }
                    }
                  },
                  "identity": {
                    "description": "The identity of the resource.",
                    "properties": {
                      "principalId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The principal ID of resource identity."
                      },
                      "tenantId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The tenant ID of resource."
                      },
                      "type": {
                        "type": "string",
                        "description": "The identity type.",
                        "enum": [
                          "SystemAssigned",
                          "UserAssigned",
                          "SystemAssigned, UserAssigned",
                          "None"
                        ],
                        "x-ms-enum": {
                          "name": "ResourceIdentityType",
                          "modelAsString": false
                        }
                      },
                      "userAssignedIdentities": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                          "properties": {
                            "principalId": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The principal id of user assigned identity."
                            },
                            "clientId": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The client id of user assigned identity."
                            }
                          }
                        },
                        "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                      }
                    }
                  }
                },
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type"
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location"
                      },
                      "extendedLocation": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "Resource extended location.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "EdgeZone"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true
                            },
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags"
                      }
                    },
                    "x-ms-azure-resource": true,
                    "description": "Specified resource."
                  }
                ],
                "description": "Resource information."
              }
            }
          },
          "description": "Parameters for creating or updating the resource.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "plan": {
                      "description": "The plan of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The plan ID."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher ID."
                        },
                        "product": {
                          "type": "string",
                          "description": "The offer ID."
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "The promotion code."
                        },
                        "version": {
                          "type": "string",
                          "description": "The plan's version."
                        }
                      }
                    },
                    "properties": {
                      "type": "object",
                      "description": "The resource properties."
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of the resource.",
                      "pattern": "^[-\\w\\._,\\(\\)]+$"
                    },
                    "managedBy": {
                      "type": "string",
                      "description": "ID of the resource that manages this resource."
                    },
                    "sku": {
                      "description": "The SKU of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The SKU name."
                        },
                        "tier": {
                          "type": "string",
                          "description": "The SKU tier."
                        },
                        "size": {
                          "type": "string",
                          "description": "The SKU size."
                        },
                        "family": {
                          "type": "string",
                          "description": "The SKU family."
                        },
                        "model": {
                          "type": "string",
                          "description": "The SKU model."
                        },
                        "capacity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The SKU capacity."
                        }
                      }
                    },
                    "identity": {
                      "description": "The identity of the resource.",
                      "properties": {
                        "principalId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The principal ID of resource identity."
                        },
                        "tenantId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The tenant ID of resource."
                        },
                        "type": {
                          "type": "string",
                          "description": "The identity type.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned",
                            "SystemAssigned, UserAssigned",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceIdentityType",
                            "modelAsString": false
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                            "properties": {
                              "principalId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The principal id of user assigned identity."
                              },
                              "clientId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The client id of user assigned identity."
                              }
                            }
                          },
                          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource ID"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource name"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource type"
                        },
                        "location": {
                          "type": "string",
                          "description": "Resource location"
                        },
                        "extendedLocation": {
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "description": "Resource extended location.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EdgeZone"
                              ],
                              "x-ms-enum": {
                                "name": "ExtendedLocationType",
                                "modelAsString": true
                              },
                              "description": "The extended location type."
                            },
                            "name": {
                              "type": "string",
                              "description": "The extended location name."
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Resource tags"
                        }
                      },
                      "x-ms-azure-resource": true,
                      "description": "Specified resource."
                    }
                  ],
                  "description": "Resource information."
                }
              }
            }
          },
          "201": {
            "description": "Created - Returns information about the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "plan": {
                      "description": "The plan of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The plan ID."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher ID."
                        },
                        "product": {
                          "type": "string",
                          "description": "The offer ID."
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "The promotion code."
                        },
                        "version": {
                          "type": "string",
                          "description": "The plan's version."
                        }
                      }
                    },
                    "properties": {
                      "type": "object",
                      "description": "The resource properties."
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of the resource.",
                      "pattern": "^[-\\w\\._,\\(\\)]+$"
                    },
                    "managedBy": {
                      "type": "string",
                      "description": "ID of the resource that manages this resource."
                    },
                    "sku": {
                      "description": "The SKU of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The SKU name."
                        },
                        "tier": {
                          "type": "string",
                          "description": "The SKU tier."
                        },
                        "size": {
                          "type": "string",
                          "description": "The SKU size."
                        },
                        "family": {
                          "type": "string",
                          "description": "The SKU family."
                        },
                        "model": {
                          "type": "string",
                          "description": "The SKU model."
                        },
                        "capacity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The SKU capacity."
                        }
                      }
                    },
                    "identity": {
                      "description": "The identity of the resource.",
                      "properties": {
                        "principalId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The principal ID of resource identity."
                        },
                        "tenantId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The tenant ID of resource."
                        },
                        "type": {
                          "type": "string",
                          "description": "The identity type.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned",
                            "SystemAssigned, UserAssigned",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceIdentityType",
                            "modelAsString": false
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                            "properties": {
                              "principalId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The principal id of user assigned identity."
                              },
                              "clientId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The client id of user assigned identity."
                              }
                            }
                          },
                          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource ID"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource name"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource type"
                        },
                        "location": {
                          "type": "string",
                          "description": "Resource location"
                        },
                        "extendedLocation": {
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "description": "Resource extended location.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EdgeZone"
                              ],
                              "x-ms-enum": {
                                "name": "ExtendedLocationType",
                                "modelAsString": true
                              },
                              "description": "The extended location type."
                            },
                            "name": {
                              "type": "string",
                              "description": "The extended location name."
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Resource tags"
                        }
                      },
                      "x-ms-azure-resource": true,
                      "description": "Specified resource."
                    }
                  ],
                  "description": "Resource information."
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_Update",
        "description": "Updates a resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group for the resource. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "description": "The namespace of the resource provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "description": "The parent resource identity.",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "description": "The resource type of the resource to update.",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "description": "The name of the resource to update.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "plan": {
                    "description": "The plan of the resource.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The plan ID."
                      },
                      "publisher": {
                        "type": "string",
                        "description": "The publisher ID."
                      },
                      "product": {
                        "type": "string",
                        "description": "The offer ID."
                      },
                      "promotionCode": {
                        "type": "string",
                        "description": "The promotion code."
                      },
                      "version": {
                        "type": "string",
                        "description": "The plan's version."
                      }
                    }
                  },
                  "properties": {
                    "type": "object",
                    "description": "The resource properties."
                  },
                  "kind": {
                    "type": "string",
                    "description": "The kind of the resource.",
                    "pattern": "^[-\\w\\._,\\(\\)]+$"
                  },
                  "managedBy": {
                    "type": "string",
                    "description": "ID of the resource that manages this resource."
                  },
                  "sku": {
                    "description": "The SKU of the resource.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The SKU name."
                      },
                      "tier": {
                        "type": "string",
                        "description": "The SKU tier."
                      },
                      "size": {
                        "type": "string",
                        "description": "The SKU size."
                      },
                      "family": {
                        "type": "string",
                        "description": "The SKU family."
                      },
                      "model": {
                        "type": "string",
                        "description": "The SKU model."
                      },
                      "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The SKU capacity."
                      }
                    }
                  },
                  "identity": {
                    "description": "The identity of the resource.",
                    "properties": {
                      "principalId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The principal ID of resource identity."
                      },
                      "tenantId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The tenant ID of resource."
                      },
                      "type": {
                        "type": "string",
                        "description": "The identity type.",
                        "enum": [
                          "SystemAssigned",
                          "UserAssigned",
                          "SystemAssigned, UserAssigned",
                          "None"
                        ],
                        "x-ms-enum": {
                          "name": "ResourceIdentityType",
                          "modelAsString": false
                        }
                      },
                      "userAssignedIdentities": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                          "properties": {
                            "principalId": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The principal id of user assigned identity."
                            },
                            "clientId": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The client id of user assigned identity."
                            }
                          }
                        },
                        "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                      }
                    }
                  }
                },
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type"
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location"
                      },
                      "extendedLocation": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "Resource extended location.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "EdgeZone"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true
                            },
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags"
                      }
                    },
                    "x-ms-azure-resource": true,
                    "description": "Specified resource."
                  }
                ],
                "description": "Resource information."
              }
            }
          },
          "description": "Parameters for updating the resource.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "plan": {
                      "description": "The plan of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The plan ID."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher ID."
                        },
                        "product": {
                          "type": "string",
                          "description": "The offer ID."
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "The promotion code."
                        },
                        "version": {
                          "type": "string",
                          "description": "The plan's version."
                        }
                      }
                    },
                    "properties": {
                      "type": "object",
                      "description": "The resource properties."
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of the resource.",
                      "pattern": "^[-\\w\\._,\\(\\)]+$"
                    },
                    "managedBy": {
                      "type": "string",
                      "description": "ID of the resource that manages this resource."
                    },
                    "sku": {
                      "description": "The SKU of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The SKU name."
                        },
                        "tier": {
                          "type": "string",
                          "description": "The SKU tier."
                        },
                        "size": {
                          "type": "string",
                          "description": "The SKU size."
                        },
                        "family": {
                          "type": "string",
                          "description": "The SKU family."
                        },
                        "model": {
                          "type": "string",
                          "description": "The SKU model."
                        },
                        "capacity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The SKU capacity."
                        }
                      }
                    },
                    "identity": {
                      "description": "The identity of the resource.",
                      "properties": {
                        "principalId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The principal ID of resource identity."
                        },
                        "tenantId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The tenant ID of resource."
                        },
                        "type": {
                          "type": "string",
                          "description": "The identity type.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned",
                            "SystemAssigned, UserAssigned",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceIdentityType",
                            "modelAsString": false
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                            "properties": {
                              "principalId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The principal id of user assigned identity."
                              },
                              "clientId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The client id of user assigned identity."
                              }
                            }
                          },
                          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource ID"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource name"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource type"
                        },
                        "location": {
                          "type": "string",
                          "description": "Resource location"
                        },
                        "extendedLocation": {
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "description": "Resource extended location.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EdgeZone"
                              ],
                              "x-ms-enum": {
                                "name": "ExtendedLocationType",
                                "modelAsString": true
                              },
                              "description": "The extended location type."
                            },
                            "name": {
                              "type": "string",
                              "description": "The extended location name."
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Resource tags"
                        }
                      },
                      "x-ms-azure-resource": true,
                      "description": "Specified resource."
                    }
                  ],
                  "description": "Resource information."
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_Get",
        "description": "Gets a resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group containing the resource to get. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "description": "The namespace of the resource provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "description": "The parent resource identity.",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "description": "The resource type of the resource.",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "description": "The name of the resource to get.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "plan": {
                      "description": "The plan of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The plan ID."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher ID."
                        },
                        "product": {
                          "type": "string",
                          "description": "The offer ID."
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "The promotion code."
                        },
                        "version": {
                          "type": "string",
                          "description": "The plan's version."
                        }
                      }
                    },
                    "properties": {
                      "type": "object",
                      "description": "The resource properties."
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of the resource.",
                      "pattern": "^[-\\w\\._,\\(\\)]+$"
                    },
                    "managedBy": {
                      "type": "string",
                      "description": "ID of the resource that manages this resource."
                    },
                    "sku": {
                      "description": "The SKU of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The SKU name."
                        },
                        "tier": {
                          "type": "string",
                          "description": "The SKU tier."
                        },
                        "size": {
                          "type": "string",
                          "description": "The SKU size."
                        },
                        "family": {
                          "type": "string",
                          "description": "The SKU family."
                        },
                        "model": {
                          "type": "string",
                          "description": "The SKU model."
                        },
                        "capacity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The SKU capacity."
                        }
                      }
                    },
                    "identity": {
                      "description": "The identity of the resource.",
                      "properties": {
                        "principalId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The principal ID of resource identity."
                        },
                        "tenantId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The tenant ID of resource."
                        },
                        "type": {
                          "type": "string",
                          "description": "The identity type.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned",
                            "SystemAssigned, UserAssigned",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceIdentityType",
                            "modelAsString": false
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                            "properties": {
                              "principalId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The principal id of user assigned identity."
                              },
                              "clientId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The client id of user assigned identity."
                              }
                            }
                          },
                          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource ID"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource name"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource type"
                        },
                        "location": {
                          "type": "string",
                          "description": "Resource location"
                        },
                        "extendedLocation": {
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "description": "Resource extended location.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EdgeZone"
                              ],
                              "x-ms-enum": {
                                "name": "ExtendedLocationType",
                                "modelAsString": true
                              },
                              "description": "The extended location type."
                            },
                            "name": {
                              "type": "string",
                              "description": "The extended location name."
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Resource tags"
                        }
                      },
                      "x-ms-azure-resource": true,
                      "description": "Specified resource."
                    }
                  ],
                  "description": "Resource information."
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{resourceId}": {
      "head": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_CheckExistenceById",
        "description": "Checks by ID whether a resource exists.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_DeleteById",
        "description": "Deletes a resource by ID.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_CreateOrUpdateById",
        "description": "Create a resource by ID.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "plan": {
                    "description": "The plan of the resource.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The plan ID."
                      },
                      "publisher": {
                        "type": "string",
                        "description": "The publisher ID."
                      },
                      "product": {
                        "type": "string",
                        "description": "The offer ID."
                      },
                      "promotionCode": {
                        "type": "string",
                        "description": "The promotion code."
                      },
                      "version": {
                        "type": "string",
                        "description": "The plan's version."
                      }
                    }
                  },
                  "properties": {
                    "type": "object",
                    "description": "The resource properties."
                  },
                  "kind": {
                    "type": "string",
                    "description": "The kind of the resource.",
                    "pattern": "^[-\\w\\._,\\(\\)]+$"
                  },
                  "managedBy": {
                    "type": "string",
                    "description": "ID of the resource that manages this resource."
                  },
                  "sku": {
                    "description": "The SKU of the resource.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The SKU name."
                      },
                      "tier": {
                        "type": "string",
                        "description": "The SKU tier."
                      },
                      "size": {
                        "type": "string",
                        "description": "The SKU size."
                      },
                      "family": {
                        "type": "string",
                        "description": "The SKU family."
                      },
                      "model": {
                        "type": "string",
                        "description": "The SKU model."
                      },
                      "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The SKU capacity."
                      }
                    }
                  },
                  "identity": {
                    "description": "The identity of the resource.",
                    "properties": {
                      "principalId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The principal ID of resource identity."
                      },
                      "tenantId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The tenant ID of resource."
                      },
                      "type": {
                        "type": "string",
                        "description": "The identity type.",
                        "enum": [
                          "SystemAssigned",
                          "UserAssigned",
                          "SystemAssigned, UserAssigned",
                          "None"
                        ],
                        "x-ms-enum": {
                          "name": "ResourceIdentityType",
                          "modelAsString": false
                        }
                      },
                      "userAssignedIdentities": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                          "properties": {
                            "principalId": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The principal id of user assigned identity."
                            },
                            "clientId": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The client id of user assigned identity."
                            }
                          }
                        },
                        "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                      }
                    }
                  }
                },
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type"
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location"
                      },
                      "extendedLocation": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "Resource extended location.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "EdgeZone"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true
                            },
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags"
                      }
                    },
                    "x-ms-azure-resource": true,
                    "description": "Specified resource."
                  }
                ],
                "description": "Resource information."
              }
            }
          },
          "description": "Create or update resource parameters.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "plan": {
                      "description": "The plan of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The plan ID."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher ID."
                        },
                        "product": {
                          "type": "string",
                          "description": "The offer ID."
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "The promotion code."
                        },
                        "version": {
                          "type": "string",
                          "description": "The plan's version."
                        }
                      }
                    },
                    "properties": {
                      "type": "object",
                      "description": "The resource properties."
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of the resource.",
                      "pattern": "^[-\\w\\._,\\(\\)]+$"
                    },
                    "managedBy": {
                      "type": "string",
                      "description": "ID of the resource that manages this resource."
                    },
                    "sku": {
                      "description": "The SKU of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The SKU name."
                        },
                        "tier": {
                          "type": "string",
                          "description": "The SKU tier."
                        },
                        "size": {
                          "type": "string",
                          "description": "The SKU size."
                        },
                        "family": {
                          "type": "string",
                          "description": "The SKU family."
                        },
                        "model": {
                          "type": "string",
                          "description": "The SKU model."
                        },
                        "capacity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The SKU capacity."
                        }
                      }
                    },
                    "identity": {
                      "description": "The identity of the resource.",
                      "properties": {
                        "principalId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The principal ID of resource identity."
                        },
                        "tenantId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The tenant ID of resource."
                        },
                        "type": {
                          "type": "string",
                          "description": "The identity type.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned",
                            "SystemAssigned, UserAssigned",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceIdentityType",
                            "modelAsString": false
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                            "properties": {
                              "principalId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The principal id of user assigned identity."
                              },
                              "clientId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The client id of user assigned identity."
                              }
                            }
                          },
                          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource ID"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource name"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource type"
                        },
                        "location": {
                          "type": "string",
                          "description": "Resource location"
                        },
                        "extendedLocation": {
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "description": "Resource extended location.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EdgeZone"
                              ],
                              "x-ms-enum": {
                                "name": "ExtendedLocationType",
                                "modelAsString": true
                              },
                              "description": "The extended location type."
                            },
                            "name": {
                              "type": "string",
                              "description": "The extended location name."
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Resource tags"
                        }
                      },
                      "x-ms-azure-resource": true,
                      "description": "Specified resource."
                    }
                  ],
                  "description": "Resource information."
                }
              }
            }
          },
          "201": {
            "description": "Created - Returns information about the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "plan": {
                      "description": "The plan of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The plan ID."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher ID."
                        },
                        "product": {
                          "type": "string",
                          "description": "The offer ID."
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "The promotion code."
                        },
                        "version": {
                          "type": "string",
                          "description": "The plan's version."
                        }
                      }
                    },
                    "properties": {
                      "type": "object",
                      "description": "The resource properties."
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of the resource.",
                      "pattern": "^[-\\w\\._,\\(\\)]+$"
                    },
                    "managedBy": {
                      "type": "string",
                      "description": "ID of the resource that manages this resource."
                    },
                    "sku": {
                      "description": "The SKU of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The SKU name."
                        },
                        "tier": {
                          "type": "string",
                          "description": "The SKU tier."
                        },
                        "size": {
                          "type": "string",
                          "description": "The SKU size."
                        },
                        "family": {
                          "type": "string",
                          "description": "The SKU family."
                        },
                        "model": {
                          "type": "string",
                          "description": "The SKU model."
                        },
                        "capacity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The SKU capacity."
                        }
                      }
                    },
                    "identity": {
                      "description": "The identity of the resource.",
                      "properties": {
                        "principalId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The principal ID of resource identity."
                        },
                        "tenantId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The tenant ID of resource."
                        },
                        "type": {
                          "type": "string",
                          "description": "The identity type.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned",
                            "SystemAssigned, UserAssigned",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceIdentityType",
                            "modelAsString": false
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                            "properties": {
                              "principalId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The principal id of user assigned identity."
                              },
                              "clientId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The client id of user assigned identity."
                              }
                            }
                          },
                          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource ID"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource name"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource type"
                        },
                        "location": {
                          "type": "string",
                          "description": "Resource location"
                        },
                        "extendedLocation": {
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "description": "Resource extended location.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EdgeZone"
                              ],
                              "x-ms-enum": {
                                "name": "ExtendedLocationType",
                                "modelAsString": true
                              },
                              "description": "The extended location type."
                            },
                            "name": {
                              "type": "string",
                              "description": "The extended location name."
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Resource tags"
                        }
                      },
                      "x-ms-azure-resource": true,
                      "description": "Specified resource."
                    }
                  ],
                  "description": "Resource information."
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_UpdateById",
        "description": "Updates a resource by ID.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "plan": {
                    "description": "The plan of the resource.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The plan ID."
                      },
                      "publisher": {
                        "type": "string",
                        "description": "The publisher ID."
                      },
                      "product": {
                        "type": "string",
                        "description": "The offer ID."
                      },
                      "promotionCode": {
                        "type": "string",
                        "description": "The promotion code."
                      },
                      "version": {
                        "type": "string",
                        "description": "The plan's version."
                      }
                    }
                  },
                  "properties": {
                    "type": "object",
                    "description": "The resource properties."
                  },
                  "kind": {
                    "type": "string",
                    "description": "The kind of the resource.",
                    "pattern": "^[-\\w\\._,\\(\\)]+$"
                  },
                  "managedBy": {
                    "type": "string",
                    "description": "ID of the resource that manages this resource."
                  },
                  "sku": {
                    "description": "The SKU of the resource.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The SKU name."
                      },
                      "tier": {
                        "type": "string",
                        "description": "The SKU tier."
                      },
                      "size": {
                        "type": "string",
                        "description": "The SKU size."
                      },
                      "family": {
                        "type": "string",
                        "description": "The SKU family."
                      },
                      "model": {
                        "type": "string",
                        "description": "The SKU model."
                      },
                      "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The SKU capacity."
                      }
                    }
                  },
                  "identity": {
                    "description": "The identity of the resource.",
                    "properties": {
                      "principalId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The principal ID of resource identity."
                      },
                      "tenantId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The tenant ID of resource."
                      },
                      "type": {
                        "type": "string",
                        "description": "The identity type.",
                        "enum": [
                          "SystemAssigned",
                          "UserAssigned",
                          "SystemAssigned, UserAssigned",
                          "None"
                        ],
                        "x-ms-enum": {
                          "name": "ResourceIdentityType",
                          "modelAsString": false
                        }
                      },
                      "userAssignedIdentities": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                          "properties": {
                            "principalId": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The principal id of user assigned identity."
                            },
                            "clientId": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The client id of user assigned identity."
                            }
                          }
                        },
                        "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                      }
                    }
                  }
                },
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type"
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location"
                      },
                      "extendedLocation": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "Resource extended location.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "EdgeZone"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true
                            },
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags"
                      }
                    },
                    "x-ms-azure-resource": true,
                    "description": "Specified resource."
                  }
                ],
                "description": "Resource information."
              }
            }
          },
          "description": "Update resource parameters.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "plan": {
                      "description": "The plan of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The plan ID."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher ID."
                        },
                        "product": {
                          "type": "string",
                          "description": "The offer ID."
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "The promotion code."
                        },
                        "version": {
                          "type": "string",
                          "description": "The plan's version."
                        }
                      }
                    },
                    "properties": {
                      "type": "object",
                      "description": "The resource properties."
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of the resource.",
                      "pattern": "^[-\\w\\._,\\(\\)]+$"
                    },
                    "managedBy": {
                      "type": "string",
                      "description": "ID of the resource that manages this resource."
                    },
                    "sku": {
                      "description": "The SKU of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The SKU name."
                        },
                        "tier": {
                          "type": "string",
                          "description": "The SKU tier."
                        },
                        "size": {
                          "type": "string",
                          "description": "The SKU size."
                        },
                        "family": {
                          "type": "string",
                          "description": "The SKU family."
                        },
                        "model": {
                          "type": "string",
                          "description": "The SKU model."
                        },
                        "capacity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The SKU capacity."
                        }
                      }
                    },
                    "identity": {
                      "description": "The identity of the resource.",
                      "properties": {
                        "principalId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The principal ID of resource identity."
                        },
                        "tenantId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The tenant ID of resource."
                        },
                        "type": {
                          "type": "string",
                          "description": "The identity type.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned",
                            "SystemAssigned, UserAssigned",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceIdentityType",
                            "modelAsString": false
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                            "properties": {
                              "principalId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The principal id of user assigned identity."
                              },
                              "clientId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The client id of user assigned identity."
                              }
                            }
                          },
                          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource ID"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource name"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource type"
                        },
                        "location": {
                          "type": "string",
                          "description": "Resource location"
                        },
                        "extendedLocation": {
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "description": "Resource extended location.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EdgeZone"
                              ],
                              "x-ms-enum": {
                                "name": "ExtendedLocationType",
                                "modelAsString": true
                              },
                              "description": "The extended location type."
                            },
                            "name": {
                              "type": "string",
                              "description": "The extended location name."
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Resource tags"
                        }
                      },
                      "x-ms-azure-resource": true,
                      "description": "Specified resource."
                    }
                  ],
                  "description": "Resource information."
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_GetById",
        "description": "Gets a resource by ID.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "plan": {
                      "description": "The plan of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The plan ID."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher ID."
                        },
                        "product": {
                          "type": "string",
                          "description": "The offer ID."
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "The promotion code."
                        },
                        "version": {
                          "type": "string",
                          "description": "The plan's version."
                        }
                      }
                    },
                    "properties": {
                      "type": "object",
                      "description": "The resource properties."
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of the resource.",
                      "pattern": "^[-\\w\\._,\\(\\)]+$"
                    },
                    "managedBy": {
                      "type": "string",
                      "description": "ID of the resource that manages this resource."
                    },
                    "sku": {
                      "description": "The SKU of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The SKU name."
                        },
                        "tier": {
                          "type": "string",
                          "description": "The SKU tier."
                        },
                        "size": {
                          "type": "string",
                          "description": "The SKU size."
                        },
                        "family": {
                          "type": "string",
                          "description": "The SKU family."
                        },
                        "model": {
                          "type": "string",
                          "description": "The SKU model."
                        },
                        "capacity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The SKU capacity."
                        }
                      }
                    },
                    "identity": {
                      "description": "The identity of the resource.",
                      "properties": {
                        "principalId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The principal ID of resource identity."
                        },
                        "tenantId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The tenant ID of resource."
                        },
                        "type": {
                          "type": "string",
                          "description": "The identity type.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned",
                            "SystemAssigned, UserAssigned",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceIdentityType",
                            "modelAsString": false
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                            "properties": {
                              "principalId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The principal id of user assigned identity."
                              },
                              "clientId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The client id of user assigned identity."
                              }
                            }
                          },
                          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource ID"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource name"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource type"
                        },
                        "location": {
                          "type": "string",
                          "description": "Resource location"
                        },
                        "extendedLocation": {
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "description": "Resource extended location.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EdgeZone"
                              ],
                              "x-ms-enum": {
                                "name": "ExtendedLocationType",
                                "modelAsString": true
                              },
                              "description": "The extended location type."
                            },
                            "name": {
                              "type": "string",
                              "description": "The extended location name."
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Resource tags"
                        }
                      },
                      "x-ms-azure-resource": true,
                      "description": "Specified resource."
                    }
                  ],
                  "description": "Resource information."
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}": {
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_DeleteValue",
        "summary": "Deletes a predefined tag value for a predefined tag name.",
        "description": "This operation allows deleting a value from the list of predefined values for an existing predefined tag name. The value being deleted must not be in use as a tag value for the given tag name for any resource.",
        "parameters": [
          {
            "name": "tagName",
            "in": "path",
            "required": true,
            "description": "The name of the tag.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagValue",
            "in": "path",
            "required": true,
            "description": "The value of the tag to delete.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Predefined tag value successfully deleted."
          },
          "204": {
            "description": "Predefined tag value did not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_CreateOrUpdateValue",
        "summary": "Creates a predefined value for a predefined tag name.",
        "description": "This operation allows adding a value to the list of predefined values for an existing predefined tag name. A tag value can have a maximum of 256 characters.",
        "parameters": [
          {
            "name": "tagName",
            "in": "path",
            "required": true,
            "description": "The name of the tag.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagValue",
            "in": "path",
            "required": true,
            "description": "The value of the tag to create.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Predefined tag value already exists. Returns information about the predefined tag value.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tag value ID."
                    },
                    "tagValue": {
                      "type": "string",
                      "description": "The tag value."
                    },
                    "count": {
                      "description": "The tag value count.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of count."
                        },
                        "value": {
                          "type": "integer",
                          "description": "Value of count."
                        }
                      }
                    }
                  },
                  "x-ms-azure-resource": true,
                  "description": "Tag information."
                }
              }
            }
          },
          "201": {
            "description": "Predefined tag value successfully created. Returns information about the predefined tag value.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tag value ID."
                    },
                    "tagValue": {
                      "type": "string",
                      "description": "The tag value."
                    },
                    "count": {
                      "description": "The tag value count.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of count."
                        },
                        "value": {
                          "type": "integer",
                          "description": "Value of count."
                        }
                      }
                    }
                  },
                  "x-ms-azure-resource": true,
                  "description": "Tag information."
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/tagNames/{tagName}": {
      "put": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_CreateOrUpdate",
        "summary": "Creates a predefined tag name.",
        "description": "This operation allows adding a name to the list of predefined tag names for the given subscription. A tag name can have a maximum of 512 characters and is case-insensitive. Tag names cannot have the following prefixes which are reserved for Azure use: 'microsoft', 'azure', 'windows'.",
        "parameters": [
          {
            "name": "tagName",
            "in": "path",
            "required": true,
            "description": "The name of the tag to create.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Predefined tag name already exists. Returns information about the predefined tag name.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tag name ID."
                    },
                    "tagName": {
                      "type": "string",
                      "description": "The tag name."
                    },
                    "count": {
                      "description": "The total number of resources that use the resource tag. When a tag is initially created and has no associated resources, the value is 0.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of count."
                        },
                        "value": {
                          "type": "integer",
                          "description": "Value of count."
                        }
                      }
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tag value ID."
                          },
                          "tagValue": {
                            "type": "string",
                            "description": "The tag value."
                          },
                          "count": {
                            "description": "The tag value count.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of count."
                              },
                              "value": {
                                "type": "integer",
                                "description": "Value of count."
                              }
                            }
                          }
                        },
                        "x-ms-azure-resource": true,
                        "description": "Tag information."
                      },
                      "description": "The list of tag values."
                    }
                  },
                  "x-ms-azure-resource": true,
                  "description": "Tag details."
                }
              }
            }
          },
          "201": {
            "description": "Predefined tag name successfully created. Returns information about the predefined tag name.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tag name ID."
                    },
                    "tagName": {
                      "type": "string",
                      "description": "The tag name."
                    },
                    "count": {
                      "description": "The total number of resources that use the resource tag. When a tag is initially created and has no associated resources, the value is 0.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of count."
                        },
                        "value": {
                          "type": "integer",
                          "description": "Value of count."
                        }
                      }
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tag value ID."
                          },
                          "tagValue": {
                            "type": "string",
                            "description": "The tag value."
                          },
                          "count": {
                            "description": "The tag value count.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of count."
                              },
                              "value": {
                                "type": "integer",
                                "description": "Value of count."
                              }
                            }
                          }
                        },
                        "x-ms-azure-resource": true,
                        "description": "Tag information."
                      },
                      "description": "The list of tag values."
                    }
                  },
                  "x-ms-azure-resource": true,
                  "description": "Tag details."
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_Delete",
        "summary": "Deletes a predefined tag name.",
        "description": "This operation allows deleting a name from the list of predefined tag names for the given subscription. The name being deleted must not be in use as a tag name for any resource. All predefined values for the given name must have already been deleted.",
        "parameters": [
          {
            "name": "tagName",
            "in": "path",
            "required": true,
            "description": "The name of the tag.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Predefined tag name successfully deleted."
          },
          "204": {
            "description": "Predefined tag name did not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/tagNames": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_List",
        "summary": "Gets a summary of tag usage under the subscription.",
        "description": "This operation performs a union of predefined tags, resource tags, resource group tags and subscription tags, and returns a summary of usage for each tag name and value under the given subscription. In case of a large number of tags, this operation may return a previously cached result.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of tag names and values.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tag name ID."
                          },
                          "tagName": {
                            "type": "string",
                            "description": "The tag name."
                          },
                          "count": {
                            "description": "The total number of resources that use the resource tag. When a tag is initially created and has no associated resources, the value is 0.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of count."
                              },
                              "value": {
                                "type": "integer",
                                "description": "Value of count."
                              }
                            }
                          },
                          "values": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The tag value ID."
                                },
                                "tagValue": {
                                  "type": "string",
                                  "description": "The tag value."
                                },
                                "count": {
                                  "description": "The tag value count.",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Type of count."
                                    },
                                    "value": {
                                      "type": "integer",
                                      "description": "Value of count."
                                    }
                                  }
                                }
                              },
                              "x-ms-azure-resource": true,
                              "description": "Tag information."
                            },
                            "description": "The list of tag values."
                          }
                        },
                        "x-ms-azure-resource": true,
                        "description": "Tag details."
                      },
                      "description": "An array of tags."
                    },
                    "nextLink": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The URL to use for getting the next set of results."
                    }
                  },
                  "description": "List of subscription tags."
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_GetAtScope",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
              },
              "Update tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Update tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              },
              "Get tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Get tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "description": "The ID of the operation to get.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentOperation"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_ListAtScope",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
              },
              "Update tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Update tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              },
              "Get tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Get tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "The number of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentOperationsListResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_GetAtTenantScope",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "description": "The ID of the operation to get.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentOperation"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_ListAtTenantScope",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "The number of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentOperationsListResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_GetAtManagementGroupScope",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90
            },
            "examples": {
              "Create deployment at management group scope.": {
                "value": "my-management-group-id"
              },
              "Predict template changes at management group scope": {
                "value": "myManagementGruop"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "description": "The ID of the operation to get.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentOperation"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_ListAtManagementGroupScope",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90
            },
            "examples": {
              "Create deployment at management group scope.": {
                "value": "my-management-group-id"
              },
              "Predict template changes at management group scope": {
                "value": "myManagementGruop"
              }
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "The number of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentOperationsListResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_GetAtSubscriptionScope",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "description": "The ID of the operation to get.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentOperation"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_ListAtSubscriptionScope",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "The number of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentOperationsListResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_Get",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "description": "The ID of the operation to get.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentOperation"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_List",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "description": "The name of the resource group. The name is case insensitive.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 90,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "The name of the deployment.",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[-\\w\\._\\(\\)]+$"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "my-deployment"
              },
              "Create deployment at tenant scope.": {
                "value": "tenant-dep01"
              },
              "Predict template changes at management group scope": {
                "value": "exampleDeploymentName"
              },
              "Create deployment at management group scope.": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "my-deployment"
              },
              "Predict template changes at subscription scope": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "my-deployment"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "my-deployment"
              },
              "Predict template changes at resource group scope": {
                "value": "my-deployment"
              }
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "The number of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The Microsoft Azure subscription ID.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at subscription scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Predict template changes at resource group scope": {
                "value": "00000000-0000-0000-0000-000000000001"
              },
              "Get provider resource types.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get providers.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Get provider.": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Create or update a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentOperationsListResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Resources/calculateTemplateHash": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CalculateTemplateHash",
        "description": "Calculate the hash of the given template.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "description": "The template provided to calculate hash.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returns the hash.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Result of the request to calculate template hash. It contains a string of minified template and its hash.",
                  "properties": {
                    "minifiedTemplate": {
                      "type": "string",
                      "description": "The minified template string."
                    },
                    "templateHash": {
                      "type": "string",
                      "description": "The template hash."
                    }
                  }
                },
                "examples": {
                  "Calculate template hash": {
                    "$ref": "#/components/examples/Calculate_template_hash"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/tags/default": {
      "put": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_CreateOrUpdateAtScope",
        "summary": "Creates or updates the entire set of tags on a resource or subscription.",
        "description": "This operation allows adding or replacing the entire set of tags on the specified resource or subscription. The specified entity can have a maximum of 50 tags.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
              },
              "Update tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Update tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              },
              "Get tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Get tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Wrapper resource for tags API requests and responses.",
                "required": [
                  "properties"
                ],
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The ID of the tags wrapper resource."
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the tags wrapper resource."
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the tags wrapper resource."
                  },
                  "properties": {
                    "description": "The set of tags.",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "description": "The tag value."
                        }
                      }
                    }
                  }
                },
                "x-ms-azure-resource": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Tags updated successfully. Returns tags from the specified object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Wrapper resource for tags API requests and responses.",
                  "required": [
                    "properties"
                  ],
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The ID of the tags wrapper resource."
                    },
                    "name": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The name of the tags wrapper resource."
                    },
                    "type": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The type of the tags wrapper resource."
                    },
                    "properties": {
                      "description": "The set of tags.",
                      "properties": {
                        "tags": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "description": "The tag value."
                          }
                        }
                      }
                    }
                  },
                  "x-ms-azure-resource": true
                },
                "examples": {
                  "Update tags on a resource": {
                    "$ref": "#/components/examples/Update_tags_on_a_resource"
                  },
                  "Update tags on a subscription": {
                    "$ref": "#/components/examples/Update_tags_on_a_subscription"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_UpdateAtScope",
        "summary": "Selectively updates the set of tags on a resource or subscription.",
        "description": "This operation allows replacing, merging or selectively deleting tags on the specified resource or subscription. The specified entity can have a maximum of 50 tags at the end of the operation. The 'replace' option replaces the entire set of existing tags with a new set. The 'merge' option allows adding tags with new names and updating the values of tags with existing names. The 'delete' option allows selectively deleting tags based on given names or name/value pairs.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
              },
              "Update tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Update tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              },
              "Get tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Get tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Wrapper resource for tags patch API request only.",
                "properties": {
                  "operation": {
                    "type": "string",
                    "description": "The operation type for the patch API.",
                    "enum": [
                      "Replace",
                      "Merge",
                      "Delete"
                    ],
                    "x-ms-enum": {
                      "name": "tagsPatchOperation",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Replace",
                          "description": "The 'replace' option replaces the entire set of existing tags with a new set."
                        },
                        {
                          "value": "Merge",
                          "description": "The 'merge' option allows adding tags with new names and updating the values of tags with existing names."
                        },
                        {
                          "value": "Delete",
                          "description": "The 'delete' option allows selectively deleting tags based on given names or name/value pairs."
                        }
                      ]
                    }
                  },
                  "properties": {
                    "description": "The set of tags.",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "description": "The tag value."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Tags updated successfully. Returns tags from the specified object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Wrapper resource for tags API requests and responses.",
                  "required": [
                    "properties"
                  ],
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The ID of the tags wrapper resource."
                    },
                    "name": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The name of the tags wrapper resource."
                    },
                    "type": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The type of the tags wrapper resource."
                    },
                    "properties": {
                      "description": "The set of tags.",
                      "properties": {
                        "tags": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "description": "The tag value."
                          }
                        }
                      }
                    }
                  },
                  "x-ms-azure-resource": true
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_GetAtScope",
        "summary": "Gets the entire set of tags on a resource or subscription.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
              },
              "Update tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Update tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              },
              "Get tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Get tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns tags from the specified object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Wrapper resource for tags API requests and responses.",
                  "required": [
                    "properties"
                  ],
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The ID of the tags wrapper resource."
                    },
                    "name": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The name of the tags wrapper resource."
                    },
                    "type": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The type of the tags wrapper resource."
                    },
                    "properties": {
                      "description": "The set of tags.",
                      "properties": {
                        "tags": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "description": "The tag value."
                          }
                        }
                      }
                    }
                  },
                  "x-ms-azure-resource": true
                },
                "examples": {
                  "Get tags on a resource": {
                    "$ref": "#/components/examples/Get_tags_on_a_resource"
                  },
                  "Get tags on a subscription": {
                    "$ref": "#/components/examples/Get_tags_on_a_subscription"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_DeleteAtScope",
        "summary": "Deletes the entire set of tags on a resource or subscription.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
              },
              "Update tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Update tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              },
              "Get tags on a resource": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
              },
              "Get tags on a subscription": {
                "value": "subscriptions/00000000-0000-0000-0000-000000000000"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "description": "The API version to use for this operation.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Create deployment at a given scope.": {
                "value": "2021-04-01"
              },
              "Create deployment at tenant scope.": {
                "value": "2021-04-01"
              },
              "Predict template changes at management group scope": {
                "value": "2021-04-01"
              },
              "Create deployment at management group scope.": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a templateSpec with the given resourceId": {
                "value": "2021-04-01"
              },
              "Predict template changes at subscription scope": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy the last successful deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will redeploy another deployment on failure": {
                "value": "2021-04-01"
              },
              "Create a deployment that will deploy a template with a uri and queryString": {
                "value": "2021-04-01"
              },
              "Predict template changes at resource group scope": {
                "value": "2021-04-01"
              },
              "Get provider resource types.": {
                "value": "2021-04-01"
              },
              "Get providers.": {
                "value": "2021-04-01"
              },
              "Get provider.": {
                "value": "2021-04-01"
              },
              "Get a resource provider at tenant scope": {
                "value": "2021-04-01"
              },
              "Create or update a resource group": {
                "value": "2021-04-01"
              },
              "Force delete all the Virtual Machines in a resource group": {
                "value": "2020-06-01"
              },
              "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
                "value": "2020-06-01"
              },
              "Calculate template hash": {
                "value": "2021-04-01"
              },
              "Update tags on a resource": {
                "value": "2021-04-01"
              },
              "Update tags on a subscription": {
                "value": "2021-04-01"
              },
              "Get tags on a resource": {
                "value": "2021-04-01"
              },
              "Get tags on a subscription": {
                "value": "2021-04-01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tags successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://management.azure.com"
    }
  ],
  "components": {
    "examples": {
      "Create_deployment_at_a_given_scope.": {
        "value": {
          "id": "/providers/Microsoft.Management/managementGroups/my-management-group-id/providers/Microsoft.Resources/deployments/my-deployment",
          "name": "my-deployment",
          "type": "Microsoft.Resources/deployments",
          "location": "eastus",
          "properties": {
            "parameters": {},
            "mode": "Incremental",
            "provisioningState": "Accepted",
            "timestamp": "2019-04-24T22:52:38.7895563Z",
            "duration": "PT1.2970875S",
            "correlationId": "00000000-0000-0000-0000-000000000000",
            "providers": [
              {
                "namespace": "Microsoft.Authorization",
                "resourceTypes": [
                  {
                    "resourceType": "policyDefinitions",
                    "locations": [
                      null
                    ]
                  },
                  {
                    "resourceType": "policyAssignments",
                    "locations": [
                      null
                    ]
                  }
                ]
              },
              {
                "namespace": "Microsoft.Resources",
                "resourceTypes": [
                  {
                    "resourceType": "deployments",
                    "locations": [
                      "eastus"
                    ]
                  }
                ]
              }
            ],
            "dependencies": [
              {
                "dependsOn": [
                  {
                    "id": "/providers/Microsoft.Management/managementGroups/my-management-group-id/providers/Microsoft.Authorization/policyDefinitions/policy-definition-name",
                    "resourceType": "Microsoft.Authorization/policyDefinitions",
                    "resourceName": "policy-definition-name"
                  }
                ],
                "id": "/providers/Microsoft.Management/managementGroups/my-management-group-id/providers/Microsoft.Authorization/policyAssignments/location-lock",
                "resourceType": "Microsoft.Authorization/policyAssignments",
                "resourceName": "location-lock"
              }
            ]
          },
          "tags": {
            "tagKey1": "tag-value-1",
            "tagKey2": "tag-value-2"
          }
        }
      },
      "Create_deployment_at_tenant_scope.": {
        "value": {
          "id": "/providers/Microsoft.Resources/deployments/tenant-dep01",
          "name": "tenant-dep01",
          "type": "Microsoft.Resources/deployments",
          "location": "eastus",
          "properties": {
            "parameters": {},
            "mode": "Incremental",
            "provisioningState": "Accepted",
            "timestamp": "2019-04-24T22:52:38.7895563Z",
            "duration": "PT1.2970875S",
            "correlationId": "00000000-0000-0000-0000-000000000000",
            "providers": [
              {
                "namespace": "Microsoft.Authorization",
                "resourceTypes": [
                  {
                    "resourceType": "policyDefinitions",
                    "locations": [
                      null
                    ]
                  },
                  {
                    "resourceType": "policyAssignments",
                    "locations": [
                      null
                    ]
                  }
                ]
              },
              {
                "namespace": "Microsoft.Resources",
                "resourceTypes": [
                  {
                    "resourceType": "deployments",
                    "locations": [
                      "eastus"
                    ]
                  }
                ]
              }
            ],
            "dependencies": [
              {
                "dependsOn": [
                  {
                    "id": "/providers/Microsoft.Authorization/policyDefinitions/policy-definition-name",
                    "resourceType": "Microsoft.Authorization/policyDefinitions",
                    "resourceName": "policy-definition-name"
                  }
                ],
                "id": "/providers/Microsoft.Authorization/policyAssignments/location-lock",
                "resourceType": "Microsoft.Authorization/policyAssignments",
                "resourceName": "location-lock"
              }
            ]
          },
          "tags": {
            "tagKey1": "tag-value-1",
            "tagKey2": "tag-value-2"
          }
        }
      },
      "Predict_template_changes_at_management_group_scope": {
        "value": {
          "status": "Succeeded",
          "properties": {
            "changes": [
              {
                "resourceId": "/providers/Microsoft.Management/managementGroups/myManagementGroup/providers/Microsoft.Authorization/policyAssignments/myPolicyAssignment",
                "changeType": "Modify",
                "before": {
                  "apiVersion": "2019-06-01",
                  "id": "/providers/Microsoft.Management/managementGroups/myManagementGroup/providers/Microsoft.Authorization/policyAssignments/myPolicyAssignment",
                  "type": "Microsoft.Authorization/policyAssignments",
                  "name": "myPolicyAssignment",
                  "location": "westus2",
                  "properties": {
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/myManagementGroup/providers/Microsoft.Authorization/policyAssignments/myPolicyDefinition",
                    "scope": "/subscriptions/00000000-0000-0000-0000-000000000001",
                    "enforcementMode": "Default"
                  }
                },
                "after": {
                  "resourceId": "/providers/Microsoft.Management/managementGroups/myManagementGroup/providers/Microsoft.Authorization/policyAssignments/myPolicyAssignment",
                  "changeType": "Modify",
                  "before": {
                    "apiVersion": "2019-06-01",
                    "id": "/providers/Microsoft.Management/managementGroups/myManagementGroup/providers/Microsoft.Authorization/policyAssignments/myPolicyAssignment",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "myPolicyAssignment",
                    "location": "westus2",
                    "properties": {
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/myManagementGroup/providers/Microsoft.Authorization/policyAssignments/myPolicyDefinition",
                      "scope": "/subscriptions/00000000-0000-0000-0000-000000000001",
                      "enforcementMode": "DoNotEnforce"
                    }
                  },
                  "delta": [
                    {
                      "path": "properties.enforcementMode",
                      "propertyChangeType": "Modify",
                      "before": "Default",
                      "after": "DoNotEnforce"
                    }
                  ]
                }
              },
              {
                "resourceId": "/providers/Microsoft.Management/managementGroups/myManagementGroup/providers/Microsoft.Authorization/policyAssignments/myPolicyAssignment2",
                "changeType": "Create",
                "after": {
                  "apiVersion": "2019-06-01",
                  "id": "/providers/Microsoft.Management/managementGroups/myManagementGroup/providers/Microsoft.Authorization/policyAssignments/myPolicyAssignment2",
                  "type": "Microsoft.Authorization/policyAssignments",
                  "name": "myPolicyAssignment2",
                  "location": "westus2",
                  "properties": {
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/myManagementGroup/providers/Microsoft.Authorization/policyAssignments/myPolicyDefinition",
                    "scope": "/subscriptions/00000000-0000-0000-0000-000000000002",
                    "enforcementMode": "Default"
                  }
                }
              }
            ]
          }
        }
      },
      "Create_deployment_at_management_group_scope.": {
        "value": {
          "id": "/providers/Microsoft.Management/managementGroups/my-management-group-id/providers/Microsoft.Resources/deployments/my-deployment",
          "name": "my-deployment",
          "type": "Microsoft.Resources/deployments",
          "location": "eastus",
          "properties": {
            "parameters": {},
            "mode": "Incremental",
            "provisioningState": "Accepted",
            "timestamp": "2019-04-24T22:52:38.7895563Z",
            "duration": "PT1.2970875S",
            "correlationId": "00000000-0000-0000-0000-000000000000",
            "providers": [
              {
                "namespace": "Microsoft.Authorization",
                "resourceTypes": [
                  {
                    "resourceType": "policyDefinitions",
                    "locations": [
                      null
                    ]
                  },
                  {
                    "resourceType": "policyAssignments",
                    "locations": [
                      null
                    ]
                  }
                ]
              },
              {
                "namespace": "Microsoft.Resources",
                "resourceTypes": [
                  {
                    "resourceType": "deployments",
                    "locations": [
                      "eastus"
                    ]
                  }
                ]
              }
            ],
            "dependencies": [
              {
                "dependsOn": [
                  {
                    "id": "/providers/Microsoft.Management/managementGroups/my-management-group-id/providers/Microsoft.Authorization/policyDefinitions/policy-definition-name",
                    "resourceType": "Microsoft.Authorization/policyDefinitions",
                    "resourceName": "policy-definition-name"
                  }
                ],
                "id": "/providers/Microsoft.Management/managementGroups/my-management-group-id/providers/Microsoft.Authorization/policyAssignments/location-lock",
                "resourceType": "Microsoft.Authorization/policyAssignments",
                "resourceName": "location-lock"
              }
            ]
          }
        }
      },
      "Create_a_deployment_that_will_deploy_a_templateSpec_with_the_given_resourceId": {
        "value": {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.Resources/deployments/my-deployment",
          "name": "my-deployment",
          "type": "Microsoft.Resources/deployments",
          "properties": {
            "templateLink": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.Resources/TemplateSpecs/TemplateSpec-Name/versions/v1",
              "contentVersion": "1.0.0.0"
            },
            "templateHash": "0000000000000000000",
            "parameters": {},
            "mode": "Incremental",
            "provisioningState": "Accepted",
            "timestamp": "2020-06-05T01:20:01.723776Z",
            "duration": "PT22.8356799S",
            "correlationId": "00000000-0000-0000-0000-000000000000",
            "providers": [
              {
                "namespace": "Microsoft.Storage",
                "resourceTypes": [
                  {
                    "resourceType": "storageAccounts",
                    "locations": [
                      "eastus"
                    ]
                  }
                ]
              }
            ],
            "dependencies": []
          }
        }
      },
      "Predict_template_changes_at_subscription_scope": {
        "value": {
          "status": "succeeded",
          "properties": {
            "changes": [
              {
                "resourceId": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myExistingIdentity",
                "changeType": "Modify",
                "before": {
                  "apiVersion": "2018-11-30",
                  "id": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myExistingIdentity",
                  "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                  "name": "myExistingIdentity",
                  "location": "westus2"
                },
                "after": {
                  "apiVersion": "2018-11-30",
                  "id": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myExistingIdentity",
                  "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                  "name": "myExistingIdentity",
                  "location": "westus2",
                  "tags": {
                    "myNewTag": "my tag value"
                  }
                },
                "delta": [
                  {
                    "path": "tags.myNewTag",
                    "propertyChangeType": "Create",
                    "after": "my tag value"
                  }
                ]
              },
              {
                "resourceId": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myNewIdentity",
                "changeType": "Create",
                "after": {
                  "apiVersion": "2018-11-30",
                  "id": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myNewIdentity",
                  "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                  "name": "myNewIdentity",
                  "location": "eastus",
                  "tags": {
                    "myOtherNewTag": "another new tag value"
                  }
                }
              },
              {
                "resourceId": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group2",
                "changeType": "Create",
                "after": {
                  "apiVersion": "2019-03-01",
                  "id": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group2",
                  "type": "Microsoft.Resources/resourceGroups",
                  "name": "my-resource-group2",
                  "location": "{location3}"
                }
              }
            ]
          }
        }
      },
      "Create_a_deployment_that_will_redeploy_the_last_successful_deployment_on_failure": {
        "value": {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/Microsoft.Resources/deployments/my-deployment",
          "name": "my-deployment",
          "type": "Microsoft.Resources/deployments",
          "properties": {
            "templateLink": {
              "uri": "https://example.com/exampleTemplate.json",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {},
            "mode": "Complete",
            "provisioningState": "Accepted",
            "timestamp": "2019-03-01T00:00:00.0000000Z",
            "duration": "PT0.8204881S",
            "correlationId": "00000000-0000-0000-0000-000000000000",
            "providers": [
              {
                "namespace": "Microsoft.Network",
                "resourceTypes": [
                  {
                    "resourceType": "virtualNetworks",
                    "locations": [
                      "centralus"
                    ]
                  },
                  {
                    "resourceType": "virtualNetworks/subnets",
                    "locations": [
                      "centralus"
                    ]
                  }
                ]
              }
            ],
            "dependencies": [
              {
                "dependsOn": [
                  {
                    "id": "{resourceid}",
                    "resourceType": "Microsoft.Network/virtualNetworks",
                    "resourceName": "VNet1"
                  }
                ],
                "id": "{resourceid}",
                "resourceType": "Microsoft.Network/virtualNetworks/subnets",
                "resourceName": "VNet1/Subnet1"
              },
              {
                "dependsOn": [
                  {
                    "id": "{resourceid}",
                    "resourceType": "Microsoft.Network/virtualNetworks",
                    "resourceName": "VNet1"
                  },
                  {
                    "id": "{resourceid}",
                    "resourceType": "Microsoft.Network/virtualNetworks/subnets",
                    "resourceName": "VNet1/Subnet1"
                  }
                ],
                "id": "{resourceid}",
                "resourceType": "Microsoft.Network/virtualNetworks/subnets",
                "resourceName": "VNet1/Subnet2"
              }
            ],
            "onErrorDeployment": {
              "type": "LastSuccessful",
              "deploymentName": "{nameOfLastSuccesfulDeployment}"
            }
          }
        }
      },
      "Create_a_deployment_that_will_redeploy_another_deployment_on_failure": {
        "value": {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/Microsoft.Resources/deployments/my-deployment",
          "name": "my-deployment",
          "type": "Microsoft.Resources/deployments",
          "properties": {
            "templateLink": {
              "uri": "https://example.com/exampleTemplate.json",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {},
            "mode": "Complete",
            "provisioningState": "Accepted",
            "timestamp": "2019-03-01T00:00:00.0000000Z",
            "duration": "PT0.8204881S",
            "correlationId": "00000000-0000-0000-0000-000000000000",
            "providers": [
              {
                "namespace": "Microsoft.Network",
                "resourceTypes": [
                  {
                    "resourceType": "virtualNetworks",
                    "locations": [
                      "centralus"
                    ]
                  },
                  {
                    "resourceType": "virtualNetworks/subnets",
                    "locations": [
                      "centralus"
                    ]
                  }
                ]
              }
            ],
            "dependencies": [
              {
                "dependsOn": [
                  {
                    "id": "{resourceid}",
                    "resourceType": "Microsoft.Network/virtualNetworks",
                    "resourceName": "VNet1"
                  }
                ],
                "id": "{resourceid}",
                "resourceType": "Microsoft.Network/virtualNetworks/subnets",
                "resourceName": "VNet1/Subnet1"
              },
              {
                "dependsOn": [
                  {
                    "id": "{resourceid}",
                    "resourceType": "Microsoft.Network/virtualNetworks",
                    "resourceName": "VNet1"
                  },
                  {
                    "id": "{resourceid}",
                    "resourceType": "Microsoft.Network/virtualNetworks/subnets",
                    "resourceName": "VNet1/Subnet1"
                  }
                ],
                "id": "{resourceid}",
                "resourceType": "Microsoft.Network/virtualNetworks/subnets",
                "resourceName": "VNet1/Subnet2"
              }
            ],
            "onErrorDeployment": {
              "type": "SpecificDeployment",
              "deploymentName": "name-of-deployment-to-use"
            }
          }
        }
      },
      "Create_a_deployment_that_will_deploy_a_template_with_a_uri_and_queryString": {
        "value": {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.Resources/deployments/my-deployment",
          "name": "my-deployment",
          "type": "Microsoft.Resources/deployments",
          "properties": {
            "templateLink": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.Resources/TemplateSpecs/TemplateSpec-Name/versions/v1",
              "contentVersion": "1.0.0.0"
            },
            "templateHash": "0000000000000000000",
            "parameters": {},
            "mode": "Incremental",
            "provisioningState": "Accepted",
            "timestamp": "2020-06-05T01:20:01.723776Z",
            "duration": "PT22.8356799S",
            "correlationId": "00000000-0000-0000-0000-000000000000",
            "providers": [
              {
                "namespace": "Microsoft.Storage",
                "resourceTypes": [
                  {
                    "resourceType": "storageAccounts",
                    "locations": [
                      "eastus"
                    ]
                  }
                ]
              }
            ],
            "dependencies": []
          }
        }
      },
      "Predict_template_changes_at_resource_group_scope": {
        "value": {
          "status": "succeeded",
          "properties": {
            "changes": [
              {
                "resourceId": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myExistingIdentity",
                "changeType": "Modify",
                "before": {
                  "apiVersion": "2018-11-30",
                  "id": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myExistingIdentity",
                  "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                  "name": "myExistingIdentity",
                  "location": "westus2"
                },
                "after": {
                  "apiVersion": "2018-11-30",
                  "id": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myExistingIdentity",
                  "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                  "name": "myExistingIdentity",
                  "location": "westus2",
                  "tags": {
                    "myNewTag": "my tag value"
                  }
                },
                "delta": [
                  {
                    "path": "tags.myNewTag",
                    "propertyChangeType": "Create",
                    "after": "my tag value"
                  }
                ]
              },
              {
                "resourceId": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myNewIdentity",
                "changeType": "Create",
                "after": {
                  "apiVersion": "2018-11-30",
                  "id": "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myNewIdentity",
                  "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                  "name": "myNewIdentity",
                  "location": "eastus",
                  "tags": {
                    "myOtherNewTag": "another new tag value"
                  }
                }
              }
            ]
          }
        }
      },
      "Get_provider_resource_types.": {
        "value": {
          "value": [
            {
              "resourceType": "TestResourceType",
              "locations": [
                "West US"
              ],
              "apiVersions": [
                "2018-01-01",
                "2015-05-01"
              ],
              "locationMappings": [
                {
                  "location": "West US",
                  "type": "EdgeZone",
                  "extendedLocations": [
                    "LosAngeles",
                    "LosAngeles2"
                  ]
                }
              ],
              "capabilities": "CrossResourceGroupResourceMove, CrossSubscriptionResourceMove, SupportsTags, SupportsLocation"
            },
            {
              "resourceType": "TestResourceTypeSibling",
              "locations": [
                "West US"
              ],
              "apiVersions": [
                "2018-01-01",
                "2015-05-01"
              ],
              "capabilities": "CrossResourceGroupResourceMove, CrossSubscriptionResourceMove, SupportsTags, SupportsLocation"
            }
          ]
        }
      },
      "Get_providers.": {
        "value": {
          "value": [
            {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.TestRP1",
              "namespace": "Microsoft.TestRP1",
              "registrationState": "Registering",
              "registrationPolicy": "RegistrationRequired",
              "resourceTypes": [
                {
                  "resourceType": "TestResourceType",
                  "locations": [
                    "West US"
                  ],
                  "apiVersions": [
                    "2018-01-01",
                    "2015-05-01"
                  ],
                  "locationMappings": [
                    {
                      "location": "West US",
                      "type": "EdgeZone",
                      "extendedLocations": [
                        "LosAngeles",
                        "LosAngeles2"
                      ]
                    }
                  ],
                  "capabilities": "CrossResourceGroupResourceMove, CrossSubscriptionResourceMove, SupportsTags, SupportsLocation"
                },
                {
                  "resourceType": "TestResourceTypeSibling",
                  "locations": [
                    "West US"
                  ],
                  "apiVersions": [
                    "2018-01-01",
                    "2015-05-01"
                  ],
                  "capabilities": "CrossResourceGroupResourceMove, CrossSubscriptionResourceMove, SupportsTags, SupportsLocation"
                }
              ]
            },
            {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Resources",
              "namespace": "Microsoft.Resources",
              "registrationState": "Registered",
              "registrationPolicy": "RegistrationFree",
              "resourceTypes": [
                {
                  "resourceType": "subscriptions",
                  "locations": [
                    "eastus",
                    "eastus2",
                    "westus"
                  ],
                  "apiVersions": [
                    "2016-09-01",
                    "2014-04-01-preview"
                  ],
                  "aliases": [],
                  "capabilities": "CrossResourceGroupResourceMove, CrossSubscriptionResourceMove, SupportsTags, SupportsLocation"
                },
                {
                  "resourceType": "resourceGroups",
                  "locations": [
                    "centralus",
                    "eastasia",
                    "southeastasia"
                  ],
                  "apiVersions": [
                    "2016-09-01",
                    "2014-04-01-preview"
                  ],
                  "aliases": [],
                  "capabilities": "CrossResourceGroupResourceMove, CrossSubscriptionResourceMove, SupportsTags, SupportsLocation"
                },
                {
                  "resourceType": "subscriptions/resourceGroups",
                  "locations": [
                    "eastus",
                    "eastus2",
                    "westus"
                  ],
                  "apiVersions": [
                    "2016-09-01",
                    "2014-04-01-preview"
                  ],
                  "aliases": [],
                  "capabilities": "CrossResourceGroupResourceMove, CrossSubscriptionResourceMove, SupportsTags, SupportsLocation"
                },
                {
                  "resourceType": "bulkDelete",
                  "locations": [
                    "centralus",
                    "eastasia"
                  ],
                  "apiVersions": [
                    "2014-04-01-preview"
                  ],
                  "aliases": [],
                  "capabilities": "CrossResourceGroupResourceMove, CrossSubscriptionResourceMove, SupportsTags, SupportsLocation"
                },
                {
                  "resourceType": "deployments",
                  "locations": [],
                  "apiVersions": [
                    "2017-08-01",
                    "2017-06-01"
                  ],
                  "aliases": [],
                  "capabilities": "SupportsTags"
                },
                {
                  "resourceType": "tags",
                  "locations": [
                    "DevFabric"
                  ],
                  "apiVersions": [],
                  "aliases": [],
                  "capabilities": "SupportsExtension"
                }
              ]
            },
            {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.TestRP2",
              "namespace": "Microsoft.TestRP2",
              "registrationState": "NotRegistered",
              "registrationPolicy": "RegistrationRequired",
              "resourceTypes": [
                {
                  "resourceType": "TestResourceType",
                  "locations": [
                    "West US"
                  ],
                  "apiVersions": [
                    "2018-01-01",
                    "2015-05-01"
                  ],
                  "locationMappings": [
                    {
                      "location": "West US",
                      "type": "EdgeZone",
                      "extendedLocations": [
                        "LosAngeles",
                        "LosAngeles2"
                      ]
                    }
                  ],
                  "capabilities": "CrossResourceGroupResourceMove, CrossSubscriptionResourceMove, SupportsTags, SupportsLocation"
                },
                {
                  "resourceType": "TestResourceTypeSibling",
                  "locations": [
                    "West US"
                  ],
                  "apiVersions": [
                    "2018-01-01",
                    "2015-05-01"
                  ],
                  "capabilities": "CrossResourceGroupResourceMove, CrossSubscriptionResourceMove, SupportsTags, SupportsLocation"
                }
              ]
            }
          ]
        }
      },
      "Get_provider.": {
        "value": {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.TestRP1",
          "namespace": "Microsoft.TestRP1",
          "registrationState": "Registering",
          "registrationPolicy": "RegistrationRequired",
          "resourceTypes": [
            {
              "resourceType": "TestResourceType",
              "locations": [
                "West US"
              ],
              "apiVersions": [
                "2018-01-01",
                "2015-05-01"
              ],
              "locationMappings": [
                {
                  "location": "West US",
                  "type": "EdgeZone",
                  "extendedLocations": [
                    "LosAngeles",
                    "LosAngeles2"
                  ]
                }
              ],
              "capabilities": "CrossResourceGroupResourceMove, CrossSubscriptionResourceMove, SupportsTags, SupportsLocation"
            },
            {
              "resourceType": "TestResourceTypeSibling",
              "locations": [
                "West US"
              ],
              "apiVersions": [
                "2018-01-01",
                "2015-05-01"
              ],
              "capabilities": "CrossResourceGroupResourceMove, CrossSubscriptionResourceMove, SupportsTags, SupportsLocation"
            }
          ]
        }
      },
      "Get_a_resource_provider_at_tenant_scope": {
        "value": {
          "namespace": "Microsoft.Storage",
          "resourceTypes": [
            {
              "resourceType": "storageAccounts",
              "locations": [
                "East US",
                "East US 2",
                "East US 2 (Stage)",
                "West US",
                "West Europe",
                "East Asia",
                "Southeast Asia",
                "Japan East",
                "Japan West",
                "North Central US",
                "South Central US",
                "Central US",
                "North Europe",
                "Brazil South",
                "Australia East",
                "Australia Southeast",
                "South India",
                "Central India",
                "West India",
                "Canada East",
                "Canada Central",
                "West US 2",
                "West Central US",
                "UK South",
                "UK West",
                "Korea Central",
                "Korea South",
                "East US 2 EUAP",
                "Central US EUAP",
                "France Central",
                "France South",
                "Australia Central",
                "Australia Central 2",
                "South Africa West",
                "South Africa North",
                "UAE Central",
                "UAE North",
                "Switzerland North",
                "Switzerland West",
                "Germany West Central",
                "Germany North",
                "Norway East",
                "Norway West",
                "South Central US STG",
                "Brazil Southeast"
              ],
              "apiVersions": [
                "2019-06-01",
                "2019-04-01",
                "2018-11-01",
                "2018-07-01",
                "2018-03-01-preview",
                "2018-02-01",
                "2017-10-01",
                "2017-06-01",
                "2016-12-01",
                "2016-05-01",
                "2016-01-01",
                "2015-06-15",
                "2015-05-01-preview"
              ],
              "defaultApiVersion": "2019-06-01",
              "apiProfiles": [
                {
                  "profileVersion": "2019-03-01-hybrid",
                  "apiVersion": "2017-10-01"
                },
                {
                  "profileVersion": "2017-03-09-profile",
                  "apiVersion": "2016-01-01"
                },
                {
                  "profileVersion": "2018-03-01-hybrid",
                  "apiVersion": "2016-01-01"
                },
                {
                  "profileVersion": "2018-06-01-profile",
                  "apiVersion": "2017-10-01"
                }
              ],
              "aliases": [
                {
                  "name": "Microsoft.Storage/storageAccounts/accountType",
                  "paths": [
                    {
                      "path": "properties.accountType",
                      "apiVersions": [
                        "2015-06-15",
                        "2015-05-01-preview"
                      ]
                    },
                    {
                      "path": "sku.name",
                      "apiVersions": [
                        "2018-11-01",
                        "2018-11-09",
                        "2018-07-01",
                        "2018-03-01-Preview",
                        "2018-02-01",
                        "2017-10-01",
                        "2017-06-01",
                        "2016-12-01",
                        "2016-05-01",
                        "2016-01-01"
                      ]
                    }
                  ],
                  "defaultPath": "sku.name"
                },
                {
                  "name": "Microsoft.Storage/storageAccounts/sku.name",
                  "paths": [
                    {
                      "path": "properties.accountType",
                      "apiVersions": [
                        "2015-06-15",
                        "2015-05-01-preview"
                      ]
                    },
                    {
                      "path": "sku.name",
                      "apiVersions": [
                        "2018-11-01",
                        "2018-11-09",
                        "2018-07-01",
                        "2018-03-01-Preview",
                        "2018-02-01",
                        "2017-10-01",
                        "2017-06-01",
                        "2016-12-01",
                        "2016-05-01",
                        "2016-01-01"
                      ]
                    }
                  ],
                  "defaultPath": "sku.name"
                },
                {
                  "name": "Microsoft.Storage/storageAccounts/accessTier",
                  "paths": [
                    {
                      "path": "properties.accessTier",
                      "apiVersions": [
                        "2018-11-01",
                        "2018-11-09",
                        "2018-07-01",
                        "2018-03-01-Preview",
                        "2018-02-01",
                        "2017-10-01",
                        "2017-06-01",
                        "2016-12-01",
                        "2016-05-01",
                        "2016-01-01",
                        "2015-06-15",
                        "2015-05-01-preview"
                      ]
                    }
                  ],
                  "defaultPath": "properties.accessTier"
                },
                {
                  "name": "Microsoft.Storage/storageAccounts/enableBlobEncryption",
                  "paths": [
                    {
                      "path": "properties.encryption.services.blob.enabled",
                      "apiVersions": [
                        "2018-11-01",
                        "2018-11-09",
                        "2018-07-01",
                        "2018-03-01-Preview",
                        "2018-02-01",
                        "2017-10-01",
                        "2017-06-01",
                        "2016-12-01",
                        "2016-05-01",
                        "2016-01-01",
                        "2015-06-15",
                        "2015-05-01-preview"
                      ]
                    }
                  ],
                  "defaultPath": "properties.encryption.services.blob.enabled"
                },
                {
                  "name": "Microsoft.Storage/storageAccounts/enableFileEncryption",
                  "paths": [
                    {
                      "path": "properties.encryption.services.file.enabled",
                      "apiVersions": [
                        "2018-11-01",
                        "2018-11-09",
                        "2018-07-01",
                        "2018-03-01-Preview",
                        "2018-02-01",
                        "2017-10-01",
                        "2017-06-01",
                        "2016-12-01",
                        "2016-05-01",
                        "2016-01-01",
                        "2015-06-15",
                        "2015-05-01-preview"
                      ]
                    }
                  ],
                  "defaultPath": "properties.encryption.services.file.enabled"
                },
                {
                  "name": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                  "paths": [
                    {
                      "path": "properties.supportsHttpsTrafficOnly",
                      "apiVersions": [
                        "2018-11-09",
                        "2018-03-01-Preview",
                        "2016-05-01",
                        "2016-01-01",
                        "2015-06-15",
                        "2015-05-01-preview"
                      ],
                      "metadata": {
                        "type": "NotSpecified",
                        "attributes": "None"
                      }
                    }
                  ],
                  "defaultPath": "properties.supportsHttpsTrafficOnly",
                  "defaultMetadata": {
                    "type": "Boolean",
                    "attributes": "Modifiable"
                  }
                }
              ],
              "capabilities": "SupportsTags, SupportsLocation"
            }
          ]
        }
      },
      "Create_or_update_a_resource_group": {
        "value": {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/my-resource-group",
          "name": "my-resource-group",
          "location": "eastus",
          "properties": {
            "provisioningState": "Succeeded"
          }
        }
      },
      "Export_a_resource_group": {
        "value": {
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "myResourceType_myFirstResource_name": {
                "defaultValue": "myFirstResource",
                "type": "String"
              },
              "myResourceType_mySecondResource_name": {
                "defaultValue": "mySecondResource",
                "type": "String"
              },
              "myResourceType_myFirstResource_secret": {
                "type": "SecureString"
              }
            },
            "variables": {},
            "resources": [
              {
                "type": "My.RP/myResourceType",
                "apiVersion": "2019-01-01",
                "name": "[parameters('myResourceType_myFirstResource_name')]",
                "location": "West US",
                "properties": {
                  "secret": "[parameters('myResourceType_myFirstResource_secret')]"
                }
              },
              {
                "type": "My.RP/myResourceType",
                "apiVersion": "2019-01-01",
                "name": "[parameters('myResourceType_mySecondResource_name')]",
                "location": "West US",
                "properties": {
                  "customProperty": "hello!"
                }
              }
            ]
          },
          "error": {
            "code": "ExportTemplateCompletedWithErrors",
            "message": "Export template operation completed with errors. Some resources were not exported. Please see details for more information.",
            "details": []
          }
        }
      },
      "Export_a_resource_group_with_filtering": {
        "value": {
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "myResourceType_myFirstResource_secret": {
                "type": "SecureString"
              }
            },
            "variables": {},
            "resources": [
              {
                "type": "My.RP/myResourceType",
                "apiVersion": "2019-01-01",
                "name": "myFirstResource",
                "location": "West US",
                "properties": {
                  "secret": "[parameters('myResourceType_myFirstResource_secret')]"
                }
              }
            ]
          }
        }
      },
      "Calculate_template_hash": {
        "value": {
          "minifiedTemplate": "{\"$SCHEMA\":\"HTTP://SCHEMAS.MANAGEMENT.AZURE.COM/DEPLOYMENTTEMPLATE?API-VERSION=2014-04-01-PREVIEW\",\"CONTENTVERSION\":\"1.0.0.0\",\"PARAMETERS\":{\"STRING\":{\"TYPE\":\"STRING\"}},\"VARIABLES\":{\"STRING\":\"STRING\",\"INT\":42,\"BOOL\":TRUE,\"ARRAY\":[1,2,3,4],\"OBJECT\":{\"OBJECT\":{\"VMSIZE\":\"LARGE\",\"LOCATION\":\"WEST US\"}}},\"RESOURCES\":[],\"OUTPUTS\":{\"STRING\":{\"TYPE\":\"STRING\",\"VALUE\":\"MYVALUE\"}}}",
          "templateHash": "695440707931307747"
        }
      },
      "Update_tags_on_a_resource": {
        "value": {
          "properties": {
            "tags": {
              "tagKey1": "tag-value-1",
              "tagKey2": "tag-value-2"
            }
          }
        }
      },
      "Update_tags_on_a_subscription": {
        "value": {
          "properties": {
            "tags": {
              "tagKey1": "tag-value-1",
              "tagKey2": "tag-value-2"
            }
          }
        }
      },
      "Get_tags_on_a_resource": {
        "value": {
          "properties": {
            "tags": {
              "tagKey1": "tag-value-1",
              "tagKey2": "tag-value-2"
            }
          }
        }
      },
      "Get_tags_on_a_subscription": {
        "value": {
          "properties": {
            "tags": {
              "tagKey1": "tag-value-1",
              "tagKey2": "tag-value-2"
            }
          }
        }
      }
    },
    "parameters": {
      "ScopeParameter": {
        "name": "scope",
        "in": "path",
        "required": true,
        "description": "The resource scope.",
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true,
        "schema": {
          "type": "string"
        },
        "examples": {
          "Create deployment at a given scope.": {
            "value": "providers/Microsoft.Management/managementGroups/my-management-group-id"
          },
          "Update tags on a resource": {
            "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
          },
          "Update tags on a subscription": {
            "value": "subscriptions/00000000-0000-0000-0000-000000000000"
          },
          "Get tags on a resource": {
            "value": "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm"
          },
          "Get tags on a subscription": {
            "value": "subscriptions/00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "GroupIdParameter": {
        "name": "groupId",
        "in": "path",
        "required": true,
        "description": "The management group ID.",
        "x-ms-parameter-location": "method",
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 90
        },
        "examples": {
          "Create deployment at management group scope.": {
            "value": "my-management-group-id"
          },
          "Predict template changes at management group scope": {
            "value": "myManagementGruop"
          }
        }
      },
      "SubscriptionIdParameter": {
        "name": "subscriptionId",
        "in": "path",
        "required": true,
        "description": "The Microsoft Azure subscription ID.",
        "schema": {
          "type": "string"
        },
        "examples": {
          "Create a deployment that will deploy a templateSpec with the given resourceId": {
            "value": "00000000-0000-0000-0000-000000000001"
          },
          "Predict template changes at subscription scope": {
            "value": "00000000-0000-0000-0000-000000000001"
          },
          "Create a deployment that will redeploy the last successful deployment on failure": {
            "value": "00000000-0000-0000-0000-000000000000"
          },
          "Create a deployment that will redeploy another deployment on failure": {
            "value": "00000000-0000-0000-0000-000000000000"
          },
          "Create a deployment that will deploy a template with a uri and queryString": {
            "value": "00000000-0000-0000-0000-000000000001"
          },
          "Predict template changes at resource group scope": {
            "value": "00000000-0000-0000-0000-000000000001"
          },
          "Get provider resource types.": {
            "value": "00000000-0000-0000-0000-000000000000"
          },
          "Get providers.": {
            "value": "00000000-0000-0000-0000-000000000000"
          },
          "Get provider.": {
            "value": "00000000-0000-0000-0000-000000000000"
          },
          "Create or update a resource group": {
            "value": "00000000-0000-0000-0000-000000000000"
          },
          "Force delete all the Virtual Machines in a resource group": {
            "value": "00000000-0000-0000-0000-000000000000"
          },
          "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
            "value": "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "DeploymentNameParameter": {
        "name": "deploymentName",
        "in": "path",
        "required": true,
        "x-ms-parameter-location": "method",
        "description": "The name of the deployment.",
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "^[-\\w\\._\\(\\)]+$"
        },
        "examples": {
          "Create deployment at a given scope.": {
            "value": "my-deployment"
          },
          "Create deployment at tenant scope.": {
            "value": "tenant-dep01"
          },
          "Predict template changes at management group scope": {
            "value": "exampleDeploymentName"
          },
          "Create deployment at management group scope.": {
            "value": "my-deployment"
          },
          "Create a deployment that will deploy a templateSpec with the given resourceId": {
            "value": "my-deployment"
          },
          "Predict template changes at subscription scope": {
            "value": "my-deployment"
          },
          "Create a deployment that will redeploy the last successful deployment on failure": {
            "value": "my-deployment"
          },
          "Create a deployment that will redeploy another deployment on failure": {
            "value": "my-deployment"
          },
          "Create a deployment that will deploy a template with a uri and queryString": {
            "value": "my-deployment"
          },
          "Predict template changes at resource group scope": {
            "value": "my-deployment"
          }
        }
      },
      "ApiVersionParameter": {
        "name": "api-version",
        "in": "query",
        "required": true,
        "description": "The API version to use for this operation.",
        "schema": {
          "type": "string"
        },
        "examples": {
          "Create deployment at a given scope.": {
            "value": "2021-04-01"
          },
          "Create deployment at tenant scope.": {
            "value": "2021-04-01"
          },
          "Predict template changes at management group scope": {
            "value": "2021-04-01"
          },
          "Create deployment at management group scope.": {
            "value": "2021-04-01"
          },
          "Create a deployment that will deploy a templateSpec with the given resourceId": {
            "value": "2021-04-01"
          },
          "Predict template changes at subscription scope": {
            "value": "2021-04-01"
          },
          "Create a deployment that will redeploy the last successful deployment on failure": {
            "value": "2021-04-01"
          },
          "Create a deployment that will redeploy another deployment on failure": {
            "value": "2021-04-01"
          },
          "Create a deployment that will deploy a template with a uri and queryString": {
            "value": "2021-04-01"
          },
          "Predict template changes at resource group scope": {
            "value": "2021-04-01"
          },
          "Get provider resource types.": {
            "value": "2021-04-01"
          },
          "Get providers.": {
            "value": "2021-04-01"
          },
          "Get provider.": {
            "value": "2021-04-01"
          },
          "Get a resource provider at tenant scope": {
            "value": "2021-04-01"
          },
          "Create or update a resource group": {
            "value": "2021-04-01"
          },
          "Force delete all the Virtual Machines in a resource group": {
            "value": "2020-06-01"
          },
          "Force delete all the Virtual Machines and Virtual Machine Scale Sets in a resource group": {
            "value": "2020-06-01"
          },
          "Calculate template hash": {
            "value": "2021-04-01"
          },
          "Update tags on a resource": {
            "value": "2021-04-01"
          },
          "Update tags on a subscription": {
            "value": "2021-04-01"
          },
          "Get tags on a resource": {
            "value": "2021-04-01"
          },
          "Get tags on a subscription": {
            "value": "2021-04-01"
          }
        }
      }
    },
    "requestBodies": {
      "Deployments_ValidateAtScopeParameters": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Deployment tags"
                }
              },
              "required": [
                "properties"
              ],
              "description": "Deployment operation parameters."
            }
          }
        },
        "description": "Parameters to validate.",
        "required": true
      },
      "Deployments_CreateOrUpdateAtScopeParameters": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Deployment tags"
                }
              },
              "required": [
                "properties"
              ],
              "description": "Deployment operation parameters."
            }
          }
        },
        "description": "Additional parameters supplied to the operation.",
        "required": true
      },
      "Deployments_CreateOrUpdateAtTenantScopeParameters": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Deployment tags"
                }
              },
              "required": [
                "location",
                "properties"
              ],
              "description": "Deployment operation parameters."
            }
          }
        },
        "description": "Additional parameters supplied to the operation.",
        "required": true
      },
      "Deployments_WhatIfAtTenantScopeParameters": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "whatIfSettings": {
                      "description": "Optional What-If operation settings.",
                      "properties": {
                        "resultFormat": {
                          "type": "string",
                          "description": "The format of the What-If results",
                          "enum": [
                            "ResourceIdOnly",
                            "FullResourcePayloads"
                          ],
                          "x-ms-enum": {
                            "name": "WhatIfResultFormat",
                            "modelAsString": false
                          }
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "properties": {
                        "template": {
                          "type": "object",
                          "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                        },
                        "templateLink": {
                          "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                          "properties": {
                            "uri": {
                              "type": "string",
                              "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                            },
                            "id": {
                              "type": "string",
                              "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                            },
                            "relativePath": {
                              "type": "string",
                              "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                            },
                            "contentVersion": {
                              "type": "string",
                              "description": "If included, must match the ContentVersion in the template."
                            },
                            "queryString": {
                              "type": "string",
                              "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                            }
                          }
                        },
                        "parameters": {
                          "type": "object",
                          "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                        },
                        "parametersLink": {
                          "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                          "properties": {
                            "uri": {
                              "type": "string",
                              "description": "The URI of the parameters file."
                            },
                            "contentVersion": {
                              "type": "string",
                              "description": "If included, must match the ContentVersion in the template."
                            }
                          },
                          "required": [
                            "uri"
                          ]
                        },
                        "mode": {
                          "type": "string",
                          "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                          "enum": [
                            "Incremental",
                            "Complete"
                          ],
                          "x-ms-enum": {
                            "name": "DeploymentMode",
                            "modelAsString": false
                          }
                        },
                        "debugSetting": {
                          "description": "The debug setting of the deployment.",
                          "properties": {
                            "detailLevel": {
                              "type": "string",
                              "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                            }
                          }
                        },
                        "onErrorDeployment": {
                          "description": "The deployment on error behavior.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                              "enum": [
                                "LastSuccessful",
                                "SpecificDeployment"
                              ],
                              "x-ms-enum": {
                                "name": "OnErrorDeploymentType",
                                "modelAsString": false
                              }
                            },
                            "deploymentName": {
                              "type": "string",
                              "description": "The deployment to be used on error case."
                            }
                          }
                        },
                        "expressionEvaluationOptions": {
                          "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                              "enum": [
                                "NotSpecified",
                                "Outer",
                                "Inner"
                              ],
                              "x-ms-enum": {
                                "name": "ExpressionEvaluationOptionsScopeType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "mode"
                      ],
                      "description": "Deployment properties."
                    }
                  ]
                }
              },
              "required": [
                "location",
                "properties"
              ],
              "description": "Deployment What-if operation parameters."
            }
          }
        },
        "description": "Parameters to validate.",
        "required": true
      },
      "Deployments_ValidateAtTenantScopeParameters": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Deployment tags"
                }
              },
              "required": [
                "location",
                "properties"
              ],
              "description": "Deployment operation parameters."
            }
          }
        },
        "description": "Parameters to validate.",
        "required": true
      },
      "Resources_MoveResourcesParameters": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "resources": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The IDs of the resources."
                },
                "targetResourceGroup": {
                  "type": "string",
                  "description": "The target resource group."
                }
              },
              "description": "Parameters of move resources."
            }
          }
        },
        "description": "Parameters for moving resources.",
        "required": true
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "type": "oauth2",
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        }
      }
    },
    "schemas": {
      "DeploymentExtendedFilter": {
        "properties": {
          "provisioningState": {
            "type": "string",
            "description": "The provisioning state."
          }
        },
        "description": "Deployment filter."
      },
      "GenericResourceFilter": {
        "properties": {
          "resourceType": {
            "type": "string",
            "description": "The resource type."
          },
          "tagname": {
            "type": "string",
            "description": "The tag name."
          },
          "tagvalue": {
            "type": "string",
            "description": "The tag value."
          }
        },
        "description": "Resource filter."
      },
      "ResourceGroupFilter": {
        "properties": {
          "tagName": {
            "type": "string",
            "description": "The tag name."
          },
          "tagValue": {
            "type": "string",
            "description": "The tag value."
          }
        },
        "description": "Resource group filter."
      },
      "TemplateLink": {
        "properties": {
          "uri": {
            "type": "string",
            "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
          },
          "id": {
            "type": "string",
            "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
          },
          "relativePath": {
            "type": "string",
            "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
          },
          "contentVersion": {
            "type": "string",
            "description": "If included, must match the ContentVersion in the template."
          },
          "queryString": {
            "type": "string",
            "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
          }
        },
        "description": "Entity representing the reference to the template."
      },
      "ParametersLink": {
        "properties": {
          "uri": {
            "type": "string",
            "description": "The URI of the parameters file."
          },
          "contentVersion": {
            "type": "string",
            "description": "If included, must match the ContentVersion in the template."
          }
        },
        "required": [
          "uri"
        ],
        "description": "Entity representing the reference to the deployment parameters."
      },
      "DeploymentProperties": {
        "properties": {
          "template": {
            "type": "object",
            "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
          },
          "templateLink": {
            "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
            "properties": {
              "uri": {
                "type": "string",
                "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
              },
              "id": {
                "type": "string",
                "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
              },
              "relativePath": {
                "type": "string",
                "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
              },
              "contentVersion": {
                "type": "string",
                "description": "If included, must match the ContentVersion in the template."
              },
              "queryString": {
                "type": "string",
                "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
              }
            }
          },
          "parameters": {
            "type": "object",
            "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
          },
          "parametersLink": {
            "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
            "properties": {
              "uri": {
                "type": "string",
                "description": "The URI of the parameters file."
              },
              "contentVersion": {
                "type": "string",
                "description": "If included, must match the ContentVersion in the template."
              }
            },
            "required": [
              "uri"
            ]
          },
          "mode": {
            "type": "string",
            "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
            "enum": [
              "Incremental",
              "Complete"
            ],
            "x-ms-enum": {
              "name": "DeploymentMode",
              "modelAsString": false
            }
          },
          "debugSetting": {
            "description": "The debug setting of the deployment.",
            "properties": {
              "detailLevel": {
                "type": "string",
                "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
              }
            }
          },
          "onErrorDeployment": {
            "description": "The deployment on error behavior.",
            "properties": {
              "type": {
                "type": "string",
                "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                "enum": [
                  "LastSuccessful",
                  "SpecificDeployment"
                ],
                "x-ms-enum": {
                  "name": "OnErrorDeploymentType",
                  "modelAsString": false
                }
              },
              "deploymentName": {
                "type": "string",
                "description": "The deployment to be used on error case."
              }
            }
          },
          "expressionEvaluationOptions": {
            "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
            "properties": {
              "scope": {
                "type": "string",
                "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                "enum": [
                  "NotSpecified",
                  "Outer",
                  "Inner"
                ],
                "x-ms-enum": {
                  "name": "ExpressionEvaluationOptionsScopeType",
                  "modelAsString": true
                }
              }
            }
          }
        },
        "required": [
          "mode"
        ],
        "description": "Deployment properties."
      },
      "DebugSetting": {
        "properties": {
          "detailLevel": {
            "type": "string",
            "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
          }
        },
        "description": "The debug setting."
      },
      "Deployment": {
        "properties": {
          "location": {
            "type": "string",
            "description": "The location to store the deployment data."
          },
          "properties": {
            "description": "The deployment properties.",
            "properties": {
              "template": {
                "type": "object",
                "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
              },
              "templateLink": {
                "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                "properties": {
                  "uri": {
                    "type": "string",
                    "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                  },
                  "id": {
                    "type": "string",
                    "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                  },
                  "relativePath": {
                    "type": "string",
                    "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                  },
                  "contentVersion": {
                    "type": "string",
                    "description": "If included, must match the ContentVersion in the template."
                  },
                  "queryString": {
                    "type": "string",
                    "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                  }
                }
              },
              "parameters": {
                "type": "object",
                "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
              },
              "parametersLink": {
                "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                "properties": {
                  "uri": {
                    "type": "string",
                    "description": "The URI of the parameters file."
                  },
                  "contentVersion": {
                    "type": "string",
                    "description": "If included, must match the ContentVersion in the template."
                  }
                },
                "required": [
                  "uri"
                ]
              },
              "mode": {
                "type": "string",
                "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                "enum": [
                  "Incremental",
                  "Complete"
                ],
                "x-ms-enum": {
                  "name": "DeploymentMode",
                  "modelAsString": false
                }
              },
              "debugSetting": {
                "description": "The debug setting of the deployment.",
                "properties": {
                  "detailLevel": {
                    "type": "string",
                    "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                  }
                }
              },
              "onErrorDeployment": {
                "description": "The deployment on error behavior.",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                    "enum": [
                      "LastSuccessful",
                      "SpecificDeployment"
                    ],
                    "x-ms-enum": {
                      "name": "OnErrorDeploymentType",
                      "modelAsString": false
                    }
                  },
                  "deploymentName": {
                    "type": "string",
                    "description": "The deployment to be used on error case."
                  }
                }
              },
              "expressionEvaluationOptions": {
                "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                "properties": {
                  "scope": {
                    "type": "string",
                    "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                    "enum": [
                      "NotSpecified",
                      "Outer",
                      "Inner"
                    ],
                    "x-ms-enum": {
                      "name": "ExpressionEvaluationOptionsScopeType",
                      "modelAsString": true
                    }
                  }
                }
              }
            },
            "required": [
              "mode"
            ]
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Deployment tags"
          }
        },
        "required": [
          "properties"
        ],
        "description": "Deployment operation parameters."
      },
      "ScopedDeployment": {
        "properties": {
          "location": {
            "type": "string",
            "description": "The location to store the deployment data."
          },
          "properties": {
            "description": "The deployment properties.",
            "properties": {
              "template": {
                "type": "object",
                "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
              },
              "templateLink": {
                "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                "properties": {
                  "uri": {
                    "type": "string",
                    "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                  },
                  "id": {
                    "type": "string",
                    "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                  },
                  "relativePath": {
                    "type": "string",
                    "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                  },
                  "contentVersion": {
                    "type": "string",
                    "description": "If included, must match the ContentVersion in the template."
                  },
                  "queryString": {
                    "type": "string",
                    "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                  }
                }
              },
              "parameters": {
                "type": "object",
                "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
              },
              "parametersLink": {
                "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                "properties": {
                  "uri": {
                    "type": "string",
                    "description": "The URI of the parameters file."
                  },
                  "contentVersion": {
                    "type": "string",
                    "description": "If included, must match the ContentVersion in the template."
                  }
                },
                "required": [
                  "uri"
                ]
              },
              "mode": {
                "type": "string",
                "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                "enum": [
                  "Incremental",
                  "Complete"
                ],
                "x-ms-enum": {
                  "name": "DeploymentMode",
                  "modelAsString": false
                }
              },
              "debugSetting": {
                "description": "The debug setting of the deployment.",
                "properties": {
                  "detailLevel": {
                    "type": "string",
                    "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                  }
                }
              },
              "onErrorDeployment": {
                "description": "The deployment on error behavior.",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                    "enum": [
                      "LastSuccessful",
                      "SpecificDeployment"
                    ],
                    "x-ms-enum": {
                      "name": "OnErrorDeploymentType",
                      "modelAsString": false
                    }
                  },
                  "deploymentName": {
                    "type": "string",
                    "description": "The deployment to be used on error case."
                  }
                }
              },
              "expressionEvaluationOptions": {
                "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                "properties": {
                  "scope": {
                    "type": "string",
                    "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                    "enum": [
                      "NotSpecified",
                      "Outer",
                      "Inner"
                    ],
                    "x-ms-enum": {
                      "name": "ExpressionEvaluationOptionsScopeType",
                      "modelAsString": true
                    }
                  }
                }
              }
            },
            "required": [
              "mode"
            ]
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Deployment tags"
          }
        },
        "required": [
          "location",
          "properties"
        ],
        "description": "Deployment operation parameters."
      },
      "DeploymentExportResult": {
        "properties": {
          "template": {
            "type": "object",
            "description": "The template content."
          }
        },
        "description": "The deployment export result. "
      },
      "DeploymentWhatIf": {
        "properties": {
          "location": {
            "type": "string",
            "description": "The location to store the deployment data."
          },
          "properties": {
            "description": "The deployment properties.",
            "properties": {
              "whatIfSettings": {
                "description": "Optional What-If operation settings.",
                "properties": {
                  "resultFormat": {
                    "type": "string",
                    "description": "The format of the What-If results",
                    "enum": [
                      "ResourceIdOnly",
                      "FullResourcePayloads"
                    ],
                    "x-ms-enum": {
                      "name": "WhatIfResultFormat",
                      "modelAsString": false
                    }
                  }
                }
              }
            },
            "allOf": [
              {
                "properties": {
                  "template": {
                    "type": "object",
                    "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                  },
                  "templateLink": {
                    "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                      },
                      "id": {
                        "type": "string",
                        "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                      },
                      "relativePath": {
                        "type": "string",
                        "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                      },
                      "contentVersion": {
                        "type": "string",
                        "description": "If included, must match the ContentVersion in the template."
                      },
                      "queryString": {
                        "type": "string",
                        "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                      }
                    }
                  },
                  "parameters": {
                    "type": "object",
                    "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                  },
                  "parametersLink": {
                    "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the parameters file."
                      },
                      "contentVersion": {
                        "type": "string",
                        "description": "If included, must match the ContentVersion in the template."
                      }
                    },
                    "required": [
                      "uri"
                    ]
                  },
                  "mode": {
                    "type": "string",
                    "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                    "enum": [
                      "Incremental",
                      "Complete"
                    ],
                    "x-ms-enum": {
                      "name": "DeploymentMode",
                      "modelAsString": false
                    }
                  },
                  "debugSetting": {
                    "description": "The debug setting of the deployment.",
                    "properties": {
                      "detailLevel": {
                        "type": "string",
                        "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                      }
                    }
                  },
                  "onErrorDeployment": {
                    "description": "The deployment on error behavior.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                        "enum": [
                          "LastSuccessful",
                          "SpecificDeployment"
                        ],
                        "x-ms-enum": {
                          "name": "OnErrorDeploymentType",
                          "modelAsString": false
                        }
                      },
                      "deploymentName": {
                        "type": "string",
                        "description": "The deployment to be used on error case."
                      }
                    }
                  },
                  "expressionEvaluationOptions": {
                    "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                    "properties": {
                      "scope": {
                        "type": "string",
                        "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                        "enum": [
                          "NotSpecified",
                          "Outer",
                          "Inner"
                        ],
                        "x-ms-enum": {
                          "name": "ExpressionEvaluationOptionsScopeType",
                          "modelAsString": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "mode"
                ],
                "description": "Deployment properties."
              }
            ]
          }
        },
        "required": [
          "properties"
        ],
        "description": "Deployment What-if operation parameters."
      },
      "ScopedDeploymentWhatIf": {
        "properties": {
          "location": {
            "type": "string",
            "description": "The location to store the deployment data."
          },
          "properties": {
            "description": "The deployment properties.",
            "properties": {
              "whatIfSettings": {
                "description": "Optional What-If operation settings.",
                "properties": {
                  "resultFormat": {
                    "type": "string",
                    "description": "The format of the What-If results",
                    "enum": [
                      "ResourceIdOnly",
                      "FullResourcePayloads"
                    ],
                    "x-ms-enum": {
                      "name": "WhatIfResultFormat",
                      "modelAsString": false
                    }
                  }
                }
              }
            },
            "allOf": [
              {
                "properties": {
                  "template": {
                    "type": "object",
                    "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                  },
                  "templateLink": {
                    "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                      },
                      "id": {
                        "type": "string",
                        "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                      },
                      "relativePath": {
                        "type": "string",
                        "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                      },
                      "contentVersion": {
                        "type": "string",
                        "description": "If included, must match the ContentVersion in the template."
                      },
                      "queryString": {
                        "type": "string",
                        "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                      }
                    }
                  },
                  "parameters": {
                    "type": "object",
                    "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                  },
                  "parametersLink": {
                    "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the parameters file."
                      },
                      "contentVersion": {
                        "type": "string",
                        "description": "If included, must match the ContentVersion in the template."
                      }
                    },
                    "required": [
                      "uri"
                    ]
                  },
                  "mode": {
                    "type": "string",
                    "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                    "enum": [
                      "Incremental",
                      "Complete"
                    ],
                    "x-ms-enum": {
                      "name": "DeploymentMode",
                      "modelAsString": false
                    }
                  },
                  "debugSetting": {
                    "description": "The debug setting of the deployment.",
                    "properties": {
                      "detailLevel": {
                        "type": "string",
                        "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                      }
                    }
                  },
                  "onErrorDeployment": {
                    "description": "The deployment on error behavior.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                        "enum": [
                          "LastSuccessful",
                          "SpecificDeployment"
                        ],
                        "x-ms-enum": {
                          "name": "OnErrorDeploymentType",
                          "modelAsString": false
                        }
                      },
                      "deploymentName": {
                        "type": "string",
                        "description": "The deployment to be used on error case."
                      }
                    }
                  },
                  "expressionEvaluationOptions": {
                    "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                    "properties": {
                      "scope": {
                        "type": "string",
                        "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                        "enum": [
                          "NotSpecified",
                          "Outer",
                          "Inner"
                        ],
                        "x-ms-enum": {
                          "name": "ExpressionEvaluationOptionsScopeType",
                          "modelAsString": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "mode"
                ],
                "description": "Deployment properties."
              }
            ]
          }
        },
        "required": [
          "location",
          "properties"
        ],
        "description": "Deployment What-if operation parameters."
      },
      "DeploymentWhatIfProperties": {
        "properties": {
          "whatIfSettings": {
            "description": "Optional What-If operation settings.",
            "properties": {
              "resultFormat": {
                "type": "string",
                "description": "The format of the What-If results",
                "enum": [
                  "ResourceIdOnly",
                  "FullResourcePayloads"
                ],
                "x-ms-enum": {
                  "name": "WhatIfResultFormat",
                  "modelAsString": false
                }
              }
            }
          }
        },
        "allOf": [
          {
            "properties": {
              "template": {
                "type": "object",
                "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
              },
              "templateLink": {
                "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                "properties": {
                  "uri": {
                    "type": "string",
                    "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                  },
                  "id": {
                    "type": "string",
                    "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                  },
                  "relativePath": {
                    "type": "string",
                    "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                  },
                  "contentVersion": {
                    "type": "string",
                    "description": "If included, must match the ContentVersion in the template."
                  },
                  "queryString": {
                    "type": "string",
                    "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                  }
                }
              },
              "parameters": {
                "type": "object",
                "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
              },
              "parametersLink": {
                "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                "properties": {
                  "uri": {
                    "type": "string",
                    "description": "The URI of the parameters file."
                  },
                  "contentVersion": {
                    "type": "string",
                    "description": "If included, must match the ContentVersion in the template."
                  }
                },
                "required": [
                  "uri"
                ]
              },
              "mode": {
                "type": "string",
                "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                "enum": [
                  "Incremental",
                  "Complete"
                ],
                "x-ms-enum": {
                  "name": "DeploymentMode",
                  "modelAsString": false
                }
              },
              "debugSetting": {
                "description": "The debug setting of the deployment.",
                "properties": {
                  "detailLevel": {
                    "type": "string",
                    "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                  }
                }
              },
              "onErrorDeployment": {
                "description": "The deployment on error behavior.",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                    "enum": [
                      "LastSuccessful",
                      "SpecificDeployment"
                    ],
                    "x-ms-enum": {
                      "name": "OnErrorDeploymentType",
                      "modelAsString": false
                    }
                  },
                  "deploymentName": {
                    "type": "string",
                    "description": "The deployment to be used on error case."
                  }
                }
              },
              "expressionEvaluationOptions": {
                "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                "properties": {
                  "scope": {
                    "type": "string",
                    "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                    "enum": [
                      "NotSpecified",
                      "Outer",
                      "Inner"
                    ],
                    "x-ms-enum": {
                      "name": "ExpressionEvaluationOptionsScopeType",
                      "modelAsString": true
                    }
                  }
                }
              }
            },
            "required": [
              "mode"
            ],
            "description": "Deployment properties."
          }
        ],
        "description": "Deployment What-if properties."
      },
      "DeploymentWhatIfSettings": {
        "properties": {
          "resultFormat": {
            "type": "string",
            "description": "The format of the What-If results",
            "enum": [
              "ResourceIdOnly",
              "FullResourcePayloads"
            ],
            "x-ms-enum": {
              "name": "WhatIfResultFormat",
              "modelAsString": false
            }
          }
        },
        "description": "Deployment What-If operation settings."
      },
      "CloudError": {
        "x-ms-external": true,
        "properties": {
          "error": {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
          }
        },
        "description": "An error response for a resource management request."
      },
      "ApiProfile": {
        "properties": {
          "profileVersion": {
            "type": "string",
            "readOnly": true,
            "description": "The profile version."
          },
          "apiVersion": {
            "type": "string",
            "readOnly": true,
            "description": "The API version."
          }
        }
      },
      "AliasPathMetadata": {
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "NotSpecified",
              "Any",
              "String",
              "Object",
              "Array",
              "Integer",
              "Number",
              "Boolean"
            ],
            "x-ms-enum": {
              "name": "AliasPathTokenType",
              "modelAsString": true,
              "values": [
                {
                  "value": "NotSpecified",
                  "description": "The token type is not specified."
                },
                {
                  "value": "Any",
                  "description": "The token type can be anything."
                },
                {
                  "value": "String",
                  "description": "The token type is string."
                },
                {
                  "value": "Object",
                  "description": "The token type is object."
                },
                {
                  "value": "Array",
                  "description": "The token type is array."
                },
                {
                  "value": "Integer",
                  "description": "The token type is integer."
                },
                {
                  "value": "Number",
                  "description": "The token type is number."
                },
                {
                  "value": "Boolean",
                  "description": "The token type is boolean."
                }
              ]
            },
            "description": "The type of the token that the alias path is referring to."
          },
          "attributes": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "None",
              "Modifiable"
            ],
            "x-ms-enum": {
              "name": "AliasPathAttributes",
              "modelAsString": true,
              "values": [
                {
                  "value": "None",
                  "description": "The token that the alias path is referring to has no attributes."
                },
                {
                  "value": "Modifiable",
                  "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                }
              ]
            },
            "description": "The attributes of the token that the alias path is referring to."
          }
        }
      },
      "AliasPath": {
        "properties": {
          "path": {
            "type": "string",
            "description": "The path of an alias."
          },
          "apiVersions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The API versions."
          },
          "pattern": {
            "description": "The pattern for an alias path.",
            "properties": {
              "phrase": {
                "type": "string",
                "description": "The alias pattern phrase."
              },
              "variable": {
                "type": "string",
                "description": "The alias pattern variable."
              },
              "type": {
                "type": "string",
                "enum": [
                  "NotSpecified",
                  "Extract"
                ],
                "x-ms-enum": {
                  "name": "AliasPatternType",
                  "modelAsString": false,
                  "values": [
                    {
                      "value": "NotSpecified",
                      "description": "NotSpecified is not allowed."
                    },
                    {
                      "value": "Extract",
                      "description": "Extract is the only allowed value."
                    }
                  ]
                },
                "description": "The type of alias pattern"
              }
            }
          },
          "metadata": {
            "readOnly": true,
            "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
            "properties": {
              "type": {
                "type": "string",
                "readOnly": true,
                "enum": [
                  "NotSpecified",
                  "Any",
                  "String",
                  "Object",
                  "Array",
                  "Integer",
                  "Number",
                  "Boolean"
                ],
                "x-ms-enum": {
                  "name": "AliasPathTokenType",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "NotSpecified",
                      "description": "The token type is not specified."
                    },
                    {
                      "value": "Any",
                      "description": "The token type can be anything."
                    },
                    {
                      "value": "String",
                      "description": "The token type is string."
                    },
                    {
                      "value": "Object",
                      "description": "The token type is object."
                    },
                    {
                      "value": "Array",
                      "description": "The token type is array."
                    },
                    {
                      "value": "Integer",
                      "description": "The token type is integer."
                    },
                    {
                      "value": "Number",
                      "description": "The token type is number."
                    },
                    {
                      "value": "Boolean",
                      "description": "The token type is boolean."
                    }
                  ]
                },
                "description": "The type of the token that the alias path is referring to."
              },
              "attributes": {
                "type": "string",
                "readOnly": true,
                "enum": [
                  "None",
                  "Modifiable"
                ],
                "x-ms-enum": {
                  "name": "AliasPathAttributes",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "None",
                      "description": "The token that the alias path is referring to has no attributes."
                    },
                    {
                      "value": "Modifiable",
                      "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                    }
                  ]
                },
                "description": "The attributes of the token that the alias path is referring to."
              }
            }
          }
        },
        "description": "The type of the paths for alias."
      },
      "AliasPattern": {
        "properties": {
          "phrase": {
            "type": "string",
            "description": "The alias pattern phrase."
          },
          "variable": {
            "type": "string",
            "description": "The alias pattern variable."
          },
          "type": {
            "type": "string",
            "enum": [
              "NotSpecified",
              "Extract"
            ],
            "x-ms-enum": {
              "name": "AliasPatternType",
              "modelAsString": false,
              "values": [
                {
                  "value": "NotSpecified",
                  "description": "NotSpecified is not allowed."
                },
                {
                  "value": "Extract",
                  "description": "Extract is the only allowed value."
                }
              ]
            },
            "description": "The type of alias pattern"
          }
        },
        "description": "The type of the pattern for an alias path."
      },
      "Alias": {
        "properties": {
          "name": {
            "type": "string",
            "description": "The alias name."
          },
          "paths": {
            "type": "array",
            "items": {
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The path of an alias."
                },
                "apiVersions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The API versions."
                },
                "pattern": {
                  "description": "The pattern for an alias path.",
                  "properties": {
                    "phrase": {
                      "type": "string",
                      "description": "The alias pattern phrase."
                    },
                    "variable": {
                      "type": "string",
                      "description": "The alias pattern variable."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Extract"
                      ],
                      "x-ms-enum": {
                        "name": "AliasPatternType",
                        "modelAsString": false,
                        "values": [
                          {
                            "value": "NotSpecified",
                            "description": "NotSpecified is not allowed."
                          },
                          {
                            "value": "Extract",
                            "description": "Extract is the only allowed value."
                          }
                        ]
                      },
                      "description": "The type of alias pattern"
                    }
                  }
                },
                "metadata": {
                  "readOnly": true,
                  "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "NotSpecified",
                        "Any",
                        "String",
                        "Object",
                        "Array",
                        "Integer",
                        "Number",
                        "Boolean"
                      ],
                      "x-ms-enum": {
                        "name": "AliasPathTokenType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "NotSpecified",
                            "description": "The token type is not specified."
                          },
                          {
                            "value": "Any",
                            "description": "The token type can be anything."
                          },
                          {
                            "value": "String",
                            "description": "The token type is string."
                          },
                          {
                            "value": "Object",
                            "description": "The token type is object."
                          },
                          {
                            "value": "Array",
                            "description": "The token type is array."
                          },
                          {
                            "value": "Integer",
                            "description": "The token type is integer."
                          },
                          {
                            "value": "Number",
                            "description": "The token type is number."
                          },
                          {
                            "value": "Boolean",
                            "description": "The token type is boolean."
                          }
                        ]
                      },
                      "description": "The type of the token that the alias path is referring to."
                    },
                    "attributes": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "None",
                        "Modifiable"
                      ],
                      "x-ms-enum": {
                        "name": "AliasPathAttributes",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "None",
                            "description": "The token that the alias path is referring to has no attributes."
                          },
                          {
                            "value": "Modifiable",
                            "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                          }
                        ]
                      },
                      "description": "The attributes of the token that the alias path is referring to."
                    }
                  }
                }
              },
              "description": "The type of the paths for alias."
            },
            "description": "The paths for an alias."
          },
          "type": {
            "type": "string",
            "description": "The type of the alias.",
            "enum": [
              "NotSpecified",
              "PlainText",
              "Mask"
            ],
            "x-ms-enum": {
              "name": "AliasType",
              "modelAsString": false,
              "values": [
                {
                  "value": "NotSpecified",
                  "description": "Alias type is unknown (same as not providing alias type)."
                },
                {
                  "value": "PlainText",
                  "description": "Alias value is not secret."
                },
                {
                  "value": "Mask",
                  "description": "Alias value is secret."
                }
              ]
            }
          },
          "defaultPath": {
            "type": "string",
            "description": "The default path for an alias."
          },
          "defaultPattern": {
            "description": "The default pattern for an alias.",
            "properties": {
              "phrase": {
                "type": "string",
                "description": "The alias pattern phrase."
              },
              "variable": {
                "type": "string",
                "description": "The alias pattern variable."
              },
              "type": {
                "type": "string",
                "enum": [
                  "NotSpecified",
                  "Extract"
                ],
                "x-ms-enum": {
                  "name": "AliasPatternType",
                  "modelAsString": false,
                  "values": [
                    {
                      "value": "NotSpecified",
                      "description": "NotSpecified is not allowed."
                    },
                    {
                      "value": "Extract",
                      "description": "Extract is the only allowed value."
                    }
                  ]
                },
                "description": "The type of alias pattern"
              }
            }
          },
          "defaultMetadata": {
            "readOnly": true,
            "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
            "properties": {
              "type": {
                "type": "string",
                "readOnly": true,
                "enum": [
                  "NotSpecified",
                  "Any",
                  "String",
                  "Object",
                  "Array",
                  "Integer",
                  "Number",
                  "Boolean"
                ],
                "x-ms-enum": {
                  "name": "AliasPathTokenType",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "NotSpecified",
                      "description": "The token type is not specified."
                    },
                    {
                      "value": "Any",
                      "description": "The token type can be anything."
                    },
                    {
                      "value": "String",
                      "description": "The token type is string."
                    },
                    {
                      "value": "Object",
                      "description": "The token type is object."
                    },
                    {
                      "value": "Array",
                      "description": "The token type is array."
                    },
                    {
                      "value": "Integer",
                      "description": "The token type is integer."
                    },
                    {
                      "value": "Number",
                      "description": "The token type is number."
                    },
                    {
                      "value": "Boolean",
                      "description": "The token type is boolean."
                    }
                  ]
                },
                "description": "The type of the token that the alias path is referring to."
              },
              "attributes": {
                "type": "string",
                "readOnly": true,
                "enum": [
                  "None",
                  "Modifiable"
                ],
                "x-ms-enum": {
                  "name": "AliasPathAttributes",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "None",
                      "description": "The token that the alias path is referring to has no attributes."
                    },
                    {
                      "value": "Modifiable",
                      "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                    }
                  ]
                },
                "description": "The attributes of the token that the alias path is referring to."
              }
            }
          }
        },
        "description": "The alias type. "
      },
      "ProviderExtendedLocation": {
        "properties": {
          "location": {
            "type": "string",
            "description": "The azure location."
          },
          "type": {
            "type": "string",
            "description": "The extended location type."
          },
          "extendedLocations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The extended locations for the azure location."
          }
        },
        "description": "The provider extended location. "
      },
      "ProviderResourceType": {
        "properties": {
          "resourceType": {
            "type": "string",
            "description": "The resource type."
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The collection of locations where this resource type can be created."
          },
          "locationMappings": {
            "type": "array",
            "items": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The azure location."
                },
                "type": {
                  "type": "string",
                  "description": "The extended location type."
                },
                "extendedLocations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The extended locations for the azure location."
                }
              },
              "description": "The provider extended location. "
            },
            "description": "The location mappings that are supported by this resource type."
          },
          "aliases": {
            "type": "array",
            "items": {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The alias name."
                },
                "paths": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "The path of an alias."
                      },
                      "apiVersions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The API versions."
                      },
                      "pattern": {
                        "description": "The pattern for an alias path.",
                        "properties": {
                          "phrase": {
                            "type": "string",
                            "description": "The alias pattern phrase."
                          },
                          "variable": {
                            "type": "string",
                            "description": "The alias pattern variable."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Extract"
                            ],
                            "x-ms-enum": {
                              "name": "AliasPatternType",
                              "modelAsString": false,
                              "values": [
                                {
                                  "value": "NotSpecified",
                                  "description": "NotSpecified is not allowed."
                                },
                                {
                                  "value": "Extract",
                                  "description": "Extract is the only allowed value."
                                }
                              ]
                            },
                            "description": "The type of alias pattern"
                          }
                        }
                      },
                      "metadata": {
                        "readOnly": true,
                        "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "NotSpecified",
                              "Any",
                              "String",
                              "Object",
                              "Array",
                              "Integer",
                              "Number",
                              "Boolean"
                            ],
                            "x-ms-enum": {
                              "name": "AliasPathTokenType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "NotSpecified",
                                  "description": "The token type is not specified."
                                },
                                {
                                  "value": "Any",
                                  "description": "The token type can be anything."
                                },
                                {
                                  "value": "String",
                                  "description": "The token type is string."
                                },
                                {
                                  "value": "Object",
                                  "description": "The token type is object."
                                },
                                {
                                  "value": "Array",
                                  "description": "The token type is array."
                                },
                                {
                                  "value": "Integer",
                                  "description": "The token type is integer."
                                },
                                {
                                  "value": "Number",
                                  "description": "The token type is number."
                                },
                                {
                                  "value": "Boolean",
                                  "description": "The token type is boolean."
                                }
                              ]
                            },
                            "description": "The type of the token that the alias path is referring to."
                          },
                          "attributes": {
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "None",
                              "Modifiable"
                            ],
                            "x-ms-enum": {
                              "name": "AliasPathAttributes",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "None",
                                  "description": "The token that the alias path is referring to has no attributes."
                                },
                                {
                                  "value": "Modifiable",
                                  "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                }
                              ]
                            },
                            "description": "The attributes of the token that the alias path is referring to."
                          }
                        }
                      }
                    },
                    "description": "The type of the paths for alias."
                  },
                  "description": "The paths for an alias."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the alias.",
                  "enum": [
                    "NotSpecified",
                    "PlainText",
                    "Mask"
                  ],
                  "x-ms-enum": {
                    "name": "AliasType",
                    "modelAsString": false,
                    "values": [
                      {
                        "value": "NotSpecified",
                        "description": "Alias type is unknown (same as not providing alias type)."
                      },
                      {
                        "value": "PlainText",
                        "description": "Alias value is not secret."
                      },
                      {
                        "value": "Mask",
                        "description": "Alias value is secret."
                      }
                    ]
                  }
                },
                "defaultPath": {
                  "type": "string",
                  "description": "The default path for an alias."
                },
                "defaultPattern": {
                  "description": "The default pattern for an alias.",
                  "properties": {
                    "phrase": {
                      "type": "string",
                      "description": "The alias pattern phrase."
                    },
                    "variable": {
                      "type": "string",
                      "description": "The alias pattern variable."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Extract"
                      ],
                      "x-ms-enum": {
                        "name": "AliasPatternType",
                        "modelAsString": false,
                        "values": [
                          {
                            "value": "NotSpecified",
                            "description": "NotSpecified is not allowed."
                          },
                          {
                            "value": "Extract",
                            "description": "Extract is the only allowed value."
                          }
                        ]
                      },
                      "description": "The type of alias pattern"
                    }
                  }
                },
                "defaultMetadata": {
                  "readOnly": true,
                  "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                  "properties": {
                    "type": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "NotSpecified",
                        "Any",
                        "String",
                        "Object",
                        "Array",
                        "Integer",
                        "Number",
                        "Boolean"
                      ],
                      "x-ms-enum": {
                        "name": "AliasPathTokenType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "NotSpecified",
                            "description": "The token type is not specified."
                          },
                          {
                            "value": "Any",
                            "description": "The token type can be anything."
                          },
                          {
                            "value": "String",
                            "description": "The token type is string."
                          },
                          {
                            "value": "Object",
                            "description": "The token type is object."
                          },
                          {
                            "value": "Array",
                            "description": "The token type is array."
                          },
                          {
                            "value": "Integer",
                            "description": "The token type is integer."
                          },
                          {
                            "value": "Number",
                            "description": "The token type is number."
                          },
                          {
                            "value": "Boolean",
                            "description": "The token type is boolean."
                          }
                        ]
                      },
                      "description": "The type of the token that the alias path is referring to."
                    },
                    "attributes": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "None",
                        "Modifiable"
                      ],
                      "x-ms-enum": {
                        "name": "AliasPathAttributes",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "None",
                            "description": "The token that the alias path is referring to has no attributes."
                          },
                          {
                            "value": "Modifiable",
                            "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                          }
                        ]
                      },
                      "description": "The attributes of the token that the alias path is referring to."
                    }
                  }
                }
              },
              "description": "The alias type. "
            },
            "description": "The aliases that are supported by this resource type."
          },
          "apiVersions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The API version."
          },
          "defaultApiVersion": {
            "type": "string",
            "readOnly": true,
            "description": "The default API version."
          },
          "zoneMappings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location of the zone mapping."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "apiProfiles": {
            "type": "array",
            "readOnly": true,
            "items": {
              "properties": {
                "profileVersion": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The profile version."
                },
                "apiVersion": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The API version."
                }
              }
            },
            "description": "The API profiles for the resource provider."
          },
          "capabilities": {
            "type": "string",
            "description": "The additional capabilities offered by this resource type."
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "The additional properties. "
            },
            "description": "The properties."
          }
        },
        "description": "Resource type managed by the resource provider."
      },
      "Provider": {
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "The provider ID."
          },
          "namespace": {
            "type": "string",
            "description": "The namespace of the resource provider."
          },
          "registrationState": {
            "readOnly": true,
            "type": "string",
            "description": "The registration state of the resource provider."
          },
          "registrationPolicy": {
            "readOnly": true,
            "type": "string",
            "description": "The registration policy of the resource provider."
          },
          "resourceTypes": {
            "readOnly": true,
            "type": "array",
            "items": {
              "properties": {
                "resourceType": {
                  "type": "string",
                  "description": "The resource type."
                },
                "locations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The collection of locations where this resource type can be created."
                },
                "locationMappings": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "The azure location."
                      },
                      "type": {
                        "type": "string",
                        "description": "The extended location type."
                      },
                      "extendedLocations": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The extended locations for the azure location."
                      }
                    },
                    "description": "The provider extended location. "
                  },
                  "description": "The location mappings that are supported by this resource type."
                },
                "aliases": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The alias name."
                      },
                      "paths": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "The path of an alias."
                            },
                            "apiVersions": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "The API versions."
                            },
                            "pattern": {
                              "description": "The pattern for an alias path.",
                              "properties": {
                                "phrase": {
                                  "type": "string",
                                  "description": "The alias pattern phrase."
                                },
                                "variable": {
                                  "type": "string",
                                  "description": "The alias pattern variable."
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "NotSpecified",
                                    "Extract"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasPatternType",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "value": "NotSpecified",
                                        "description": "NotSpecified is not allowed."
                                      },
                                      {
                                        "value": "Extract",
                                        "description": "Extract is the only allowed value."
                                      }
                                    ]
                                  },
                                  "description": "The type of alias pattern"
                                }
                              }
                            },
                            "metadata": {
                              "readOnly": true,
                              "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "readOnly": true,
                                  "enum": [
                                    "NotSpecified",
                                    "Any",
                                    "String",
                                    "Object",
                                    "Array",
                                    "Integer",
                                    "Number",
                                    "Boolean"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasPathTokenType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "NotSpecified",
                                        "description": "The token type is not specified."
                                      },
                                      {
                                        "value": "Any",
                                        "description": "The token type can be anything."
                                      },
                                      {
                                        "value": "String",
                                        "description": "The token type is string."
                                      },
                                      {
                                        "value": "Object",
                                        "description": "The token type is object."
                                      },
                                      {
                                        "value": "Array",
                                        "description": "The token type is array."
                                      },
                                      {
                                        "value": "Integer",
                                        "description": "The token type is integer."
                                      },
                                      {
                                        "value": "Number",
                                        "description": "The token type is number."
                                      },
                                      {
                                        "value": "Boolean",
                                        "description": "The token type is boolean."
                                      }
                                    ]
                                  },
                                  "description": "The type of the token that the alias path is referring to."
                                },
                                "attributes": {
                                  "type": "string",
                                  "readOnly": true,
                                  "enum": [
                                    "None",
                                    "Modifiable"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasPathAttributes",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "None",
                                        "description": "The token that the alias path is referring to has no attributes."
                                      },
                                      {
                                        "value": "Modifiable",
                                        "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                      }
                                    ]
                                  },
                                  "description": "The attributes of the token that the alias path is referring to."
                                }
                              }
                            }
                          },
                          "description": "The type of the paths for alias."
                        },
                        "description": "The paths for an alias."
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the alias.",
                        "enum": [
                          "NotSpecified",
                          "PlainText",
                          "Mask"
                        ],
                        "x-ms-enum": {
                          "name": "AliasType",
                          "modelAsString": false,
                          "values": [
                            {
                              "value": "NotSpecified",
                              "description": "Alias type is unknown (same as not providing alias type)."
                            },
                            {
                              "value": "PlainText",
                              "description": "Alias value is not secret."
                            },
                            {
                              "value": "Mask",
                              "description": "Alias value is secret."
                            }
                          ]
                        }
                      },
                      "defaultPath": {
                        "type": "string",
                        "description": "The default path for an alias."
                      },
                      "defaultPattern": {
                        "description": "The default pattern for an alias.",
                        "properties": {
                          "phrase": {
                            "type": "string",
                            "description": "The alias pattern phrase."
                          },
                          "variable": {
                            "type": "string",
                            "description": "The alias pattern variable."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Extract"
                            ],
                            "x-ms-enum": {
                              "name": "AliasPatternType",
                              "modelAsString": false,
                              "values": [
                                {
                                  "value": "NotSpecified",
                                  "description": "NotSpecified is not allowed."
                                },
                                {
                                  "value": "Extract",
                                  "description": "Extract is the only allowed value."
                                }
                              ]
                            },
                            "description": "The type of alias pattern"
                          }
                        }
                      },
                      "defaultMetadata": {
                        "readOnly": true,
                        "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                        "properties": {
                          "type": {
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "NotSpecified",
                              "Any",
                              "String",
                              "Object",
                              "Array",
                              "Integer",
                              "Number",
                              "Boolean"
                            ],
                            "x-ms-enum": {
                              "name": "AliasPathTokenType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "NotSpecified",
                                  "description": "The token type is not specified."
                                },
                                {
                                  "value": "Any",
                                  "description": "The token type can be anything."
                                },
                                {
                                  "value": "String",
                                  "description": "The token type is string."
                                },
                                {
                                  "value": "Object",
                                  "description": "The token type is object."
                                },
                                {
                                  "value": "Array",
                                  "description": "The token type is array."
                                },
                                {
                                  "value": "Integer",
                                  "description": "The token type is integer."
                                },
                                {
                                  "value": "Number",
                                  "description": "The token type is number."
                                },
                                {
                                  "value": "Boolean",
                                  "description": "The token type is boolean."
                                }
                              ]
                            },
                            "description": "The type of the token that the alias path is referring to."
                          },
                          "attributes": {
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "None",
                              "Modifiable"
                            ],
                            "x-ms-enum": {
                              "name": "AliasPathAttributes",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "None",
                                  "description": "The token that the alias path is referring to has no attributes."
                                },
                                {
                                  "value": "Modifiable",
                                  "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                }
                              ]
                            },
                            "description": "The attributes of the token that the alias path is referring to."
                          }
                        }
                      }
                    },
                    "description": "The alias type. "
                  },
                  "description": "The aliases that are supported by this resource type."
                },
                "apiVersions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The API version."
                },
                "defaultApiVersion": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The default API version."
                },
                "zoneMappings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "The location of the zone mapping."
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "apiProfiles": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "properties": {
                      "profileVersion": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The profile version."
                      },
                      "apiVersion": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The API version."
                      }
                    }
                  },
                  "description": "The API profiles for the resource provider."
                },
                "capabilities": {
                  "type": "string",
                  "description": "The additional capabilities offered by this resource type."
                },
                "properties": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "description": "The additional properties. "
                  },
                  "description": "The properties."
                }
              },
              "description": "Resource type managed by the resource provider."
            },
            "description": "The collection of provider resource types."
          },
          "providerAuthorizationConsentState": {
            "type": "string",
            "enum": [
              "NotSpecified",
              "Required",
              "NotRequired",
              "Consented"
            ],
            "description": "The provider authorization consent state.",
            "x-ms-enum": {
              "name": "ProviderAuthorizationConsentState",
              "modelAsString": true
            }
          }
        },
        "description": "Resource provider information."
      },
      "BasicDependency": {
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the dependency."
          },
          "resourceType": {
            "type": "string",
            "description": "The dependency resource type."
          },
          "resourceName": {
            "type": "string",
            "description": "The dependency resource name."
          }
        },
        "description": "Deployment dependency information."
      },
      "Dependency": {
        "properties": {
          "dependsOn": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the dependency."
                },
                "resourceType": {
                  "type": "string",
                  "description": "The dependency resource type."
                },
                "resourceName": {
                  "type": "string",
                  "description": "The dependency resource name."
                }
              },
              "description": "Deployment dependency information."
            },
            "description": "The list of dependencies."
          },
          "id": {
            "type": "string",
            "description": "The ID of the dependency."
          },
          "resourceType": {
            "type": "string",
            "description": "The dependency resource type."
          },
          "resourceName": {
            "type": "string",
            "description": "The dependency resource name."
          }
        },
        "description": "Deployment dependency information."
      },
      "DeploymentPropertiesExtended": {
        "properties": {
          "provisioningState": {
            "type": "string",
            "readOnly": true,
            "description": "Denotes the state of provisioning.",
            "enum": [
              "NotSpecified",
              "Accepted",
              "Running",
              "Ready",
              "Creating",
              "Created",
              "Deleting",
              "Deleted",
              "Canceled",
              "Failed",
              "Succeeded",
              "Updating"
            ],
            "x-ms-enum": {
              "name": "ProvisioningState",
              "modelAsString": true
            }
          },
          "correlationId": {
            "readOnly": true,
            "type": "string",
            "description": "The correlation ID of the deployment."
          },
          "timestamp": {
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "description": "The timestamp of the template deployment."
          },
          "duration": {
            "readOnly": true,
            "type": "string",
            "description": "The duration of the template deployment."
          },
          "outputs": {
            "readOnly": true,
            "type": "object",
            "description": "Key/value pairs that represent deployment output."
          },
          "providers": {
            "readOnly": true,
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The provider ID."
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace of the resource provider."
                },
                "registrationState": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The registration state of the resource provider."
                },
                "registrationPolicy": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The registration policy of the resource provider."
                },
                "resourceTypes": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "resourceType": {
                        "type": "string",
                        "description": "The resource type."
                      },
                      "locations": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The collection of locations where this resource type can be created."
                      },
                      "locationMappings": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "location": {
                              "type": "string",
                              "description": "The azure location."
                            },
                            "type": {
                              "type": "string",
                              "description": "The extended location type."
                            },
                            "extendedLocations": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "The extended locations for the azure location."
                            }
                          },
                          "description": "The provider extended location. "
                        },
                        "description": "The location mappings that are supported by this resource type."
                      },
                      "aliases": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The alias name."
                            },
                            "paths": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path of an alias."
                                  },
                                  "apiVersions": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "The API versions."
                                  },
                                  "pattern": {
                                    "description": "The pattern for an alias path.",
                                    "properties": {
                                      "phrase": {
                                        "type": "string",
                                        "description": "The alias pattern phrase."
                                      },
                                      "variable": {
                                        "type": "string",
                                        "description": "The alias pattern variable."
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "NotSpecified",
                                          "Extract"
                                        ],
                                        "x-ms-enum": {
                                          "name": "AliasPatternType",
                                          "modelAsString": false,
                                          "values": [
                                            {
                                              "value": "NotSpecified",
                                              "description": "NotSpecified is not allowed."
                                            },
                                            {
                                              "value": "Extract",
                                              "description": "Extract is the only allowed value."
                                            }
                                          ]
                                        },
                                        "description": "The type of alias pattern"
                                      }
                                    }
                                  },
                                  "metadata": {
                                    "readOnly": true,
                                    "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "readOnly": true,
                                        "enum": [
                                          "NotSpecified",
                                          "Any",
                                          "String",
                                          "Object",
                                          "Array",
                                          "Integer",
                                          "Number",
                                          "Boolean"
                                        ],
                                        "x-ms-enum": {
                                          "name": "AliasPathTokenType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "NotSpecified",
                                              "description": "The token type is not specified."
                                            },
                                            {
                                              "value": "Any",
                                              "description": "The token type can be anything."
                                            },
                                            {
                                              "value": "String",
                                              "description": "The token type is string."
                                            },
                                            {
                                              "value": "Object",
                                              "description": "The token type is object."
                                            },
                                            {
                                              "value": "Array",
                                              "description": "The token type is array."
                                            },
                                            {
                                              "value": "Integer",
                                              "description": "The token type is integer."
                                            },
                                            {
                                              "value": "Number",
                                              "description": "The token type is number."
                                            },
                                            {
                                              "value": "Boolean",
                                              "description": "The token type is boolean."
                                            }
                                          ]
                                        },
                                        "description": "The type of the token that the alias path is referring to."
                                      },
                                      "attributes": {
                                        "type": "string",
                                        "readOnly": true,
                                        "enum": [
                                          "None",
                                          "Modifiable"
                                        ],
                                        "x-ms-enum": {
                                          "name": "AliasPathAttributes",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "None",
                                              "description": "The token that the alias path is referring to has no attributes."
                                            },
                                            {
                                              "value": "Modifiable",
                                              "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                            }
                                          ]
                                        },
                                        "description": "The attributes of the token that the alias path is referring to."
                                      }
                                    }
                                  }
                                },
                                "description": "The type of the paths for alias."
                              },
                              "description": "The paths for an alias."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the alias.",
                              "enum": [
                                "NotSpecified",
                                "PlainText",
                                "Mask"
                              ],
                              "x-ms-enum": {
                                "name": "AliasType",
                                "modelAsString": false,
                                "values": [
                                  {
                                    "value": "NotSpecified",
                                    "description": "Alias type is unknown (same as not providing alias type)."
                                  },
                                  {
                                    "value": "PlainText",
                                    "description": "Alias value is not secret."
                                  },
                                  {
                                    "value": "Mask",
                                    "description": "Alias value is secret."
                                  }
                                ]
                              }
                            },
                            "defaultPath": {
                              "type": "string",
                              "description": "The default path for an alias."
                            },
                            "defaultPattern": {
                              "description": "The default pattern for an alias.",
                              "properties": {
                                "phrase": {
                                  "type": "string",
                                  "description": "The alias pattern phrase."
                                },
                                "variable": {
                                  "type": "string",
                                  "description": "The alias pattern variable."
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "NotSpecified",
                                    "Extract"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasPatternType",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "value": "NotSpecified",
                                        "description": "NotSpecified is not allowed."
                                      },
                                      {
                                        "value": "Extract",
                                        "description": "Extract is the only allowed value."
                                      }
                                    ]
                                  },
                                  "description": "The type of alias pattern"
                                }
                              }
                            },
                            "defaultMetadata": {
                              "readOnly": true,
                              "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "readOnly": true,
                                  "enum": [
                                    "NotSpecified",
                                    "Any",
                                    "String",
                                    "Object",
                                    "Array",
                                    "Integer",
                                    "Number",
                                    "Boolean"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasPathTokenType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "NotSpecified",
                                        "description": "The token type is not specified."
                                      },
                                      {
                                        "value": "Any",
                                        "description": "The token type can be anything."
                                      },
                                      {
                                        "value": "String",
                                        "description": "The token type is string."
                                      },
                                      {
                                        "value": "Object",
                                        "description": "The token type is object."
                                      },
                                      {
                                        "value": "Array",
                                        "description": "The token type is array."
                                      },
                                      {
                                        "value": "Integer",
                                        "description": "The token type is integer."
                                      },
                                      {
                                        "value": "Number",
                                        "description": "The token type is number."
                                      },
                                      {
                                        "value": "Boolean",
                                        "description": "The token type is boolean."
                                      }
                                    ]
                                  },
                                  "description": "The type of the token that the alias path is referring to."
                                },
                                "attributes": {
                                  "type": "string",
                                  "readOnly": true,
                                  "enum": [
                                    "None",
                                    "Modifiable"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasPathAttributes",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "None",
                                        "description": "The token that the alias path is referring to has no attributes."
                                      },
                                      {
                                        "value": "Modifiable",
                                        "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                      }
                                    ]
                                  },
                                  "description": "The attributes of the token that the alias path is referring to."
                                }
                              }
                            }
                          },
                          "description": "The alias type. "
                        },
                        "description": "The aliases that are supported by this resource type."
                      },
                      "apiVersions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The API version."
                      },
                      "defaultApiVersion": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The default API version."
                      },
                      "zoneMappings": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "location": {
                              "type": "string",
                              "description": "The location of the zone mapping."
                            },
                            "zones": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "apiProfiles": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "properties": {
                            "profileVersion": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The profile version."
                            },
                            "apiVersion": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The API version."
                            }
                          }
                        },
                        "description": "The API profiles for the resource provider."
                      },
                      "capabilities": {
                        "type": "string",
                        "description": "The additional capabilities offered by this resource type."
                      },
                      "properties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "description": "The additional properties. "
                        },
                        "description": "The properties."
                      }
                    },
                    "description": "Resource type managed by the resource provider."
                  },
                  "description": "The collection of provider resource types."
                },
                "providerAuthorizationConsentState": {
                  "type": "string",
                  "enum": [
                    "NotSpecified",
                    "Required",
                    "NotRequired",
                    "Consented"
                  ],
                  "description": "The provider authorization consent state.",
                  "x-ms-enum": {
                    "name": "ProviderAuthorizationConsentState",
                    "modelAsString": true
                  }
                }
              },
              "description": "Resource provider information."
            },
            "description": "The list of resource providers needed for the deployment."
          },
          "dependencies": {
            "readOnly": true,
            "type": "array",
            "items": {
              "properties": {
                "dependsOn": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the dependency."
                      },
                      "resourceType": {
                        "type": "string",
                        "description": "The dependency resource type."
                      },
                      "resourceName": {
                        "type": "string",
                        "description": "The dependency resource name."
                      }
                    },
                    "description": "Deployment dependency information."
                  },
                  "description": "The list of dependencies."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the dependency."
                },
                "resourceType": {
                  "type": "string",
                  "description": "The dependency resource type."
                },
                "resourceName": {
                  "type": "string",
                  "description": "The dependency resource name."
                }
              },
              "description": "Deployment dependency information."
            },
            "description": "The list of deployment dependencies."
          },
          "templateLink": {
            "readOnly": true,
            "description": "The URI referencing the template.",
            "properties": {
              "uri": {
                "type": "string",
                "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
              },
              "id": {
                "type": "string",
                "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
              },
              "relativePath": {
                "type": "string",
                "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
              },
              "contentVersion": {
                "type": "string",
                "description": "If included, must match the ContentVersion in the template."
              },
              "queryString": {
                "type": "string",
                "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
              }
            }
          },
          "parameters": {
            "readOnly": true,
            "type": "object",
            "description": "Deployment parameters. "
          },
          "parametersLink": {
            "readOnly": true,
            "description": "The URI referencing the parameters. ",
            "properties": {
              "uri": {
                "type": "string",
                "description": "The URI of the parameters file."
              },
              "contentVersion": {
                "type": "string",
                "description": "If included, must match the ContentVersion in the template."
              }
            },
            "required": [
              "uri"
            ]
          },
          "mode": {
            "readOnly": true,
            "type": "string",
            "description": "The deployment mode. Possible values are Incremental and Complete.",
            "enum": [
              "Incremental",
              "Complete"
            ],
            "x-ms-enum": {
              "name": "DeploymentMode",
              "modelAsString": false
            }
          },
          "debugSetting": {
            "readOnly": true,
            "description": "The debug setting of the deployment.",
            "properties": {
              "detailLevel": {
                "type": "string",
                "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
              }
            }
          },
          "onErrorDeployment": {
            "readOnly": true,
            "description": "The deployment on error behavior.",
            "properties": {
              "provisioningState": {
                "readOnly": true,
                "type": "string",
                "description": "The state of the provisioning for the on error deployment."
              },
              "type": {
                "type": "string",
                "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                "enum": [
                  "LastSuccessful",
                  "SpecificDeployment"
                ],
                "x-ms-enum": {
                  "name": "OnErrorDeploymentType",
                  "modelAsString": false
                }
              },
              "deploymentName": {
                "type": "string",
                "description": "The deployment to be used on error case."
              }
            }
          },
          "templateHash": {
            "readOnly": true,
            "type": "string",
            "description": "The hash produced for the template."
          },
          "outputResources": {
            "readOnly": true,
            "type": "array",
            "description": "Array of provisioned resources.",
            "items": {
              "description": "Details of provisioned resources.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The fully qualified resource Id."
                }
              }
            }
          },
          "validatedResources": {
            "readOnly": true,
            "type": "array",
            "description": "Array of validated resources.",
            "items": {
              "description": "Details of validated resources.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The fully qualified resource Id."
                }
              }
            }
          },
          "error": {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
          }
        },
        "description": "Deployment properties with additional details."
      },
      "ResourceReference": {
        "description": "The resource Id model.",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "The fully qualified resource Id."
          }
        }
      },
      "OnErrorDeployment": {
        "properties": {
          "type": {
            "type": "string",
            "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
            "enum": [
              "LastSuccessful",
              "SpecificDeployment"
            ],
            "x-ms-enum": {
              "name": "OnErrorDeploymentType",
              "modelAsString": false
            }
          },
          "deploymentName": {
            "type": "string",
            "description": "The deployment to be used on error case."
          }
        },
        "description": "Deployment on error behavior."
      },
      "OnErrorDeploymentExtended": {
        "properties": {
          "provisioningState": {
            "readOnly": true,
            "type": "string",
            "description": "The state of the provisioning for the on error deployment."
          },
          "type": {
            "type": "string",
            "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
            "enum": [
              "LastSuccessful",
              "SpecificDeployment"
            ],
            "x-ms-enum": {
              "name": "OnErrorDeploymentType",
              "modelAsString": false
            }
          },
          "deploymentName": {
            "type": "string",
            "description": "The deployment to be used on error case."
          }
        },
        "description": "Deployment on error behavior with additional details."
      },
      "DeploymentValidateResult": {
        "properties": {
          "error": {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
          },
          "properties": {
            "$ref": "#/components/schemas/DeploymentPropertiesExtended"
          }
        },
        "description": "Information from validate template deployment response."
      },
      "DeploymentExtended": {
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "The ID of the deployment."
          },
          "name": {
            "readOnly": true,
            "type": "string",
            "description": "The name of the deployment."
          },
          "type": {
            "readOnly": true,
            "type": "string",
            "description": "The type of the deployment."
          },
          "location": {
            "type": "string",
            "description": "the location of the deployment."
          },
          "properties": {
            "$ref": "#/components/schemas/DeploymentPropertiesExtended"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Deployment tags"
          }
        },
        "x-ms-azure-resource": true,
        "description": "Deployment information."
      },
      "DeploymentListResult": {
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeploymentExtended"
            },
            "description": "An array of deployments."
          },
          "nextLink": {
            "readOnly": true,
            "type": "string",
            "description": "The URL to use for getting the next set of results."
          }
        },
        "description": "List of deployments."
      },
      "ProviderListResult": {
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The provider ID."
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace of the resource provider."
                },
                "registrationState": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The registration state of the resource provider."
                },
                "registrationPolicy": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The registration policy of the resource provider."
                },
                "resourceTypes": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "resourceType": {
                        "type": "string",
                        "description": "The resource type."
                      },
                      "locations": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The collection of locations where this resource type can be created."
                      },
                      "locationMappings": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "location": {
                              "type": "string",
                              "description": "The azure location."
                            },
                            "type": {
                              "type": "string",
                              "description": "The extended location type."
                            },
                            "extendedLocations": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "The extended locations for the azure location."
                            }
                          },
                          "description": "The provider extended location. "
                        },
                        "description": "The location mappings that are supported by this resource type."
                      },
                      "aliases": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The alias name."
                            },
                            "paths": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path of an alias."
                                  },
                                  "apiVersions": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "The API versions."
                                  },
                                  "pattern": {
                                    "description": "The pattern for an alias path.",
                                    "properties": {
                                      "phrase": {
                                        "type": "string",
                                        "description": "The alias pattern phrase."
                                      },
                                      "variable": {
                                        "type": "string",
                                        "description": "The alias pattern variable."
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "NotSpecified",
                                          "Extract"
                                        ],
                                        "x-ms-enum": {
                                          "name": "AliasPatternType",
                                          "modelAsString": false,
                                          "values": [
                                            {
                                              "value": "NotSpecified",
                                              "description": "NotSpecified is not allowed."
                                            },
                                            {
                                              "value": "Extract",
                                              "description": "Extract is the only allowed value."
                                            }
                                          ]
                                        },
                                        "description": "The type of alias pattern"
                                      }
                                    }
                                  },
                                  "metadata": {
                                    "readOnly": true,
                                    "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "readOnly": true,
                                        "enum": [
                                          "NotSpecified",
                                          "Any",
                                          "String",
                                          "Object",
                                          "Array",
                                          "Integer",
                                          "Number",
                                          "Boolean"
                                        ],
                                        "x-ms-enum": {
                                          "name": "AliasPathTokenType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "NotSpecified",
                                              "description": "The token type is not specified."
                                            },
                                            {
                                              "value": "Any",
                                              "description": "The token type can be anything."
                                            },
                                            {
                                              "value": "String",
                                              "description": "The token type is string."
                                            },
                                            {
                                              "value": "Object",
                                              "description": "The token type is object."
                                            },
                                            {
                                              "value": "Array",
                                              "description": "The token type is array."
                                            },
                                            {
                                              "value": "Integer",
                                              "description": "The token type is integer."
                                            },
                                            {
                                              "value": "Number",
                                              "description": "The token type is number."
                                            },
                                            {
                                              "value": "Boolean",
                                              "description": "The token type is boolean."
                                            }
                                          ]
                                        },
                                        "description": "The type of the token that the alias path is referring to."
                                      },
                                      "attributes": {
                                        "type": "string",
                                        "readOnly": true,
                                        "enum": [
                                          "None",
                                          "Modifiable"
                                        ],
                                        "x-ms-enum": {
                                          "name": "AliasPathAttributes",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "None",
                                              "description": "The token that the alias path is referring to has no attributes."
                                            },
                                            {
                                              "value": "Modifiable",
                                              "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                            }
                                          ]
                                        },
                                        "description": "The attributes of the token that the alias path is referring to."
                                      }
                                    }
                                  }
                                },
                                "description": "The type of the paths for alias."
                              },
                              "description": "The paths for an alias."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the alias.",
                              "enum": [
                                "NotSpecified",
                                "PlainText",
                                "Mask"
                              ],
                              "x-ms-enum": {
                                "name": "AliasType",
                                "modelAsString": false,
                                "values": [
                                  {
                                    "value": "NotSpecified",
                                    "description": "Alias type is unknown (same as not providing alias type)."
                                  },
                                  {
                                    "value": "PlainText",
                                    "description": "Alias value is not secret."
                                  },
                                  {
                                    "value": "Mask",
                                    "description": "Alias value is secret."
                                  }
                                ]
                              }
                            },
                            "defaultPath": {
                              "type": "string",
                              "description": "The default path for an alias."
                            },
                            "defaultPattern": {
                              "description": "The default pattern for an alias.",
                              "properties": {
                                "phrase": {
                                  "type": "string",
                                  "description": "The alias pattern phrase."
                                },
                                "variable": {
                                  "type": "string",
                                  "description": "The alias pattern variable."
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "NotSpecified",
                                    "Extract"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasPatternType",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "value": "NotSpecified",
                                        "description": "NotSpecified is not allowed."
                                      },
                                      {
                                        "value": "Extract",
                                        "description": "Extract is the only allowed value."
                                      }
                                    ]
                                  },
                                  "description": "The type of alias pattern"
                                }
                              }
                            },
                            "defaultMetadata": {
                              "readOnly": true,
                              "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "readOnly": true,
                                  "enum": [
                                    "NotSpecified",
                                    "Any",
                                    "String",
                                    "Object",
                                    "Array",
                                    "Integer",
                                    "Number",
                                    "Boolean"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasPathTokenType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "NotSpecified",
                                        "description": "The token type is not specified."
                                      },
                                      {
                                        "value": "Any",
                                        "description": "The token type can be anything."
                                      },
                                      {
                                        "value": "String",
                                        "description": "The token type is string."
                                      },
                                      {
                                        "value": "Object",
                                        "description": "The token type is object."
                                      },
                                      {
                                        "value": "Array",
                                        "description": "The token type is array."
                                      },
                                      {
                                        "value": "Integer",
                                        "description": "The token type is integer."
                                      },
                                      {
                                        "value": "Number",
                                        "description": "The token type is number."
                                      },
                                      {
                                        "value": "Boolean",
                                        "description": "The token type is boolean."
                                      }
                                    ]
                                  },
                                  "description": "The type of the token that the alias path is referring to."
                                },
                                "attributes": {
                                  "type": "string",
                                  "readOnly": true,
                                  "enum": [
                                    "None",
                                    "Modifiable"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasPathAttributes",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "None",
                                        "description": "The token that the alias path is referring to has no attributes."
                                      },
                                      {
                                        "value": "Modifiable",
                                        "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                      }
                                    ]
                                  },
                                  "description": "The attributes of the token that the alias path is referring to."
                                }
                              }
                            }
                          },
                          "description": "The alias type. "
                        },
                        "description": "The aliases that are supported by this resource type."
                      },
                      "apiVersions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The API version."
                      },
                      "defaultApiVersion": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The default API version."
                      },
                      "zoneMappings": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "location": {
                              "type": "string",
                              "description": "The location of the zone mapping."
                            },
                            "zones": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "apiProfiles": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "properties": {
                            "profileVersion": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The profile version."
                            },
                            "apiVersion": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The API version."
                            }
                          }
                        },
                        "description": "The API profiles for the resource provider."
                      },
                      "capabilities": {
                        "type": "string",
                        "description": "The additional capabilities offered by this resource type."
                      },
                      "properties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "description": "The additional properties. "
                        },
                        "description": "The properties."
                      }
                    },
                    "description": "Resource type managed by the resource provider."
                  },
                  "description": "The collection of provider resource types."
                },
                "providerAuthorizationConsentState": {
                  "type": "string",
                  "enum": [
                    "NotSpecified",
                    "Required",
                    "NotRequired",
                    "Consented"
                  ],
                  "description": "The provider authorization consent state.",
                  "x-ms-enum": {
                    "name": "ProviderAuthorizationConsentState",
                    "modelAsString": true
                  }
                }
              },
              "description": "Resource provider information."
            },
            "description": "An array of resource providers."
          },
          "nextLink": {
            "readOnly": true,
            "type": "string",
            "description": "The URL to use for getting the next set of results."
          }
        },
        "description": "List of resource providers."
      },
      "ProviderResourceTypeListResult": {
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "properties": {
                "resourceType": {
                  "type": "string",
                  "description": "The resource type."
                },
                "locations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The collection of locations where this resource type can be created."
                },
                "locationMappings": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "The azure location."
                      },
                      "type": {
                        "type": "string",
                        "description": "The extended location type."
                      },
                      "extendedLocations": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The extended locations for the azure location."
                      }
                    },
                    "description": "The provider extended location. "
                  },
                  "description": "The location mappings that are supported by this resource type."
                },
                "aliases": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The alias name."
                      },
                      "paths": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "The path of an alias."
                            },
                            "apiVersions": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "The API versions."
                            },
                            "pattern": {
                              "description": "The pattern for an alias path.",
                              "properties": {
                                "phrase": {
                                  "type": "string",
                                  "description": "The alias pattern phrase."
                                },
                                "variable": {
                                  "type": "string",
                                  "description": "The alias pattern variable."
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "NotSpecified",
                                    "Extract"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasPatternType",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "value": "NotSpecified",
                                        "description": "NotSpecified is not allowed."
                                      },
                                      {
                                        "value": "Extract",
                                        "description": "Extract is the only allowed value."
                                      }
                                    ]
                                  },
                                  "description": "The type of alias pattern"
                                }
                              }
                            },
                            "metadata": {
                              "readOnly": true,
                              "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "readOnly": true,
                                  "enum": [
                                    "NotSpecified",
                                    "Any",
                                    "String",
                                    "Object",
                                    "Array",
                                    "Integer",
                                    "Number",
                                    "Boolean"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasPathTokenType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "NotSpecified",
                                        "description": "The token type is not specified."
                                      },
                                      {
                                        "value": "Any",
                                        "description": "The token type can be anything."
                                      },
                                      {
                                        "value": "String",
                                        "description": "The token type is string."
                                      },
                                      {
                                        "value": "Object",
                                        "description": "The token type is object."
                                      },
                                      {
                                        "value": "Array",
                                        "description": "The token type is array."
                                      },
                                      {
                                        "value": "Integer",
                                        "description": "The token type is integer."
                                      },
                                      {
                                        "value": "Number",
                                        "description": "The token type is number."
                                      },
                                      {
                                        "value": "Boolean",
                                        "description": "The token type is boolean."
                                      }
                                    ]
                                  },
                                  "description": "The type of the token that the alias path is referring to."
                                },
                                "attributes": {
                                  "type": "string",
                                  "readOnly": true,
                                  "enum": [
                                    "None",
                                    "Modifiable"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AliasPathAttributes",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "None",
                                        "description": "The token that the alias path is referring to has no attributes."
                                      },
                                      {
                                        "value": "Modifiable",
                                        "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                      }
                                    ]
                                  },
                                  "description": "The attributes of the token that the alias path is referring to."
                                }
                              }
                            }
                          },
                          "description": "The type of the paths for alias."
                        },
                        "description": "The paths for an alias."
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the alias.",
                        "enum": [
                          "NotSpecified",
                          "PlainText",
                          "Mask"
                        ],
                        "x-ms-enum": {
                          "name": "AliasType",
                          "modelAsString": false,
                          "values": [
                            {
                              "value": "NotSpecified",
                              "description": "Alias type is unknown (same as not providing alias type)."
                            },
                            {
                              "value": "PlainText",
                              "description": "Alias value is not secret."
                            },
                            {
                              "value": "Mask",
                              "description": "Alias value is secret."
                            }
                          ]
                        }
                      },
                      "defaultPath": {
                        "type": "string",
                        "description": "The default path for an alias."
                      },
                      "defaultPattern": {
                        "description": "The default pattern for an alias.",
                        "properties": {
                          "phrase": {
                            "type": "string",
                            "description": "The alias pattern phrase."
                          },
                          "variable": {
                            "type": "string",
                            "description": "The alias pattern variable."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Extract"
                            ],
                            "x-ms-enum": {
                              "name": "AliasPatternType",
                              "modelAsString": false,
                              "values": [
                                {
                                  "value": "NotSpecified",
                                  "description": "NotSpecified is not allowed."
                                },
                                {
                                  "value": "Extract",
                                  "description": "Extract is the only allowed value."
                                }
                              ]
                            },
                            "description": "The type of alias pattern"
                          }
                        }
                      },
                      "defaultMetadata": {
                        "readOnly": true,
                        "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                        "properties": {
                          "type": {
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "NotSpecified",
                              "Any",
                              "String",
                              "Object",
                              "Array",
                              "Integer",
                              "Number",
                              "Boolean"
                            ],
                            "x-ms-enum": {
                              "name": "AliasPathTokenType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "NotSpecified",
                                  "description": "The token type is not specified."
                                },
                                {
                                  "value": "Any",
                                  "description": "The token type can be anything."
                                },
                                {
                                  "value": "String",
                                  "description": "The token type is string."
                                },
                                {
                                  "value": "Object",
                                  "description": "The token type is object."
                                },
                                {
                                  "value": "Array",
                                  "description": "The token type is array."
                                },
                                {
                                  "value": "Integer",
                                  "description": "The token type is integer."
                                },
                                {
                                  "value": "Number",
                                  "description": "The token type is number."
                                },
                                {
                                  "value": "Boolean",
                                  "description": "The token type is boolean."
                                }
                              ]
                            },
                            "description": "The type of the token that the alias path is referring to."
                          },
                          "attributes": {
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "None",
                              "Modifiable"
                            ],
                            "x-ms-enum": {
                              "name": "AliasPathAttributes",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "None",
                                  "description": "The token that the alias path is referring to has no attributes."
                                },
                                {
                                  "value": "Modifiable",
                                  "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                }
                              ]
                            },
                            "description": "The attributes of the token that the alias path is referring to."
                          }
                        }
                      }
                    },
                    "description": "The alias type. "
                  },
                  "description": "The aliases that are supported by this resource type."
                },
                "apiVersions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The API version."
                },
                "defaultApiVersion": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The default API version."
                },
                "zoneMappings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "The location of the zone mapping."
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "apiProfiles": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "properties": {
                      "profileVersion": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The profile version."
                      },
                      "apiVersion": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The API version."
                      }
                    }
                  },
                  "description": "The API profiles for the resource provider."
                },
                "capabilities": {
                  "type": "string",
                  "description": "The additional capabilities offered by this resource type."
                },
                "properties": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "description": "The additional properties. "
                  },
                  "description": "The properties."
                }
              },
              "description": "Resource type managed by the resource provider."
            },
            "description": "An array of resource types."
          },
          "nextLink": {
            "readOnly": true,
            "type": "string",
            "description": "The URL to use for getting the next set of results."
          }
        },
        "description": "List of resource types of a resource provider."
      },
      "GenericResource": {
        "properties": {
          "plan": {
            "description": "The plan of the resource.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The plan ID."
              },
              "publisher": {
                "type": "string",
                "description": "The publisher ID."
              },
              "product": {
                "type": "string",
                "description": "The offer ID."
              },
              "promotionCode": {
                "type": "string",
                "description": "The promotion code."
              },
              "version": {
                "type": "string",
                "description": "The plan's version."
              }
            }
          },
          "properties": {
            "type": "object",
            "description": "The resource properties."
          },
          "kind": {
            "type": "string",
            "description": "The kind of the resource.",
            "pattern": "^[-\\w\\._,\\(\\)]+$"
          },
          "managedBy": {
            "type": "string",
            "description": "ID of the resource that manages this resource."
          },
          "sku": {
            "description": "The SKU of the resource.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The SKU name."
              },
              "tier": {
                "type": "string",
                "description": "The SKU tier."
              },
              "size": {
                "type": "string",
                "description": "The SKU size."
              },
              "family": {
                "type": "string",
                "description": "The SKU family."
              },
              "model": {
                "type": "string",
                "description": "The SKU model."
              },
              "capacity": {
                "type": "integer",
                "format": "int32",
                "description": "The SKU capacity."
              }
            }
          },
          "identity": {
            "description": "The identity of the resource.",
            "properties": {
              "principalId": {
                "readOnly": true,
                "type": "string",
                "description": "The principal ID of resource identity."
              },
              "tenantId": {
                "readOnly": true,
                "type": "string",
                "description": "The tenant ID of resource."
              },
              "type": {
                "type": "string",
                "description": "The identity type.",
                "enum": [
                  "SystemAssigned",
                  "UserAssigned",
                  "SystemAssigned, UserAssigned",
                  "None"
                ],
                "x-ms-enum": {
                  "name": "ResourceIdentityType",
                  "modelAsString": false
                }
              },
              "userAssignedIdentities": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal id of user assigned identity."
                    },
                    "clientId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The client id of user assigned identity."
                    }
                  }
                },
                "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
              }
            }
          }
        },
        "allOf": [
          {
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type"
              },
              "location": {
                "type": "string",
                "description": "Resource location"
              },
              "extendedLocation": {
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "Resource extended location.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "EdgeZone"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true
                    },
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "description": "The extended location name."
                  }
                }
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Resource tags"
              }
            },
            "x-ms-azure-resource": true,
            "description": "Specified resource."
          }
        ],
        "description": "Resource information."
      },
      "ExtendedLocation": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "EdgeZone"
            ],
            "x-ms-enum": {
              "name": "ExtendedLocationType",
              "modelAsString": true
            },
            "description": "The extended location type."
          },
          "name": {
            "type": "string",
            "description": "The extended location name."
          }
        },
        "description": "Resource extended location."
      },
      "GenericResourceExpanded": {
        "properties": {
          "createdTime": {
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "description": "The created time of the resource. This is only present if requested via the $expand query parameter."
          },
          "changedTime": {
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "description": "The changed time of the resource. This is only present if requested via the $expand query parameter."
          },
          "provisioningState": {
            "readOnly": true,
            "type": "string",
            "description": "The provisioning state of the resource. This is only present if requested via the $expand query parameter."
          }
        },
        "allOf": [
          {
            "properties": {
              "plan": {
                "description": "The plan of the resource.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The plan ID."
                  },
                  "publisher": {
                    "type": "string",
                    "description": "The publisher ID."
                  },
                  "product": {
                    "type": "string",
                    "description": "The offer ID."
                  },
                  "promotionCode": {
                    "type": "string",
                    "description": "The promotion code."
                  },
                  "version": {
                    "type": "string",
                    "description": "The plan's version."
                  }
                }
              },
              "properties": {
                "type": "object",
                "description": "The resource properties."
              },
              "kind": {
                "type": "string",
                "description": "The kind of the resource.",
                "pattern": "^[-\\w\\._,\\(\\)]+$"
              },
              "managedBy": {
                "type": "string",
                "description": "ID of the resource that manages this resource."
              },
              "sku": {
                "description": "The SKU of the resource.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The SKU name."
                  },
                  "tier": {
                    "type": "string",
                    "description": "The SKU tier."
                  },
                  "size": {
                    "type": "string",
                    "description": "The SKU size."
                  },
                  "family": {
                    "type": "string",
                    "description": "The SKU family."
                  },
                  "model": {
                    "type": "string",
                    "description": "The SKU model."
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The SKU capacity."
                  }
                }
              },
              "identity": {
                "description": "The identity of the resource.",
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal ID of resource identity."
                  },
                  "tenantId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The tenant ID of resource."
                  },
                  "type": {
                    "type": "string",
                    "description": "The identity type.",
                    "enum": [
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned",
                      "None"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceIdentityType",
                      "modelAsString": false
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                      "properties": {
                        "principalId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The principal id of user assigned identity."
                        },
                        "clientId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The client id of user assigned identity."
                        }
                      }
                    },
                    "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                  }
                }
              }
            },
            "allOf": [
              {
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Resource ID"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Resource name"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Resource type"
                  },
                  "location": {
                    "type": "string",
                    "description": "Resource location"
                  },
                  "extendedLocation": {
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "Resource extended location.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "EdgeZone"
                        ],
                        "x-ms-enum": {
                          "name": "ExtendedLocationType",
                          "modelAsString": true
                        },
                        "description": "The extended location type."
                      },
                      "name": {
                        "type": "string",
                        "description": "The extended location name."
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Resource tags"
                  }
                },
                "x-ms-azure-resource": true,
                "description": "Specified resource."
              }
            ],
            "description": "Resource information."
          }
        ],
        "description": "Resource information."
      },
      "Plan": {
        "properties": {
          "name": {
            "type": "string",
            "description": "The plan ID."
          },
          "publisher": {
            "type": "string",
            "description": "The publisher ID."
          },
          "product": {
            "type": "string",
            "description": "The offer ID."
          },
          "promotionCode": {
            "type": "string",
            "description": "The promotion code."
          },
          "version": {
            "type": "string",
            "description": "The plan's version."
          }
        },
        "description": "Plan for the resource."
      },
      "Sku": {
        "properties": {
          "name": {
            "type": "string",
            "description": "The SKU name."
          },
          "tier": {
            "type": "string",
            "description": "The SKU tier."
          },
          "size": {
            "type": "string",
            "description": "The SKU size."
          },
          "family": {
            "type": "string",
            "description": "The SKU family."
          },
          "model": {
            "type": "string",
            "description": "The SKU model."
          },
          "capacity": {
            "type": "integer",
            "format": "int32",
            "description": "The SKU capacity."
          }
        },
        "description": "SKU for the resource."
      },
      "Identity": {
        "properties": {
          "principalId": {
            "readOnly": true,
            "type": "string",
            "description": "The principal ID of resource identity."
          },
          "tenantId": {
            "readOnly": true,
            "type": "string",
            "description": "The tenant ID of resource."
          },
          "type": {
            "type": "string",
            "description": "The identity type.",
            "enum": [
              "SystemAssigned",
              "UserAssigned",
              "SystemAssigned, UserAssigned",
              "None"
            ],
            "x-ms-enum": {
              "name": "ResourceIdentityType",
              "modelAsString": false
            }
          },
          "userAssignedIdentities": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
              "properties": {
                "principalId": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The principal id of user assigned identity."
                },
                "clientId": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The client id of user assigned identity."
                }
              }
            },
            "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
          }
        },
        "description": "Identity for the resource."
      },
      "ResourceListResult": {
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "properties": {
                "createdTime": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "The created time of the resource. This is only present if requested via the $expand query parameter."
                },
                "changedTime": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "The changed time of the resource. This is only present if requested via the $expand query parameter."
                },
                "provisioningState": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The provisioning state of the resource. This is only present if requested via the $expand query parameter."
                }
              },
              "allOf": [
                {
                  "properties": {
                    "plan": {
                      "description": "The plan of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The plan ID."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher ID."
                        },
                        "product": {
                          "type": "string",
                          "description": "The offer ID."
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "The promotion code."
                        },
                        "version": {
                          "type": "string",
                          "description": "The plan's version."
                        }
                      }
                    },
                    "properties": {
                      "type": "object",
                      "description": "The resource properties."
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of the resource.",
                      "pattern": "^[-\\w\\._,\\(\\)]+$"
                    },
                    "managedBy": {
                      "type": "string",
                      "description": "ID of the resource that manages this resource."
                    },
                    "sku": {
                      "description": "The SKU of the resource.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The SKU name."
                        },
                        "tier": {
                          "type": "string",
                          "description": "The SKU tier."
                        },
                        "size": {
                          "type": "string",
                          "description": "The SKU size."
                        },
                        "family": {
                          "type": "string",
                          "description": "The SKU family."
                        },
                        "model": {
                          "type": "string",
                          "description": "The SKU model."
                        },
                        "capacity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The SKU capacity."
                        }
                      }
                    },
                    "identity": {
                      "description": "The identity of the resource.",
                      "properties": {
                        "principalId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The principal ID of resource identity."
                        },
                        "tenantId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The tenant ID of resource."
                        },
                        "type": {
                          "type": "string",
                          "description": "The identity type.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned",
                            "SystemAssigned, UserAssigned",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceIdentityType",
                            "modelAsString": false
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "x-ms-client-name": "IdentityUserAssignedIdentitiesValue",
                            "properties": {
                              "principalId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The principal id of user assigned identity."
                              },
                              "clientId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The client id of user assigned identity."
                              }
                            }
                          },
                          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource ID"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource name"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Resource type"
                        },
                        "location": {
                          "type": "string",
                          "description": "Resource location"
                        },
                        "extendedLocation": {
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "description": "Resource extended location.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EdgeZone"
                              ],
                              "x-ms-enum": {
                                "name": "ExtendedLocationType",
                                "modelAsString": true
                              },
                              "description": "The extended location type."
                            },
                            "name": {
                              "type": "string",
                              "description": "The extended location name."
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Resource tags"
                        }
                      },
                      "x-ms-azure-resource": true,
                      "description": "Specified resource."
                    }
                  ],
                  "description": "Resource information."
                }
              ],
              "description": "Resource information."
            },
            "description": "An array of resources."
          },
          "nextLink": {
            "readOnly": true,
            "type": "string",
            "description": "The URL to use for getting the next set of results."
          }
        },
        "description": "List of resource groups."
      },
      "ResourceGroup": {
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "The ID of the resource group."
          },
          "name": {
            "readOnly": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          "type": {
            "readOnly": true,
            "type": "string",
            "description": "The type of the resource group."
          },
          "properties": {
            "description": "The resource group properties.",
            "properties": {
              "provisioningState": {
                "readOnly": true,
                "type": "string",
                "description": "The provisioning state. "
              }
            }
          },
          "location": {
            "type": "string",
            "description": "The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations."
          },
          "managedBy": {
            "type": "string",
            "description": "The ID of the resource that manages this resource group."
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "The additional properties. "
            },
            "description": "The tags attached to the resource group."
          }
        },
        "required": [
          "location"
        ],
        "x-ms-azure-resource": true,
        "description": "Resource group information."
      },
      "ResourceGroupPatchable": {
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "properties": {
            "description": "The resource group properties.",
            "properties": {
              "provisioningState": {
                "readOnly": true,
                "type": "string",
                "description": "The provisioning state. "
              }
            }
          },
          "managedBy": {
            "type": "string",
            "description": "The ID of the resource that manages this resource group."
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "The additional properties. "
            },
            "description": "The tags attached to the resource group."
          }
        },
        "description": "Resource group information."
      },
      "ResourceGroupProperties": {
        "properties": {
          "provisioningState": {
            "readOnly": true,
            "type": "string",
            "description": "The provisioning state. "
          }
        },
        "description": "The resource group properties."
      },
      "ResourceGroupListResult": {
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The ID of the resource group."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource group."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource group."
                },
                "properties": {
                  "description": "The resource group properties.",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations."
                },
                "managedBy": {
                  "type": "string",
                  "description": "The ID of the resource that manages this resource group."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "description": "The additional properties. "
                  },
                  "description": "The tags attached to the resource group."
                }
              },
              "required": [
                "location"
              ],
              "x-ms-azure-resource": true,
              "description": "Resource group information."
            },
            "description": "An array of resource groups."
          },
          "nextLink": {
            "readOnly": true,
            "type": "string",
            "description": "The URL to use for getting the next set of results."
          }
        },
        "description": "List of resource groups."
      },
      "ResourcesMoveInfo": {
        "properties": {
          "resources": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the resources."
          },
          "targetResourceGroup": {
            "type": "string",
            "description": "The target resource group."
          }
        },
        "description": "Parameters of move resources."
      },
      "ExportTemplateRequest": {
        "properties": {
          "resources": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the resources to filter the export by. To export all resources, supply an array with single entry '*'."
          },
          "options": {
            "type": "string",
            "description": "The export template options. A CSV-formatted list containing zero or more of the following: 'IncludeParameterDefaultValue', 'IncludeComments', 'SkipResourceNameParameterization', 'SkipAllParameterization'"
          }
        },
        "description": "Export resource group template request parameters."
      },
      "TagCount": {
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of count."
          },
          "value": {
            "type": "integer",
            "description": "Value of count."
          }
        },
        "description": "Tag count."
      },
      "TagValue": {
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "The tag value ID."
          },
          "tagValue": {
            "type": "string",
            "description": "The tag value."
          },
          "count": {
            "description": "The tag value count.",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of count."
              },
              "value": {
                "type": "integer",
                "description": "Value of count."
              }
            }
          }
        },
        "x-ms-azure-resource": true,
        "description": "Tag information."
      },
      "TagDetails": {
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "The tag name ID."
          },
          "tagName": {
            "type": "string",
            "description": "The tag name."
          },
          "count": {
            "description": "The total number of resources that use the resource tag. When a tag is initially created and has no associated resources, the value is 0.",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of count."
              },
              "value": {
                "type": "integer",
                "description": "Value of count."
              }
            }
          },
          "values": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The tag value ID."
                },
                "tagValue": {
                  "type": "string",
                  "description": "The tag value."
                },
                "count": {
                  "description": "The tag value count.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of count."
                    },
                    "value": {
                      "type": "integer",
                      "description": "Value of count."
                    }
                  }
                }
              },
              "x-ms-azure-resource": true,
              "description": "Tag information."
            },
            "description": "The list of tag values."
          }
        },
        "x-ms-azure-resource": true,
        "description": "Tag details."
      },
      "TagsListResult": {
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The tag name ID."
                },
                "tagName": {
                  "type": "string",
                  "description": "The tag name."
                },
                "count": {
                  "description": "The total number of resources that use the resource tag. When a tag is initially created and has no associated resources, the value is 0.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of count."
                    },
                    "value": {
                      "type": "integer",
                      "description": "Value of count."
                    }
                  }
                },
                "values": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The tag value ID."
                      },
                      "tagValue": {
                        "type": "string",
                        "description": "The tag value."
                      },
                      "count": {
                        "description": "The tag value count.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of count."
                          },
                          "value": {
                            "type": "integer",
                            "description": "Value of count."
                          }
                        }
                      }
                    },
                    "x-ms-azure-resource": true,
                    "description": "Tag information."
                  },
                  "description": "The list of tag values."
                }
              },
              "x-ms-azure-resource": true,
              "description": "Tag details."
            },
            "description": "An array of tags."
          },
          "nextLink": {
            "readOnly": true,
            "type": "string",
            "description": "The URL to use for getting the next set of results."
          }
        },
        "description": "List of subscription tags."
      },
      "TargetResource": {
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the resource."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the resource."
          },
          "resourceType": {
            "type": "string",
            "description": "The type of the resource."
          }
        },
        "description": "Target resource."
      },
      "HttpMessage": {
        "properties": {
          "content": {
            "type": "object",
            "description": "HTTP message content."
          }
        },
        "description": "HTTP message."
      },
      "DeploymentOperationProperties": {
        "properties": {
          "provisioningOperation": {
            "readOnly": true,
            "type": "string",
            "description": "The name of the current provisioning operation.",
            "enum": [
              "NotSpecified",
              "Create",
              "Delete",
              "Waiting",
              "AzureAsyncOperationWaiting",
              "ResourceCacheWaiting",
              "Action",
              "Read",
              "EvaluateDeploymentOutput",
              "DeploymentCleanup"
            ],
            "x-ms-enum": {
              "name": "ProvisioningOperation",
              "modelAsString": false,
              "values": [
                {
                  "value": "NotSpecified",
                  "description": "The provisioning operation is not specified."
                },
                {
                  "value": "Create",
                  "description": "The provisioning operation is create."
                },
                {
                  "value": "Delete",
                  "description": "The provisioning operation is delete."
                },
                {
                  "value": "Waiting",
                  "description": "The provisioning operation is waiting."
                },
                {
                  "value": "AzureAsyncOperationWaiting",
                  "description": "The provisioning operation is waiting Azure async operation."
                },
                {
                  "value": "ResourceCacheWaiting",
                  "description": "The provisioning operation is waiting for resource cache."
                },
                {
                  "value": "Action",
                  "description": "The provisioning operation is action."
                },
                {
                  "value": "Read",
                  "description": "The provisioning operation is read."
                },
                {
                  "value": "EvaluateDeploymentOutput",
                  "description": "The provisioning operation is evaluate output."
                },
                {
                  "value": "DeploymentCleanup",
                  "description": "The provisioning operation is cleanup. This operation is part of the 'complete' mode deployment."
                }
              ]
            }
          },
          "provisioningState": {
            "readOnly": true,
            "type": "string",
            "description": "The state of the provisioning."
          },
          "timestamp": {
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "description": "The date and time of the operation."
          },
          "duration": {
            "readOnly": true,
            "type": "string",
            "description": "The duration of the operation."
          },
          "serviceRequestId": {
            "readOnly": true,
            "type": "string",
            "description": "Deployment operation service request id."
          },
          "statusCode": {
            "readOnly": true,
            "type": "string",
            "description": "Operation status code from the resource provider. This property may not be set if a response has not yet been received."
          },
          "statusMessage": {
            "$ref": "#/components/schemas/StatusMessage"
          },
          "targetResource": {
            "readOnly": true,
            "description": "The target resource.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the resource."
              },
              "resourceName": {
                "type": "string",
                "description": "The name of the resource."
              },
              "resourceType": {
                "type": "string",
                "description": "The type of the resource."
              }
            }
          },
          "request": {
            "readOnly": true,
            "description": "The HTTP request message.",
            "properties": {
              "content": {
                "type": "object",
                "description": "HTTP message content."
              }
            }
          },
          "response": {
            "readOnly": true,
            "description": "The HTTP response message.",
            "properties": {
              "content": {
                "type": "object",
                "description": "HTTP message content."
              }
            }
          }
        },
        "description": "Deployment operation properties."
      },
      "DeploymentOperation": {
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "Full deployment operation ID."
          },
          "operationId": {
            "readOnly": true,
            "type": "string",
            "description": "Deployment operation ID."
          },
          "properties": {
            "$ref": "#/components/schemas/DeploymentOperationProperties"
          }
        },
        "description": "Deployment operation information."
      },
      "DeploymentOperationsListResult": {
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeploymentOperation"
            },
            "description": "An array of deployment operations."
          },
          "nextLink": {
            "readOnly": true,
            "type": "string",
            "description": "The URL to use for getting the next set of results."
          }
        },
        "description": "List of deployment operations."
      },
      "ResourceProviderOperationDisplayProperties": {
        "properties": {
          "publisher": {
            "type": "string",
            "description": "Operation description."
          },
          "provider": {
            "type": "string",
            "description": "Operation provider."
          },
          "resource": {
            "type": "string",
            "description": "Operation resource."
          },
          "operation": {
            "type": "string",
            "description": "Resource provider operation."
          },
          "description": {
            "type": "string",
            "description": "Operation description."
          }
        },
        "description": "Resource provider operation's display properties."
      },
      "Resource": {
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "Resource ID"
          },
          "name": {
            "readOnly": true,
            "type": "string",
            "description": "Resource name"
          },
          "type": {
            "readOnly": true,
            "type": "string",
            "description": "Resource type"
          },
          "location": {
            "type": "string",
            "description": "Resource location"
          },
          "extendedLocation": {
            "x-ms-mutability": [
              "read",
              "create"
            ],
            "description": "Resource extended location.",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "EdgeZone"
                ],
                "x-ms-enum": {
                  "name": "ExtendedLocationType",
                  "modelAsString": true
                },
                "description": "The extended location type."
              },
              "name": {
                "type": "string",
                "description": "The extended location name."
              }
            }
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags"
          }
        },
        "x-ms-azure-resource": true,
        "description": "Specified resource."
      },
      "SubResource": {
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource ID"
          }
        },
        "x-ms-azure-resource": true,
        "description": "Sub-resource."
      },
      "ResourceGroupExportResult": {
        "properties": {
          "template": {
            "type": "object",
            "description": "The template content."
          },
          "error": {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
          }
        },
        "description": "Resource group export result."
      },
      "Operation": {
        "description": "Microsoft.Resources operation",
        "type": "object",
        "properties": {
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}",
            "type": "string"
          },
          "display": {
            "description": "The object that represents the operation.",
            "properties": {
              "provider": {
                "description": "Service provider: Microsoft.Resources",
                "type": "string"
              },
              "resource": {
                "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
                "type": "string"
              },
              "operation": {
                "description": "Operation type: Read, write, delete, etc.",
                "type": "string"
              },
              "description": {
                "description": "Description of the operation.",
                "type": "string"
              }
            }
          }
        }
      },
      "OperationListResult": {
        "description": "Result of the request to list Microsoft.Resources operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "description": "Microsoft.Resources operation",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Operation name: {provider}/{resource}/{operation}",
                  "type": "string"
                },
                "display": {
                  "description": "The object that represents the operation.",
                  "properties": {
                    "provider": {
                      "description": "Service provider: Microsoft.Resources",
                      "type": "string"
                    },
                    "resource": {
                      "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
                      "type": "string"
                    },
                    "operation": {
                      "description": "Operation type: Read, write, delete, etc.",
                      "type": "string"
                    },
                    "description": {
                      "description": "Description of the operation.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "List of Microsoft.Resources operations."
          },
          "nextLink": {
            "type": "string",
            "description": "URL to get the next set of operation list results if there are any."
          }
        }
      },
      "TemplateHashResult": {
        "description": "Result of the request to calculate template hash. It contains a string of minified template and its hash.",
        "properties": {
          "minifiedTemplate": {
            "type": "string",
            "description": "The minified template string."
          },
          "templateHash": {
            "type": "string",
            "description": "The template hash."
          }
        }
      },
      "WhatIfPropertyChange": {
        "required": [
          "path",
          "propertyChangeType"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "The path of the property."
          },
          "propertyChangeType": {
            "type": "string",
            "description": "The type of property change.",
            "enum": [
              "Create",
              "Delete",
              "Modify",
              "Array",
              "NoEffect"
            ],
            "x-ms-enum": {
              "name": "PropertyChangeType",
              "modelAsString": false,
              "values": [
                {
                  "value": "Create",
                  "description": "The property does not exist in the current state but is present in the desired state. The property will be created when the deployment is executed."
                },
                {
                  "value": "Delete",
                  "description": "The property exists in the current state and is missing from the desired state. It will be deleted when the deployment is executed."
                },
                {
                  "value": "Modify",
                  "description": "The property exists in both current and desired state and is different. The value of the property will change when the deployment is executed."
                },
                {
                  "value": "Array",
                  "description": "The property is an array and contains nested changes."
                },
                {
                  "value": "NoEffect",
                  "description": "The property will not be set or updated."
                }
              ]
            }
          },
          "before": {
            "type": "object",
            "description": "The value of the property before the deployment is executed."
          },
          "after": {
            "type": "object",
            "description": "The value of the property after the deployment is executed."
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhatIfPropertyChange"
            },
            "description": "Nested property changes."
          }
        },
        "description": "The predicted change to the resource property."
      },
      "WhatIfChange": {
        "description": "Information about a single resource change predicted by What-If operation.",
        "required": [
          "resourceId",
          "changeType"
        ],
        "properties": {
          "resourceId": {
            "type": "string",
            "description": "Resource ID"
          },
          "changeType": {
            "type": "string",
            "description": "Type of change that will be made to the resource when the deployment is executed.",
            "enum": [
              "Create",
              "Delete",
              "Ignore",
              "Deploy",
              "NoChange",
              "Modify",
              "Unsupported"
            ],
            "x-ms-enum": {
              "name": "ChangeType",
              "modelAsString": false,
              "values": [
                {
                  "value": "Create",
                  "description": "The resource does not exist in the current state but is present in the desired state. The resource will be created when the deployment is executed."
                },
                {
                  "value": "Delete",
                  "description": "The resource exists in the current state and is missing from the desired state. The resource will be deleted when the deployment is executed."
                },
                {
                  "value": "Ignore",
                  "description": "The resource exists in the current state and is missing from the desired state. The resource will not be deployed or modified when the deployment is executed."
                },
                {
                  "value": "Deploy",
                  "description": "The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource may or may not change."
                },
                {
                  "value": "NoChange",
                  "description": "The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource will not change."
                },
                {
                  "value": "Modify",
                  "description": "The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource will change."
                },
                {
                  "value": "Unsupported",
                  "description": "The resource is not supported by What-If."
                }
              ]
            }
          },
          "unsupportedReason": {
            "type": "string",
            "description": "The explanation about why the resource is unsupported by What-If."
          },
          "before": {
            "type": "object",
            "description": "The snapshot of the resource before the deployment is executed."
          },
          "after": {
            "type": "object",
            "description": "The predicted snapshot of the resource after the deployment is executed."
          },
          "delta": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhatIfPropertyChange"
            },
            "description": "The predicted changes to resource properties."
          }
        }
      },
      "WhatIfOperationProperties": {
        "description": "Deployment operation properties.",
        "properties": {
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhatIfChange"
            },
            "description": "List of resource changes predicted by What-If operation."
          }
        }
      },
      "WhatIfOperationResult": {
        "description": "Result of the What-If operation. Contains a list of predicted changes and a URL link to get to the next set of results.",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the What-If operation."
          },
          "properties": {
            "$ref": "#/components/schemas/WhatIfOperationProperties"
          },
          "error": {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "Tags": {
        "description": "A dictionary of name and value pairs.",
        "properties": {
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "The tag value."
            }
          }
        }
      },
      "TagsPatchResource": {
        "type": "object",
        "description": "Wrapper resource for tags patch API request only.",
        "properties": {
          "operation": {
            "type": "string",
            "description": "The operation type for the patch API.",
            "enum": [
              "Replace",
              "Merge",
              "Delete"
            ],
            "x-ms-enum": {
              "name": "tagsPatchOperation",
              "modelAsString": true,
              "values": [
                {
                  "value": "Replace",
                  "description": "The 'replace' option replaces the entire set of existing tags with a new set."
                },
                {
                  "value": "Merge",
                  "description": "The 'merge' option allows adding tags with new names and updating the values of tags with existing names."
                },
                {
                  "value": "Delete",
                  "description": "The 'delete' option allows selectively deleting tags based on given names or name/value pairs."
                }
              ]
            }
          },
          "properties": {
            "description": "The set of tags.",
            "properties": {
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "description": "The tag value."
                }
              }
            }
          }
        }
      },
      "TagsResource": {
        "type": "object",
        "description": "Wrapper resource for tags API requests and responses.",
        "required": [
          "properties"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "The ID of the tags wrapper resource."
          },
          "name": {
            "readOnly": true,
            "type": "string",
            "description": "The name of the tags wrapper resource."
          },
          "type": {
            "readOnly": true,
            "type": "string",
            "description": "The type of the tags wrapper resource."
          },
          "properties": {
            "description": "The set of tags.",
            "properties": {
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "description": "The tag value."
                }
              }
            }
          }
        },
        "x-ms-azure-resource": true
      },
      "Permission": {
        "type": "object",
        "readOnly": true,
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed actions."
          },
          "notActions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Denied actions."
          },
          "dataActions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed Data actions."
          },
          "notDataActions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Denied Data actions."
          }
        },
        "description": "Role definition permissions."
      },
      "RoleDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The role definition ID."
          },
          "name": {
            "type": "string",
            "description": "The role definition name."
          },
          "isServiceRole": {
            "type": "boolean",
            "description": "If this is a service role."
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "object",
              "readOnly": true,
              "properties": {
                "actions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Allowed actions."
                },
                "notActions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Denied actions."
                },
                "dataActions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Allowed Data actions."
                },
                "notDataActions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Denied Data actions."
                }
              },
              "description": "Role definition permissions."
            },
            "description": "Role definition permissions."
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Role definition assignable scopes."
          }
        },
        "description": "Role definition properties."
      },
      "ProviderPermission": {
        "type": "object",
        "description": "The provider permission",
        "properties": {
          "applicationId": {
            "type": "string",
            "description": "The application id."
          },
          "roleDefinition": {
            "description": "Role definition properties.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The role definition ID."
              },
              "name": {
                "type": "string",
                "description": "The role definition name."
              },
              "isServiceRole": {
                "type": "boolean",
                "description": "If this is a service role."
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Allowed actions."
                    },
                    "notActions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Denied actions."
                    },
                    "dataActions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Allowed Data actions."
                    },
                    "notDataActions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Denied Data actions."
                    }
                  },
                  "description": "Role definition permissions."
                },
                "description": "Role definition permissions."
              },
              "scopes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Role definition assignable scopes."
              }
            }
          },
          "managedByRoleDefinition": {
            "description": "Role definition properties.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The role definition ID."
              },
              "name": {
                "type": "string",
                "description": "The role definition name."
              },
              "isServiceRole": {
                "type": "boolean",
                "description": "If this is a service role."
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Allowed actions."
                    },
                    "notActions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Denied actions."
                    },
                    "dataActions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Allowed Data actions."
                    },
                    "notDataActions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Denied Data actions."
                    }
                  },
                  "description": "Role definition permissions."
                },
                "description": "Role definition permissions."
              },
              "scopes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Role definition assignable scopes."
              }
            }
          },
          "providerAuthorizationConsentState": {
            "type": "string",
            "enum": [
              "NotSpecified",
              "Required",
              "NotRequired",
              "Consented"
            ],
            "description": "The provider authorization consent state.",
            "x-ms-enum": {
              "name": "ProviderAuthorizationConsentState",
              "modelAsString": true
            }
          }
        }
      },
      "ProviderPermissionListResult": {
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "The provider permission",
              "properties": {
                "applicationId": {
                  "type": "string",
                  "description": "The application id."
                },
                "roleDefinition": {
                  "description": "Role definition properties.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The role definition ID."
                    },
                    "name": {
                      "type": "string",
                      "description": "The role definition name."
                    },
                    "isServiceRole": {
                      "type": "boolean",
                      "description": "If this is a service role."
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Allowed actions."
                          },
                          "notActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Denied actions."
                          },
                          "dataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Allowed Data actions."
                          },
                          "notDataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Denied Data actions."
                          }
                        },
                        "description": "Role definition permissions."
                      },
                      "description": "Role definition permissions."
                    },
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Role definition assignable scopes."
                    }
                  }
                },
                "managedByRoleDefinition": {
                  "description": "Role definition properties.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The role definition ID."
                    },
                    "name": {
                      "type": "string",
                      "description": "The role definition name."
                    },
                    "isServiceRole": {
                      "type": "boolean",
                      "description": "If this is a service role."
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Allowed actions."
                          },
                          "notActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Denied actions."
                          },
                          "dataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Allowed Data actions."
                          },
                          "notDataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Denied Data actions."
                          }
                        },
                        "description": "Role definition permissions."
                      },
                      "description": "Role definition permissions."
                    },
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Role definition assignable scopes."
                    }
                  }
                },
                "providerAuthorizationConsentState": {
                  "type": "string",
                  "enum": [
                    "NotSpecified",
                    "Required",
                    "NotRequired",
                    "Consented"
                  ],
                  "description": "The provider authorization consent state.",
                  "x-ms-enum": {
                    "name": "ProviderAuthorizationConsentState",
                    "modelAsString": true
                  }
                }
              }
            },
            "description": "An array of provider permissions."
          },
          "nextLink": {
            "readOnly": true,
            "type": "string",
            "description": "The URL to use for getting the next set of results."
          }
        },
        "description": "List of provider permissions."
      },
      "ProviderConsentDefinition": {
        "type": "object",
        "description": "The provider consent.",
        "properties": {
          "consentToAuthorization": {
            "type": "boolean",
            "description": "A value indicating whether authorization is consented or not."
          }
        }
      },
      "ProviderRegistrationRequest": {
        "type": "object",
        "description": "The provider registration definition.",
        "properties": {
          "thirdPartyProviderConsent": {
            "description": "The provider consent.",
            "type": "object",
            "properties": {
              "consentToAuthorization": {
                "type": "boolean",
                "description": "A value indicating whether authorization is consented or not."
              }
            }
          }
        }
      },
      "StatusMessage": {
        "type": "object",
        "description": "Operation status message object.",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the deployment operation."
          },
          "error": {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "ExpressionEvaluationOptions": {
        "properties": {
          "scope": {
            "type": "string",
            "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
            "enum": [
              "NotSpecified",
              "Outer",
              "Inner"
            ],
            "x-ms-enum": {
              "name": "ExpressionEvaluationOptionsScopeType",
              "modelAsString": true
            }
          }
        },
        "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template."
      },
      "ZoneMapping": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "description": "The location of the zone mapping."
          },
          "zones": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}